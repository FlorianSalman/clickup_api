openapi: 3.0.0
info:
  title: ClickUp API v2 Reference
  description: >
    The ClickUp API enables you to programmatically access and manage your
    ClickUp resources.


    ## Authentication

    The API supports two authentication methods:

    - **Personal API Token**: Use for testing and personal integrations. Add
    token to requests with header: `Authorization: pk_...`

    - **OAuth 2.0**: Required for building apps for other users. Uses
    authorization code flow.


    ## Getting Started

    Our [Getting Started Guide](https://developer.clickup.com/docs/index)
    provides a comprehensive overview of how to use the ClickUp API.
  version: 1.0.0
servers:
  - url: http://{{baseurl}}
components:
  securitySchemes:
    apikeyAuth:
      type: http
      scheme: apikey
security:
  - apikeyAuth: []
tags:
  - name: Audit Logs
  - name: Authorization
  - name: Attachments
  - name: Comments
  - name: Custom Task Types
  - name: Custom Fields
  - name: Docs
  - name: Folders
  - name: Goals
  - name: Guests
  - name: Lists
  - name: Members
  - name: Privacy and access
  - name: Roles
  - name: Shared Hierarchy
  - name: Spaces
  - name: Tags
  - name: Tasks
  - name: Task Checklists
  - name: Task Relationships
  - name: Templates
  - name: Workspaces
  - name: User Groups
  - name: Time Tracking
  - name: Time Tracking (Legacy)
  - name: Users
  - name: Views
  - name: Webhooks
paths:
  /v3/workspaces/{workspace_id}/auditlogs:
    post:
      tags:
        - Audit Logs
      summary: Create Workspace-level audit logs
      description: >-
        Create Workspace-level audit logs. Audit logs can only be created by the
        Workspace owner on Enterprise Plans.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                applicability: <string>
                filter:
                  workspaceId: <string>
                  userId:
                    - <string>
                    - <string>
                  userEmail:
                    - <string>
                    - <string>
                  eventType:
                    - <string>
                    - <string>
                  eventStatus: <string>
                  startTime: <number>
                  endTime: <number>
                pagination:
                  pageRows: <number>
                  pageTimestamp: <number>
                  pageDirection: <string>
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: workspace_id
          in: path
          schema:
            type: string
          required: true
          description: (Required) The ID of the Workspace.
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example: {}
  /v2/oauth/token:
    post:
      tags:
        - Authorization
      summary: Get Access Token
      description: >
        These are the routes for authing the API and going through the [OAuth
        flow](doc:authentication).\
         \
        Applications utilizing a personal API token don't use this endpoint.\
         \
        ***Note:** OAuth tokens are not supported when using the [**Try It**
        feature](doc:trytheapi) of our Reference docs. You can't try this
        endpoint from your web browser.*
      requestBody:
        content: {}
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: client_id
          in: query
          schema:
            type: string
          description: (Required) Oauth app client id
          example: <string>
        - name: client_secret
          in: query
          schema:
            type: string
          description: (Required) Oauth app client secret
          example: <string>
        - name: code
          in: query
          schema:
            type: string
          description: (Required) Code given in redirect url
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                access_token: <string>
  /v2/user:
    get:
      tags:
        - Authorization
      summary: Get Authorized User
      description: View the details of the authenticated user's ClickUp account.
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                user:
                  id: <integer>
                  username: <string>
                  color: <string>
                  profilePicture: <string>
  /v2/team:
    get:
      tags:
        - Workspaces
      summary: Get Authorized Workspaces
      description: View the Workspaces available to the authenticated user.
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                teams:
                  - id: <string>
                    name: <string>
                    color: <string>
                    avatar: <string>
                    members:
                      - user:
                          id: <integer>
                          username: <string>
                          color: <string>
                          profilePicture: <string>
                      - user:
                          id: <integer>
                          username: <string>
                          color: <string>
                          profilePicture: <string>
                  - id: <string>
                    name: <string>
                    color: <string>
                    avatar: <string>
                    members:
                      - user:
                          id: <integer>
                          username: <string>
                          color: <string>
                          profilePicture: <string>
                      - user:
                          id: <integer>
                          username: <string>
                          color: <string>
                          profilePicture: <string>
  /v2/task/{task_id}/attachment:
    post:
      tags:
        - Attachments
      summary: Create Task Attachment
      description: >-
        Upload a file to a task as an attachment. Files stored in the cloud
        cannot be used in this API request.\
         \
        ***Note:** This request uses multipart/form-data as the content type.*
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: multipart/form-data
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: custom_task_ids
          in: query
          schema:
            type: string
          description: >-
            If you want to reference a task by its custom task id, this value
            must be `true`.
          example: <boolean>
        - name: team_id
          in: query
          schema:
            type: string
          description: >-
            When the `custom_task_ids` parameter is set to `true`, the Workspace
            ID must be provided using the `team_id` parameter.
             \
            For example: `custom_task_ids=true&team_id=123`.
          example: <number>
        - name: task_id
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                id: <string>
                version: <string>
                date: <integer>
                title: <string>
                extension: <string>
                thumbnail_small: <string>
                thumbnail_large: <string>
                url: <string>
  /v2/task/{task_id}/comment:
    get:
      tags:
        - Comments
      summary: Get Task Comments
      description: >-
        View task comments. \
         \
        If you do not include the `start` and `start_id` parameters, this
        endpoint will return the most recent 25 comments.\
         \
        Use the `start` and `start id` parameters of the oldest comment to
        retrieve the next 25 comments.
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: custom_task_ids
          in: query
          schema:
            type: string
          description: >-
            If you want to reference a task by it's custom task id, this value
            must be `true`.
          example: <boolean>
        - name: team_id
          in: query
          schema:
            type: string
          description: >-
            When the `custom_task_ids` parameter is set to `true`, the Workspace
            ID must be provided using the `team_id` parameter.
             \
            For example: `custom_task_ids=true&team_id=123`.
          example: <number>
        - name: start
          in: query
          schema:
            type: string
          description: Enter the `date` of a task comment using Unix time in milliseconds.
          example: <integer>
        - name: start_id
          in: query
          schema:
            type: string
          description: Enter the Comment `id` of a task comment.
          example: <string>
        - name: task_id
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                comments:
                  - id: <string>
                    comment:
                      - text: <string>
                      - text: <string>
                    comment_text: <string>
                    user:
                      id: <integer>
                      username: <string>
                      initials: <string>
                      email: <string>
                      color: <string>
                      profilePicture: <string>
                    resolved: <boolean>
                    assignee:
                      id: <integer>
                      username: <string>
                      email: <string>
                      color: <string>
                      initials: <string>
                      profilePicture: <string>
                    assigned_by:
                      id: <integer>
                      username: <string>
                      initials: <string>
                      email: <string>
                      color: <string>
                      profilePicture: <string>
                    reactions:
                      - <string>
                      - <string>
                    date: <string>
                    reply_count: <string>
                  - id: <string>
                    comment:
                      - text: <string>
                      - text: <string>
                    comment_text: <string>
                    user:
                      id: <integer>
                      username: <string>
                      initials: <string>
                      email: <string>
                      color: <string>
                      profilePicture: <string>
                    resolved: <boolean>
                    assignee:
                      id: <integer>
                      username: <string>
                      email: <string>
                      color: <string>
                      initials: <string>
                      profilePicture: <string>
                    assigned_by:
                      id: <integer>
                      username: <string>
                      initials: <string>
                      email: <string>
                      color: <string>
                      profilePicture: <string>
                    reactions:
                      - <string>
                      - <string>
                    date: <string>
                    reply_count: <string>
    post:
      tags:
        - Comments
      summary: Create Task Comment
      description: Add a new comment to a task.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                comment_text: <string>
                notify_all: <boolean>
                assignee: <integer>
                group_assignee: <integer>
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: custom_task_ids
          in: query
          schema:
            type: string
          description: >-
            If you want to reference a task by it's custom task id, this value
            must be `true`.
          example: <boolean>
        - name: team_id
          in: query
          schema:
            type: string
          description: >-
            When the `custom_task_ids` parameter is set to `true`, the Workspace
            ID must be provided using the `team_id` parameter.
             \
            For example: `custom_task_ids=true&team_id=123`.
          example: <number>
        - name: task_id
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                id: <string>
                hist_id: <string>
                date: <integer>
  /v2/view/{view_id}/comment:
    get:
      tags:
        - Comments
      summary: Get Chat View Comments
      description: >-
        View comments from a Chat view. \
         \
        If you do not include the `start` and `start_id` parameters, this
        endpoint will return the most recent 25 comments.\
         \
        Use the `start` and `start id` parameters of the oldest comment to
        retrieve the next 25 comments.
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: start
          in: query
          schema:
            type: string
          description: >-
            Enter the `date` of a Chat view comment using Unix time in
            milliseconds.
          example: <integer>
        - name: start_id
          in: query
          schema:
            type: string
          description: Enter the Comment `id` of a Chat view comment.
          example: <string>
        - name: view_id
          in: path
          schema:
            type: string
          required: true
          description: (Required) 105 (string)
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                comments:
                  - id: <string>
                    comment:
                      - text: <string>
                      - text: <string>
                    comment_text: <string>
                    user:
                      id: <integer>
                      username: <string>
                      initials: <string>
                      email: <string>
                      color: <string>
                      profilePicture: <string>
                    resolved: <boolean>
                    assignee: <string,null>
                    assigned_by: <string,null>
                    reactions:
                      - <string>
                      - <string>
                    date: <string>
                    reply_count: <string>
                  - id: <string>
                    comment:
                      - text: <string>
                      - text: <string>
                    comment_text: <string>
                    user:
                      id: <integer>
                      username: <string>
                      initials: <string>
                      email: <string>
                      color: <string>
                      profilePicture: <string>
                    resolved: <boolean>
                    assignee: <string,null>
                    assigned_by: <string,null>
                    reactions:
                      - <string>
                      - <string>
                    date: <string>
                    reply_count: <string>
    post:
      tags:
        - Comments
      summary: Create Chat View Comment
      description: Add a new comment to a Chat view.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                comment_text: <string>
                notify_all: <boolean>
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: view_id
          in: path
          schema:
            type: string
          required: true
          description: (Required) 105 (string)
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                id: <string>
                hist_id: <string>
                date: <integer>
  /v2/list/{list_id}/comment:
    get:
      tags:
        - Comments
      summary: Get List Comments
      description: >-
        View the comments added to a List. \
         \
        If you do not include the `start` and `start_id` parameters, this
        endpoint will return the most recent 25 comments.\
         \
        Use the `start` and `start id` parameters of the oldest comment to
        retrieve the next 25 comments.
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: start
          in: query
          schema:
            type: string
          description: >-
            Enter the `date` of a List info comment using Unix time in
            milliseconds.
          example: <integer>
        - name: start_id
          in: query
          schema:
            type: string
          description: Enter the Comment `id` of a List info comment.
          example: <string>
        - name: list_id
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <number>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                comments:
                  - id: <string>
                    comment:
                      - text: <string>
                      - text: <string>
                    comment_text: <string>
                    user:
                      id: <integer>
                      username: <string>
                      initials: <string>
                      email: <string>
                      color: <string>
                      profilePicture: <string>
                    resolved: <boolean>
                    assignee:
                      id: <integer>
                      username: <string>
                      email: <string>
                      color: <string>
                      initials: <string>
                      profilePicture: <string>
                    assigned_by:
                      id: <integer>
                      username: <string>
                      initials: <string>
                      email: <string>
                      color: <string>
                      profilePicture: <string>
                    reactions:
                      - <string>
                      - <string>
                    date: <string>
                    reply_count: <string>
                  - id: <string>
                    comment:
                      - text: <string>
                      - text: <string>
                    comment_text: <string>
                    user:
                      id: <integer>
                      username: <string>
                      initials: <string>
                      email: <string>
                      color: <string>
                      profilePicture: <string>
                    resolved: <boolean>
                    assignee:
                      id: <integer>
                      username: <string>
                      email: <string>
                      color: <string>
                      initials: <string>
                      profilePicture: <string>
                    assigned_by:
                      id: <integer>
                      username: <string>
                      initials: <string>
                      email: <string>
                      color: <string>
                      profilePicture: <string>
                    reactions:
                      - <string>
                      - <string>
                    date: <string>
                    reply_count: <string>
    post:
      tags:
        - Comments
      summary: Create List Comment
      description: Add a comment to a List.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                comment_text: <string>
                assignee: <integer>
                notify_all: <boolean>
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: list_id
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <number>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                id: <string>
                hist_id: <string>
                date: <integer>
  /v2/comment/{comment_id}:
    put:
      tags:
        - Comments
      summary: Update Comment
      description: >-
        Replace the content of a task commment, assign a comment, and mark a
        comment as resolved.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                comment_text: <string>
                assignee: <integer>
                resolved: <boolean>
                group_assignee: <integer>
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: comment_id
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <number>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example: {}
    delete:
      tags:
        - Comments
      summary: Delete Comment
      description: Delete a task comment.
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: comment_id
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <number>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example: {}
  /v2/comment/{comment_id}/reply:
    get:
      tags:
        - Comments
      summary: Get Threaded Comments
      description: View threaded comments. The parent comment is not included.
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: comment_id
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <number>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                comments:
                  - id: <string>
                    comment:
                      - text: <string>
                      - text: <string>
                    comment_text: <string>
                    user:
                      id: <integer>
                      username: <string>
                      initials: <string>
                      email: <string>
                      color: <string>
                      profilePicture: <string>
                    resolved: <boolean>
                    assignee:
                      id: <integer>
                      username: <string>
                      email: <string>
                      color: <string>
                      initials: <string>
                      profilePicture: <string>
                    assigned_by:
                      id: <integer>
                      username: <string>
                      initials: <string>
                      email: <string>
                      color: <string>
                      profilePicture: <string>
                    reactions:
                      - <string>
                      - <string>
                    date: <string>
                    reply_count: <string>
                  - id: <string>
                    comment:
                      - text: <string>
                      - text: <string>
                    comment_text: <string>
                    user:
                      id: <integer>
                      username: <string>
                      initials: <string>
                      email: <string>
                      color: <string>
                      profilePicture: <string>
                    resolved: <boolean>
                    assignee:
                      id: <integer>
                      username: <string>
                      email: <string>
                      color: <string>
                      initials: <string>
                      profilePicture: <string>
                    assigned_by:
                      id: <integer>
                      username: <string>
                      initials: <string>
                      email: <string>
                      color: <string>
                      profilePicture: <string>
                    reactions:
                      - <string>
                      - <string>
                    date: <string>
                    reply_count: <string>
    post:
      tags:
        - Comments
      summary: Create Threaded Comment
      description: Create a threaded comment.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                comment_text: <string>
                notify_all: <boolean>
                assignee: <integer>
                group_assignee: <integer>
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: comment_id
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <number>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example: {}
  /v2/team/{team_id}/custom_item:
    get:
      tags:
        - Custom Task Types
      summary: Get Custom Task Types
      description: View the custom task types available in a Workspace.
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: team_id
          in: path
          schema:
            type: string
          required: true
          description: (Required) Workspace ID
          example: <number>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                custom_items:
                  - id: <integer>
                    name: <string>
                    name_plural: <string>
                    description: <string>
                  - id: <integer>
                    name: <string>
                    name_plural: <string>
                    description: <string>
  /v2/list/{list_id}/field:
    get:
      tags:
        - Custom Fields
      summary: Get List Custom Fields
      description: View the Custom Fields you have access to in a specific List.
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: list_id
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <number>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                fields:
                  - id: <string>
                    name: <string>
                    type: <string>
                    type_config:
                      type:
                        - string
                        - 'null'
                      default: <string,null>
                    date_created: <string>
                    hide_from_guests: <boolean>
                  - id: <string>
                    name: <string>
                    type: <string>
                    type_config:
                      type:
                        - string
                        - 'null'
                      default: <string,null>
                    date_created: <string>
                    hide_from_guests: <boolean>
  /v2/folder/{folder_id}/field:
    get:
      tags:
        - Custom Fields
      summary: Get Folder Custom Fields
      description: >-
        View the Custom Fields you have access to in a specific Folder. Get
        Folder Custom Fields only returns Custom Fields created at the Folder
        level. Custom Fields created at the List level are not included.
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: folder_id
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <number>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                fields:
                  - id: <string>
                    name: <string>
                    type: <string>
                    type_config:
                      type:
                        - string
                        - 'null'
                      default: <string,null>
                    date_created: <string>
                    hide_from_guests: <boolean>
                  - id: <string>
                    name: <string>
                    type: <string>
                    type_config:
                      type:
                        - string
                        - 'null'
                      default: <string,null>
                    date_created: <string>
                    hide_from_guests: <boolean>
  /v2/space/{space_id}/field:
    get:
      tags:
        - Custom Fields
      summary: Get Space Custom Fields
      description: >-
        View the Custom Fields you have access to in a specific Space. Get Space
        Custom Fields only returns Custom Fields created at the Space level.
        Custom Fields created at the Folder and List level are not included.
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: space_id
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <number>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                fields:
                  - id: <string>
                    name: <string>
                    type: <string>
                    type_config:
                      type:
                        - string
                        - 'null'
                      default: <string,null>
                    date_created: <string>
                    hide_from_guests: <boolean>
                  - id: <string>
                    name: <string>
                    type: <string>
                    type_config:
                      type:
                        - string
                        - 'null'
                      default: <string,null>
                    date_created: <string>
                    hide_from_guests: <boolean>
  /v2/team/{team_id}/field:
    get:
      tags:
        - Custom Fields
      summary: Get Workspace Custom Fields
      description: >-
        View the Custom Fields you have access to in a specific Workspace. Get
        Workspace Custom Fields only returns Custom Fields created at the
        Workspace level. Custom Fields created at the Space, Folder, and List
        level are not included.
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: team_id
          in: path
          schema:
            type: string
          required: true
          description: (Required) Workspace ID
          example: <number>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                fields:
                  - id: <string>
                    name: <string>
                    type: <string>
                    type_config:
                      type:
                        - string
                        - 'null'
                      default: <string,null>
                    date_created: <string>
                    hide_from_guests: <boolean>
                  - id: <string>
                    name: <string>
                    type: <string>
                    type_config:
                      type:
                        - string
                        - 'null'
                      default: <string,null>
                    date_created: <string>
                    hide_from_guests: <boolean>
  /v2/task/{task_id}/field/{field_id}:
    post:
      tags:
        - Custom Fields
      summary: Set Custom Field Value
      description: >-
        Add data to a Custom field on a task. \
         \
        You'll need to know the `task_id` of the task you want to update, and
        the universal unique identifier (UUID) `field_id` of the Custom Field
        you want to set. \
         \
        You can use [Get Accessible Custom
        Fields](ref:getaccessiblecustomfields) or the [Get Task](ref:gettask)
        endpoint to find the `field_id`.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                value: <string>
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: custom_task_ids
          in: query
          schema:
            type: string
          description: >-
            If you want to reference a task by its Custom Task ID, this value
            must be `true`.
          example: <boolean>
        - name: team_id
          in: query
          schema:
            type: string
          description: >-
            When the `custom_task_ids` parameter is set to `true`, the Workspace
            ID must be provided using the `team_id` parameter.

             \
            For example: `custom_task_ids=true&team_id=123`.
          example: <number>
        - name: task_id
          in: path
          schema:
            type: string
          required: true
          description: (Required) Enter the task ID of the task you want to update.
          example: <string>
        - name: field_id
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) Enter the universal unique identifier (UUID) of the
            Custom Field you want to set.
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example: {}
    delete:
      tags:
        - Custom Fields
      summary: Remove Custom Field Value
      description: >-
        Remove the data from a Custom Field on a task. This does not delete the
        option from the Custom Field.
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: custom_task_ids
          in: query
          schema:
            type: string
          description: >-
            If you want to reference a task by it's custom task id, this value
            must be `true`.
          example: <boolean>
        - name: team_id
          in: query
          schema:
            type: string
          description: >-
            When the `custom_task_ids` parameter is set to `true`, the Workspace
            ID must be provided using the `team_id` parameter.
             \
            For example: `custom_task_ids=true&team_id=123`.
          example: <number>
        - name: task_id
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: field_id
          in: path
          schema:
            type: string
          required: true
          description: (Required) b8a8-48d8-a0c6-b4200788a683 (uuid)
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example: {}
  /v3/workspaces/{workspaceId}/docs:
    get:
      tags:
        - Docs
      summary: Search Docs
      description: >-
        View the Docs in your Workspace. You can only view information of Docs
        you can access.
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: query
          schema:
            type: string
          description: Filter results to a single Doc with the given Doc ID.
          example: <string>
        - name: creator
          in: query
          schema:
            type: string
          description: Filter results to Docs created by the user with the given user ID.
          example: <number>
        - name: deleted
          in: query
          schema:
            type: boolean
          description: Filter results to return deleted Docs.
          example: 'false'
        - name: archived
          in: query
          schema:
            type: boolean
          description: Filter results to return archived Docs.
          example: 'false'
        - name: parent_id
          in: query
          schema:
            type: string
          description: >-
            Filter results to children of a parent Doc with the given parent Doc
            ID.
          example: <string>
        - name: parent_type
          in: query
          schema:
            type: string
          description: >-
            Filter results to children of the given parent Doc type. For
            example, `SPACE`, `FOLDER`, `LIST`, `EVERYTHING`, `WORKSPACE`.
          example: <string>
        - name: limit
          in: query
          schema:
            type: integer
          description: The maximum number of results to retrieve for each page.
          example: '50'
        - name: next_cursor
          in: query
          schema:
            type: string
          description: The cursor to use to get the next page of results.
          example: <string>
        - name: workspaceId
          in: path
          schema:
            type: string
          required: true
          description: (Required) The ID of your Workspace.
          example: <number>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                docs:
                  - id: <string>
                    date_created: <number>
                    name: <string>
                    type: null
                    parent:
                      id: <string>
                      type: <number>
                    public: <boolean>
                    workspace_id: <number>
                    creator: <number>
                    deleted: <boolean>
                    archived: <boolean>
                    date_updated: <number>
                    date_deleted: <number>
                    deleted_by: <number>
                    archived_by: <number>
                    date_archived: <number>
                  - id: <string>
                    date_created: <number>
                    name: <string>
                    type: null
                    parent:
                      id: <string>
                      type: <number>
                    public: <boolean>
                    workspace_id: <number>
                    creator: <number>
                    deleted: <boolean>
                    archived: <boolean>
                    date_updated: <number>
                    date_deleted: <number>
                    deleted_by: <number>
                    archived_by: <number>
                    date_archived: <number>
                next_cursor: <string>
    post:
      tags:
        - Docs
      summary: Create Doc
      description: 'Create a new Doc. '
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                name: <string>
                parent:
                  id: <string>
                  type: <number>
                visibility: <string>
                create_page: true
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: workspaceId
          in: path
          schema:
            type: string
          required: true
          description: (Required) The ID of the Workspace.
          example: <number>
      responses:
        '201':
          description: Created
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                id: <string>
                date_created: <number>
                name: <string>
                type: null
                parent:
                  id: <string>
                  type: <number>
                public: <boolean>
                workspace_id: <number>
                creator: <number>
                date_updated: <number>
                archived: <boolean>
                archived_by: <number>
                date_archived: <number>
                date_deleted: <number>
                deleted: <boolean>
                deleted_by: <number>
                page_defaults:
                  font: <string>
                  font_size: <number>
                  line_height: <number>
                  page_width: <number>
                  paragraph_spacing: <number>
                  show_author_header: <boolean>
                  show_contributor_header: <boolean>
                  show_cover_header: <boolean>
                  show_date_header: <boolean>
                  show_page_outline: <boolean>
                  show_sub_pages: <boolean>
                  sub_page_size: <string>
                  show_sub_title_header: <boolean>
                  show_title_icon_header: <boolean>
                  show_relationships: <boolean>
                  show_relationships_compact: <boolean>
                  show_sub_pages_author: <boolean>
                  show_sub_pages_thumbnail: <boolean>
                  show_sub_pages_compact: <boolean>
                  sub_pages_style: <string>
  /v3/workspaces/{workspaceId}/docs/{docId}:
    get:
      tags:
        - Docs
      summary: Get Doc
      description: View information about a Doc.
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: workspaceId
          in: path
          schema:
            type: string
          required: true
          description: (Required) The ID of the Workspace.
          example: <number>
        - name: docId
          in: path
          schema:
            type: string
          required: true
          description: (Required) The ID of the Doc.
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                id: <string>
                date_created: <number>
                name: <string>
                type: null
                parent:
                  id: <string>
                  type: <number>
                public: <boolean>
                workspace_id: <number>
                creator: <number>
                date_updated: <number>
                archived: <boolean>
                archived_by: <number>
                date_archived: <number>
                date_deleted: <number>
                deleted: <boolean>
                deleted_by: <number>
                page_defaults:
                  font: <string>
                  font_size: <number>
                  line_height: <number>
                  page_width: <number>
                  paragraph_spacing: <number>
                  show_author_header: <boolean>
                  show_contributor_header: <boolean>
                  show_cover_header: <boolean>
                  show_date_header: <boolean>
                  show_page_outline: <boolean>
                  show_sub_pages: <boolean>
                  sub_page_size: <string>
                  show_sub_title_header: <boolean>
                  show_title_icon_header: <boolean>
                  show_relationships: <boolean>
                  show_relationships_compact: <boolean>
                  show_sub_pages_author: <boolean>
                  show_sub_pages_thumbnail: <boolean>
                  show_sub_pages_compact: <boolean>
                  sub_pages_style: <string>
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /v3/workspaces/{workspaceId}/docs/{docId}/pageListing:
    get:
      tags:
        - Docs
      summary: Get Doc PageListing
      description: View the PageListing for a Doc.
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: max_page_depth
          in: query
          schema:
            type: number
          description: >-
            The maximum depth to retrieve pages and subpages. A value less than
            0 does not limit the depth.
          example: '-1'
        - name: workspaceId
          in: path
          schema:
            type: string
          required: true
          description: (Required) The ID of the Workspace.
          example: <number>
        - name: docId
          in: path
          schema:
            type: string
          required: true
          description: (Required) The ID of the Doc.
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                - id: <string>
                  doc_id: <string>
                  workspace_id: <number>
                  name: <string>
                  parent_page_id: <string>
                  pages:
                    - id: <string>
                      doc_id: <string>
                      name: <string>
                      pages: <array>
                    - id: <string>
                      doc_id: <string>
                      name: <string>
                      pages: <array>
                - id: <string>
                  doc_id: <string>
                  workspace_id: <number>
                  name: <string>
                  parent_page_id: <string>
                  pages:
                    - id: <string>
                      doc_id: <string>
                      name: <string>
                      pages: <array>
                    - id: <string>
                      doc_id: <string>
                      name: <string>
                      pages: <array>
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /v3/workspaces/{workspaceId}/docs/{docId}/pages:
    get:
      tags:
        - Docs
      summary: Get Doc pages
      description: View pages belonging to a Doc.
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: max_page_depth
          in: query
          schema:
            type: number
          description: >-
            The maximum depth to retrieve pages and subpages. A value less than
            0 does not limit the depth.
          example: '-1'
        - name: content_format
          in: query
          schema:
            type: string
          description: >-
            The format to return the page content in. For example, `text/md` for
            markdown or `text/plain` for plain.
          example: text/md
        - name: workspaceId
          in: path
          schema:
            type: string
          required: true
          description: (Required) The ID of the Workspace.
          example: <number>
        - name: docId
          in: path
          schema:
            type: string
          required: true
          description: (Required) The ID of the Doc.
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                - id: <string>
                  doc_id: <string>
                  workspace_id: <number>
                  name: <string>
                  date_created: <number>
                  content: <string>
                  creator_id: <number>
                  authors:
                    - <number>
                    - <number>
                  parent_page_id: <string>
                  pages: <array>
                  sub_title: <string>
                  date_updated: <number>
                  avatar:
                    color: <string>
                    value: <string>
                    source: <string>
                  deleted: <boolean>
                  deleted_by: <number>
                  date_deleted: <number>
                  date_edited: <number>
                  edited_by: <number>
                  archived: <boolean>
                  archived_by: <number>
                  date_archived: <number>
                  contributors:
                    - <number>
                    - <number>
                  cover:
                    color: <string>
                    image_url: <string>
                    position:
                      x: <number>
                      'y': <number>
                  protected: <boolean>
                  protected_by: <number>
                  protected_note: <string>
                  presentation_details:
                    font: <string>
                    font_size: <number>
                    line_height: <number>
                    page_width: <number>
                    paragraph_spacing: <number>
                    show_author_header: <boolean>
                    show_contributor_header: <boolean>
                    show_cover_header: <boolean>
                    show_date_header: <boolean>
                    show_page_outline: <boolean>
                    show_sub_pages: <boolean>
                    sub_page_size: <string>
                    show_sub_title_header: <boolean>
                    show_title_icon_header: <boolean>
                    show_relationships: <boolean>
                    show_relationships_compact: <boolean>
                    show_sub_pages_author: <boolean>
                    show_sub_pages_thumbnail: <boolean>
                    show_sub_pages_compact: <boolean>
                    sub_pages_style: <string>
                - id: <string>
                  doc_id: <string>
                  workspace_id: <number>
                  name: <string>
                  date_created: <number>
                  content: <string>
                  creator_id: <number>
                  authors:
                    - <number>
                    - <number>
                  parent_page_id: <string>
                  pages: <array>
                  sub_title: <string>
                  date_updated: <number>
                  avatar:
                    color: <string>
                    value: <string>
                    source: <string>
                  deleted: <boolean>
                  deleted_by: <number>
                  date_deleted: <number>
                  date_edited: <number>
                  edited_by: <number>
                  archived: <boolean>
                  archived_by: <number>
                  date_archived: <number>
                  contributors:
                    - <number>
                    - <number>
                  cover:
                    color: <string>
                    image_url: <string>
                    position:
                      x: <number>
                      'y': <number>
                  protected: <boolean>
                  protected_by: <number>
                  protected_note: <string>
                  presentation_details:
                    font: <string>
                    font_size: <number>
                    line_height: <number>
                    page_width: <number>
                    paragraph_spacing: <number>
                    show_author_header: <boolean>
                    show_contributor_header: <boolean>
                    show_cover_header: <boolean>
                    show_date_header: <boolean>
                    show_page_outline: <boolean>
                    show_sub_pages: <boolean>
                    sub_page_size: <string>
                    show_sub_title_header: <boolean>
                    show_title_icon_header: <boolean>
                    show_relationships: <boolean>
                    show_relationships_compact: <boolean>
                    show_sub_pages_author: <boolean>
                    show_sub_pages_thumbnail: <boolean>
                    show_sub_pages_compact: <boolean>
                    sub_pages_style: <string>
    post:
      tags:
        - Docs
      summary: Create page
      description: Create a page in a Doc.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                parent_page_id: null
                name: ''
                sub_title: null
                content: ''
                content_format: text/md
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: workspaceId
          in: path
          schema:
            type: string
          required: true
          description: (Required) The ID of the Workspace.
          example: <number>
        - name: docId
          in: path
          schema:
            type: string
          required: true
          description: (Required) The ID of the Doc.
          example: <string>
      responses:
        '201':
          description: Created
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                id: <string>
                doc_id: <string>
                workspace_id: <number>
                name: <string>
                date_created: <number>
                content: <string>
                creator_id: <number>
                authors:
                  - <number>
                  - <number>
                parent_page_id: <string>
                pages: <array>
                sub_title: <string>
                date_updated: <number>
                avatar:
                  color: <string>
                  value: <string>
                  source: <string>
                deleted: <boolean>
                deleted_by: <number>
                date_deleted: <number>
                date_edited: <number>
                edited_by: <number>
                archived: <boolean>
                archived_by: <number>
                date_archived: <number>
                contributors:
                  - <number>
                  - <number>
                cover:
                  color: <string>
                  image_url: <string>
                  position:
                    x: <number>
                    'y': <number>
                protected: <boolean>
                protected_by: <number>
                protected_note: <string>
                presentation_details:
                  font: <string>
                  font_size: <number>
                  line_height: <number>
                  page_width: <number>
                  paragraph_spacing: <number>
                  show_author_header: <boolean>
                  show_contributor_header: <boolean>
                  show_cover_header: <boolean>
                  show_date_header: <boolean>
                  show_page_outline: <boolean>
                  show_sub_pages: <boolean>
                  sub_page_size: <string>
                  show_sub_title_header: <boolean>
                  show_title_icon_header: <boolean>
                  show_relationships: <boolean>
                  show_relationships_compact: <boolean>
                  show_sub_pages_author: <boolean>
                  show_sub_pages_thumbnail: <boolean>
                  show_sub_pages_compact: <boolean>
                  sub_pages_style: <string>
  /v3/workspaces/{workspaceId}/docs/{docId}/pages/{pageId}:
    get:
      tags:
        - Docs
      summary: Get page
      description: >-
        View the information about a page in a Doc. Due to markdown format
        limitations, some content elements [will not be displayed exactly as
        they appear in ClickUp.](doc:docsimportexportlimitations/)
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: content_format
          in: query
          schema:
            type: string
          description: >-
            The format to return the page content in. For example, `text/md` for
            markdown or `text/plain` for plain.
          example: text/md
        - name: workspaceId
          in: path
          schema:
            type: string
          required: true
          description: (Required) The ID of the Workspace.
          example: <number>
        - name: docId
          in: path
          schema:
            type: string
          required: true
          description: (Required) The ID of the Doc.
          example: <string>
        - name: pageId
          in: path
          schema:
            type: string
          required: true
          description: (Required) The ID of the page.
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                id: <string>
                doc_id: <string>
                workspace_id: <number>
                name: <string>
                date_created: <number>
                content: <string>
                creator_id: <number>
                authors:
                  - <number>
                  - <number>
                parent_page_id: <string>
                pages: <array>
                sub_title: <string>
                date_updated: <number>
                avatar:
                  color: <string>
                  value: <string>
                  source: <string>
                deleted: <boolean>
                deleted_by: <number>
                date_deleted: <number>
                date_edited: <number>
                edited_by: <number>
                archived: <boolean>
                archived_by: <number>
                date_archived: <number>
                contributors:
                  - <number>
                  - <number>
                cover:
                  color: <string>
                  image_url: <string>
                  position:
                    x: <number>
                    'y': <number>
                protected: <boolean>
                protected_by: <number>
                protected_note: <string>
                presentation_details:
                  font: <string>
                  font_size: <number>
                  line_height: <number>
                  page_width: <number>
                  paragraph_spacing: <number>
                  show_author_header: <boolean>
                  show_contributor_header: <boolean>
                  show_cover_header: <boolean>
                  show_date_header: <boolean>
                  show_page_outline: <boolean>
                  show_sub_pages: <boolean>
                  sub_page_size: <string>
                  show_sub_title_header: <boolean>
                  show_title_icon_header: <boolean>
                  show_relationships: <boolean>
                  show_relationships_compact: <boolean>
                  show_sub_pages_author: <boolean>
                  show_sub_pages_thumbnail: <boolean>
                  show_sub_pages_compact: <boolean>
                  sub_pages_style: <string>
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                type: string
              example: ''
    put:
      tags:
        - Docs
      summary: Edit page
      description: Edit a page in a Doc.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                name: <string>
                sub_title: <string>
                content: <string>
                content_edit_mode: replace
                content_format: text/md
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: workspaceId
          in: path
          schema:
            type: string
          required: true
          description: (Required) The ID of the Workspace.
          example: <number>
        - name: docId
          in: path
          schema:
            type: string
          required: true
          description: (Required) The ID of the Doc.
          example: <string>
        - name: pageId
          in: path
          schema:
            type: string
          required: true
          description: (Required) The ID of the page.
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example: {}
  /v2/space/{space_id}/folder:
    get:
      tags:
        - Folders
      summary: Get Folders
      description: View the Folders in a Space.
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: archived
          in: query
          schema:
            type: string
          example: <boolean>
        - name: space_id
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <number>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                folders:
                  id: <string>
                  name: <string>
                  orderindex: <integer>
                  override_statuses: <boolean>
                  hidden: <boolean>
                  space:
                    id: <string>
                    name: <string>
                    access: <boolean>
                  task_count: <string>
                  lists:
                    - <string>
                    - <string>
    post:
      tags:
        - Folders
      summary: Create Folder
      description: Add a new Folder to a Space.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                name: <string>
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: space_id
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <number>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                id: <string>
                name: <string>
                orderindex: <integer>
                override_statuses: <boolean>
                hidden: <boolean>
                space:
                  id: <string>
                  name: <string>
                  access: <boolean>
                task_count: <string>
  /v2/folder/{folder_id}:
    get:
      tags:
        - Folders
      summary: Get Folder
      description: View the Lists within a Folder.
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: folder_id
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <number>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                id: <string>
                name: <string>
                orderindex: <integer>
                override_statuses: <boolean>
                hidden: <boolean>
                space:
                  id: <string>
                  name: <string>
                  access: <boolean>
                task_count: <string>
                lists:
                  - <string>
                  - <string>
    put:
      tags:
        - Folders
      summary: Update Folder
      description: Rename a Folder.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                name: <string>
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: folder_id
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <number>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                id: <string>
                name: <string>
                orderindex: <integer>
                override_statuses: <boolean>
                hidden: <boolean>
                space:
                  id: <string>
                  name: <string>
                  access: <boolean>
                task_count: <string>
    delete:
      tags:
        - Folders
      summary: Delete Folder
      description: Delete a Folder from your Workspace.
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: folder_id
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <number>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example: {}
  /v2/space/{space_id}/folder_template/{template_id}:
    post:
      tags:
        - Folders
      summary: Create Folder from template
      description: >-
        Creates a new folder based on an existing template, copying all
        specified attributes and relationships.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                name: <string>
                options:
                  return_immediately: <boolean>
                  content: <string>
                  time_estimate: <boolean>
                  automation: <boolean>
                  include_views: <boolean>
                  old_due_date: <boolean>
                  old_start_date: <boolean>
                  old_followers: <boolean>
                  comment_attachments: <boolean>
                  recur_settings: <boolean>
                  old_tags: <boolean>
                  old_statuses: <boolean>
                  subtasks: <boolean>
                  custom_type: <boolean>
                  old_assignees: <boolean>
                  attachments: <boolean>
                  comment: <boolean>
                  old_status: <boolean>
                  external_dependencies: <boolean>
                  internal_dependencies: <boolean>
                  priority: <boolean>
                  custom_fields: <boolean>
                  old_checklists: <boolean>
                  relationships: <boolean>
                  old_subtask_assignees: <boolean>
                  start_date: <dateTime>
                  due_date: <dateTime>
                  remap_start_date: <boolean>
                  skip_weekends: <boolean>
                  archived: 2
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: space_id
          in: path
          schema:
            type: string
          required: true
          description: (Required) ID of the Space where the Folder will be created
          example: <string>
        - name: template_id
          in: path
          schema:
            type: string
          required: true
          description: (Required) ID of the Folder template to use.
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                id: <integer>
                folder:
                  id: <string>
                  name: <string>
                  orderindex: <integer>
                  override_statuses: <boolean>
                  hidden: <boolean>
                  space:
                    id: <string>
                    name: <string>
                    access: <boolean>
                  task_count: <string>
                  archived: <boolean>
                  statuses:
                    - id: <string>
                      status: <string>
                      orderindex: <integer>
                      color: <string>
                      type: <string>
                    - id: <string>
                      status: <string>
                      orderindex: <integer>
                      color: <string>
                      type: <string>
                  permission_level: <string>
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                error: <string>
                ECODE: <string>
        '401':
          description: Unauthorized
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '403':
          description: Forbidden
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '500':
          description: Internal Server Error
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /v2/team/{team_id}/goal:
    get:
      tags:
        - Goals
      summary: Get Goals
      description: View the Goals available in a Workspace.
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: include_completed
          in: query
          schema:
            type: string
          example: <boolean>
        - name: team_id
          in: path
          schema:
            type: string
          required: true
          description: (Required) Workspace ID
          example: <number>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                goals:
                  - id: <string>
                    pretty_id: <string>
                    name: <string>
                    team_id: <string>
                    creator: <integer>
                    owner: <string,null>
                    color: <string>
                    date_created: <string>
                    start_date: <string,null>
                    due_date: <string>
                    description: <string>
                    private: <boolean>
                    archived: <boolean>
                    multiple_owners: <boolean>
                    editor_token: <string>
                    date_updated: <string>
                    last_update: <string>
                    folder_id: <string,null>
                    pinned: <boolean>
                    owners:
                      - <string>
                      - <string>
                    key_result_count: <integer>
                    members:
                      - id: <integer>
                        username: <string>
                        email: <string>
                        color: <string>
                        permission_level: <string>
                        profilePicture: <string>
                        initials: <string>
                        isCreator: <boolean>
                      - id: <integer>
                        username: <string>
                        email: <string>
                        color: <string>
                        permission_level: <string>
                        profilePicture: <string>
                        initials: <string>
                        isCreator: <boolean>
                    group_members:
                      - <string>
                      - <string>
                    percent_completed: <integer>
                  - id: <string>
                    pretty_id: <string>
                    name: <string>
                    team_id: <string>
                    creator: <integer>
                    owner: <string,null>
                    color: <string>
                    date_created: <string>
                    start_date: <string,null>
                    due_date: <string>
                    description: <string>
                    private: <boolean>
                    archived: <boolean>
                    multiple_owners: <boolean>
                    editor_token: <string>
                    date_updated: <string>
                    last_update: <string>
                    folder_id: <string,null>
                    pinned: <boolean>
                    owners:
                      - <string>
                      - <string>
                    key_result_count: <integer>
                    members:
                      - id: <integer>
                        username: <string>
                        email: <string>
                        color: <string>
                        permission_level: <string>
                        profilePicture: <string>
                        initials: <string>
                        isCreator: <boolean>
                      - id: <integer>
                        username: <string>
                        email: <string>
                        color: <string>
                        permission_level: <string>
                        profilePicture: <string>
                        initials: <string>
                        isCreator: <boolean>
                    group_members:
                      - <string>
                      - <string>
                    percent_completed: <integer>
                folders:
                  - id: <string>
                    name: <string>
                    team_id: <string>
                    private: <boolean>
                    date_created: <string>
                    creator: <integer>
                    goal_count: <integer>
                    members:
                      - id: <integer>
                        email: <string>
                        username: <string>
                        color: <string>
                        permission_level: <string>
                        date_added: <integer>
                        added_by: <integer>
                        initials: <string>
                        profilePicture: <string>
                      - id: <integer>
                        email: <string>
                        username: <string>
                        color: <string>
                        permission_level: <string>
                        date_added: <integer>
                        added_by: <integer>
                        initials: <string>
                        profilePicture: <string>
                    goals:
                      - id: <string>
                        pretty_id: <string>
                        name: <string>
                        team_id: <string>
                        creator: <integer>
                        owner: <string,null>
                        color: <string>
                        date_created: <string>
                        start_date: <string,null>
                        due_date: <string>
                        description: <string>
                        private: <boolean>
                        archived: <boolean>
                        multiple_owners: <boolean>
                        editor_token: <string>
                        date_updated: <string>
                        last_update: <string>
                        folder_id: <string>
                        folder_access: <boolean>
                        pinned: <boolean>
                        owners:
                          - <string>
                          - <string>
                        key_result_count: <integer>
                        members:
                          - id: <integer>
                            username: <string>
                            email: <string>
                            color: <string>
                            permission_level: <string>
                            profilePicture: <string>
                            initials: <string>
                            isCreator: <boolean>
                          - id: <integer>
                            username: <string>
                            email: <string>
                            color: <string>
                            permission_level: <string>
                            profilePicture: <string>
                            initials: <string>
                            isCreator: <boolean>
                        group_members:
                          - <string>
                          - <string>
                        percent_completed: <integer>
                      - id: <string>
                        pretty_id: <string>
                        name: <string>
                        team_id: <string>
                        creator: <integer>
                        owner: <string,null>
                        color: <string>
                        date_created: <string>
                        start_date: <string,null>
                        due_date: <string>
                        description: <string>
                        private: <boolean>
                        archived: <boolean>
                        multiple_owners: <boolean>
                        editor_token: <string>
                        date_updated: <string>
                        last_update: <string>
                        folder_id: <string>
                        folder_access: <boolean>
                        pinned: <boolean>
                        owners:
                          - <string>
                          - <string>
                        key_result_count: <integer>
                        members:
                          - id: <integer>
                            username: <string>
                            email: <string>
                            color: <string>
                            permission_level: <string>
                            profilePicture: <string>
                            initials: <string>
                            isCreator: <boolean>
                          - id: <integer>
                            username: <string>
                            email: <string>
                            color: <string>
                            permission_level: <string>
                            profilePicture: <string>
                            initials: <string>
                            isCreator: <boolean>
                        group_members:
                          - <string>
                          - <string>
                        percent_completed: <integer>
                  - id: <string>
                    name: <string>
                    team_id: <string>
                    private: <boolean>
                    date_created: <string>
                    creator: <integer>
                    goal_count: <integer>
                    members:
                      - id: <integer>
                        email: <string>
                        username: <string>
                        color: <string>
                        permission_level: <string>
                        date_added: <integer>
                        added_by: <integer>
                        initials: <string>
                        profilePicture: <string>
                      - id: <integer>
                        email: <string>
                        username: <string>
                        color: <string>
                        permission_level: <string>
                        date_added: <integer>
                        added_by: <integer>
                        initials: <string>
                        profilePicture: <string>
                    goals:
                      - id: <string>
                        pretty_id: <string>
                        name: <string>
                        team_id: <string>
                        creator: <integer>
                        owner: <string,null>
                        color: <string>
                        date_created: <string>
                        start_date: <string,null>
                        due_date: <string>
                        description: <string>
                        private: <boolean>
                        archived: <boolean>
                        multiple_owners: <boolean>
                        editor_token: <string>
                        date_updated: <string>
                        last_update: <string>
                        folder_id: <string>
                        folder_access: <boolean>
                        pinned: <boolean>
                        owners:
                          - <string>
                          - <string>
                        key_result_count: <integer>
                        members:
                          - id: <integer>
                            username: <string>
                            email: <string>
                            color: <string>
                            permission_level: <string>
                            profilePicture: <string>
                            initials: <string>
                            isCreator: <boolean>
                          - id: <integer>
                            username: <string>
                            email: <string>
                            color: <string>
                            permission_level: <string>
                            profilePicture: <string>
                            initials: <string>
                            isCreator: <boolean>
                        group_members:
                          - <string>
                          - <string>
                        percent_completed: <integer>
                      - id: <string>
                        pretty_id: <string>
                        name: <string>
                        team_id: <string>
                        creator: <integer>
                        owner: <string,null>
                        color: <string>
                        date_created: <string>
                        start_date: <string,null>
                        due_date: <string>
                        description: <string>
                        private: <boolean>
                        archived: <boolean>
                        multiple_owners: <boolean>
                        editor_token: <string>
                        date_updated: <string>
                        last_update: <string>
                        folder_id: <string>
                        folder_access: <boolean>
                        pinned: <boolean>
                        owners:
                          - <string>
                          - <string>
                        key_result_count: <integer>
                        members:
                          - id: <integer>
                            username: <string>
                            email: <string>
                            color: <string>
                            permission_level: <string>
                            profilePicture: <string>
                            initials: <string>
                            isCreator: <boolean>
                          - id: <integer>
                            username: <string>
                            email: <string>
                            color: <string>
                            permission_level: <string>
                            profilePicture: <string>
                            initials: <string>
                            isCreator: <boolean>
                        group_members:
                          - <string>
                          - <string>
                        percent_completed: <integer>
    post:
      tags:
        - Goals
      summary: Create Goal
      description: Add a new Goal to a Workspace.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                name: <string>
                due_date: <integer>
                description: <string>
                multiple_owners: <boolean>
                owners:
                  - <integer>
                  - <integer>
                color: <string>
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: team_id
          in: path
          schema:
            type: string
          required: true
          description: (Required) Workspace ID
          example: <number>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                goal:
                  id: <string>
                  name: <string>
                  team_id: <string>
                  date_created: <string>
                  start_date: <string,null>
                  due_date: <string>
                  description: <string>
                  private: <boolean>
                  archived: <boolean>
                  creator: <integer>
                  color: <string>
                  pretty_id: <string>
                  multiple_owners: <boolean>
                  folder_id: <string,null>
                  members:
                    - <string>
                    - <string>
                  owners:
                    - id: <integer>
                      username: <string>
                      initials: <string>
                      email: <string>
                      color: <string>
                      profilePicture: <string>
                    - id: <integer>
                      username: <string>
                      initials: <string>
                      email: <string>
                      color: <string>
                      profilePicture: <string>
                  key_results:
                    - <string>
                    - <string>
                  percent_completed: <integer>
                  history:
                    - <string>
                    - <string>
                  pretty_url: <string>
  /v2/goal/{goal_id}:
    get:
      tags:
        - Goals
      summary: Get Goal
      description: View the details of a Goal including its Targets.
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: goal_id
          in: path
          schema:
            type: string
          required: true
          description: (Required) 900e-462d-a849-4a216b06d930 (uuid)
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                goal:
                  id: <string>
                  name: <string>
                  team_id: <string>
                  date_created: <string>
                  start_date: <string,null>
                  due_date: <string>
                  description: <string>
                  private: <boolean>
                  archived: <boolean>
                  creator: <integer>
                  color: <string>
                  pretty_id: <string>
                  multiple_owners: <boolean>
                  folder_id: <string,null>
                  members:
                    - <string>
                    - <string>
                  owners:
                    - id: <integer>
                      username: <string>
                      initials: <string>
                      email: <string>
                      color: <string>
                      profilePicture: <string>
                    - id: <integer>
                      username: <string>
                      initials: <string>
                      email: <string>
                      color: <string>
                      profilePicture: <string>
                  key_results:
                    - <string>
                    - <string>
                  percent_completed: <integer>
                  history:
                    - <string>
                    - <string>
                  pretty_url: <string>
    put:
      tags:
        - Goals
      summary: Update Goal
      description: >-
        Rename a Goal, set the due date, replace the description, add or remove
        owners, and set the Goal color.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                name: <string>
                due_date: <integer>
                description: <string>
                rem_owners:
                  - <integer>
                  - <integer>
                add_owners:
                  - <integer>
                  - <integer>
                color: <string>
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: goal_id
          in: path
          schema:
            type: string
          required: true
          description: (Required) 900e-462d-a849-4a216b06d930 (uuid)
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                goal:
                  id: <string>
                  name: <string>
                  team_id: <string>
                  date_created: <string>
                  start_date: <string,null>
                  due_date: <string>
                  description: <string>
                  private: <boolean>
                  archived: <boolean>
                  creator: <integer>
                  color: <string>
                  pretty_id: <string>
                  multiple_owners: <boolean>
                  folder_id: <string,null>
                  members:
                    - <string>
                    - <string>
                  owners:
                    - id: <integer>
                      username: <string>
                      initials: <string>
                      email: <string>
                      color: <string>
                      profilePicture: <string>
                    - id: <integer>
                      username: <string>
                      initials: <string>
                      email: <string>
                      color: <string>
                      profilePicture: <string>
                  key_results:
                    - <string>
                    - <string>
                  percent_completed: <integer>
                  history:
                    - <string>
                    - <string>
                  pretty_url: <string>
    delete:
      tags:
        - Goals
      summary: Delete Goal
      description: Remove a Goal from your Workspace.
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: goal_id
          in: path
          schema:
            type: string
          required: true
          description: (Required) 900e-462d-a849-4a216b06d930 (uuid)
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example: {}
  /v2/goal/{goal_id}/key_result:
    post:
      tags:
        - Goals
      summary: Create Key Result
      description: Add a Target to a Goal.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                name: <string>
                owners:
                  - <integer>
                  - <integer>
                type: <string>
                steps_start: <integer>
                steps_end: <integer>
                unit: <string>
                task_ids:
                  - <string>
                  - <string>
                list_ids:
                  - <string>
                  - <string>
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: goal_id
          in: path
          schema:
            type: string
          required: true
          description: (Required) 900e-462d-a849-4a216b06d930 (uuid)
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                key_result:
                  id: <string>
                  goal_id: <string>
                  name: <string>
                  type: <string>
                  unit: <string>
                  creator: <integer>
                  date_created: <string>
                  goal_pretty_id: <string>
                  percent_completed: <string,null>
                  completed: <boolean>
                  task_ids:
                    - <string>
                    - <string>
                  subcategory_ids:
                    - <string>
                    - <string>
                  owners:
                    - id: <integer>
                      username: <string>
                      initials: <string>
                      email: <string>
                      color: <string>
                      profilePicture: <string>
                    - id: <integer>
                      username: <string>
                      initials: <string>
                      email: <string>
                      color: <string>
                      profilePicture: <string>
                  last_action:
                    id: <string>
                    key_result_id: <string>
                    userid: <integer>
                    date_modified: <string>
                    steps_taken: <string,null>
                    note: <string>
                    steps_before: <string,null>
                    steps_current: <string,null>
  /v2/key_result/{key_result_id}:
    put:
      tags:
        - Goals
      summary: Edit Key Result
      description: Update a Target.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                steps_current: <integer>
                note: <string>
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: key_result_id
          in: path
          schema:
            type: string
          required: true
          description: (Required) 8480-49bc-8c57-e569747efe93 (uuid)
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                key_result:
                  id: <string>
                  goal_id: <string>
                  name: <string>
                  type: <string>
                  unit: <string>
                  creator: <integer>
                  date_created: <string>
                  goal_pretty_id: <string>
                  percent_completed: <string,null>
                  completed: <boolean>
                  task_ids:
                    - <string>
                    - <string>
                  subcategory_ids:
                    - <string>
                    - <string>
                  owners:
                    - id: <integer>
                      username: <string>
                      initials: <string>
                      email: <string>
                      color: <string>
                      profilePicture: <string>
                    - id: <integer>
                      username: <string>
                      initials: <string>
                      email: <string>
                      color: <string>
                      profilePicture: <string>
                  last_action:
                    id: <string>
                    key_result_id: <string>
                    userid: <integer>
                    date_modified: <string>
                    steps_taken: <string,null>
                    note: <string>
                    steps_before: <string,null>
                    steps_current: <string,null>
                    steps_before_float: <integer>
                    steps_taken_float: <integer>
                    steps_current_float: <string,null>
    delete:
      tags:
        - Goals
      summary: Delete Key Result
      description: Delete a target from a Goal.
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: key_result_id
          in: path
          schema:
            type: string
          required: true
          description: (Required) 8480-49bc-8c57-e569747efe93 (uuid)
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example: {}
  /v2/team/{team_id}/guest:
    post:
      tags:
        - Guests
      summary: Invite Guest To Workspace
      description: >-
        Invite a guest to join a Workspace. To invite a member to your
        Workspace, use the [Invite User to Workspace](ref:inviteusertoworkspace)
        endpoint. \
         \
        You'll also need to grant the guest access to specific items using the
        following endpoints: [Add Guest to Folder](ref:addguesttofolder), [Add
        Guest to List](ref:addguesttolist), or [Add Guest to
        Task](ref:addguesttotask). \
         \
        ***Note:** This endpoint is only available to Workspaces on our
        [Enterprise Plan](https://clickup.com/pricing).*
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                email: <string>
                can_edit_tags: <boolean>
                can_see_time_spent: <boolean>
                can_see_time_estimated: <boolean>
                can_create_views: <boolean>
                custom_role_id: <integer>
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: team_id
          in: path
          schema:
            type: string
          required: true
          description: (Required) Workspace ID
          example: <number>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                team:
                  id: <string>
                  name: <string>
                  color: <string>
                  avatar: <string,null>
                  members:
                    - user:
                        id: <integer>
                        username: <string,null>
                        email: <string>
                        color: <string,null>
                        profilePicture: <string,null>
                        initials: <string>
                        role: <integer>
                        custom_role:
                          id: <integer>
                          name: <string>
                        last_active: <string,null>
                        date_joined: <string,null>
                        date_invited: <string>
                      invited_by:
                        id: <integer>
                        color: <string>
                        username: <string>
                        email: <string>
                        initials: <string>
                        profilePicture: <string>
                      can_see_time_spent: <boolean>
                      can_see_time_estimated: <boolean>
                      can_edit_tags: <boolean>
                      can_create_views: <boolean>
                    - user:
                        id: <integer>
                        username: <string,null>
                        email: <string>
                        color: <string,null>
                        profilePicture: <string,null>
                        initials: <string>
                        role: <integer>
                        custom_role:
                          id: <integer>
                          name: <string>
                        last_active: <string,null>
                        date_joined: <string,null>
                        date_invited: <string>
                      invited_by:
                        id: <integer>
                        color: <string>
                        username: <string>
                        email: <string>
                        initials: <string>
                        profilePicture: <string>
                      can_see_time_spent: <boolean>
                      can_see_time_estimated: <boolean>
                      can_edit_tags: <boolean>
                      can_create_views: <boolean>
                  roles:
                    - id: <integer>
                      name: <string>
                      custom: <boolean>
                      inherited_role: <integer>
                    - id: <integer>
                      name: <string>
                      custom: <boolean>
                      inherited_role: <integer>
  /v2/team/{team_id}/guest/{guest_id}:
    get:
      tags:
        - Guests
      summary: Get Guest
      description: >-
        View information about a guest. \
         \
        ***Note:** This endpoint is only available to Workspaces on our
        [Enterprise Plan](https://clickup.com/pricing).*
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: team_id
          in: path
          schema:
            type: string
          required: true
          description: (Required) Workspace ID
          example: <number>
        - name: guest_id
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <number>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example: {}
    put:
      tags:
        - Guests
      summary: Edit Guest On Workspace
      description: >-
        Rename and configure options for a guest. \
         \
        ***Note:** This endpoint is only available to Workspaces on our
        [Enterprise Plan](https://clickup.com/pricing).*
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                username: <string>
                can_edit_tags: <boolean>
                can_see_time_spent: <boolean>
                can_see_time_estimated: <boolean>
                can_create_views: <boolean>
                custom_role_id: <integer>
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: team_id
          in: path
          schema:
            type: string
          required: true
          description: (Required) Workspace ID
          example: <number>
        - name: guest_id
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <number>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                guest:
                  user:
                    id: <integer>
                    username: <string,null>
                    email: <string>
                    color: <string,null>
                    profilePicture: <string,null>
                    initials: <string>
                    role: <integer>
                    custom_role:
                      id: <integer>
                      name: <string>
                    last_active: <string,null>
                    date_joined: <string,null>
                    date_invited: <string>
                  invited_by:
                    id: <integer>
                    color: <string>
                    username: <string>
                    email: <string>
                    initials: <string>
                    profilePicture: <string>
                  can_see_time_spent: <boolean>
                  can_see_time_estimated: <boolean>
                  can_edit_tags: <boolean>
                  can_create_views: <boolean>
                  shared:
                    tasks:
                      - <string>
                      - <string>
                    lists:
                      - <string>
                      - <string>
                    folders:
                      - <string>
                      - <string>
    delete:
      tags:
        - Guests
      summary: Remove Guest From Workspace
      description: >-
        Revoke a guest's access to a Workspace. \
         \
        ***Note:** This endpoint is only available to Workspaces on our
        [Enterprise Plan](https://clickup.com/pricing).*
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: team_id
          in: path
          schema:
            type: string
          required: true
          description: (Required) Workspace ID
          example: <number>
        - name: guest_id
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <number>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                team:
                  id: <string>
                  name: <string>
                  color: <string>
                  avatar: <string,null>
                  members:
                    - <string>
                    - <string>
  /v2/task/{task_id}/guest/{guest_id}:
    post:
      tags:
        - Guests
      summary: Add Guest To Task
      description: >-
        Share a task with a guest. \
         \
        ***Note:** This endpoint is only available to Workspaces on our
        [Enterprise Plan](https://clickup.com/pricing).*
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                permission_level: <string>
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: include_shared
          in: query
          schema:
            type: string
          description: >-
            Exclude details of items shared with the guest by setting this
            parameter to `false`. By default this parameter is set to `true`.
          example: <boolean>
        - name: custom_task_ids
          in: query
          schema:
            type: string
          description: >-
            If you want to reference a task by it's custom task id, this value
            must be `true`.
          example: <boolean>
        - name: team_id
          in: query
          schema:
            type: string
          description: >-
            When the `custom_task_ids` parameter is set to `true`, the Workspace
            ID must be provided using the `team_id` parameter.
             \
            For example: `custom_task_ids=true&team_id=123`.
          example: <number>
        - name: task_id
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: guest_id
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <number>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                guest:
                  user:
                    id: <integer>
                    username: <string,null>
                    email: <string>
                    color: <string,null>
                    profilePicture: <string,null>
                    initials: <string>
                    role: <integer>
                    last_active: <string,null>
                    date_joined: <string,null>
                    date_invited: <string>
                  invited_by:
                    id: <integer>
                    color: <string>
                    username: <string>
                    email: <string>
                    initials: <string>
                    profilePicture: <string>
                  can_see_time_spent: <boolean>
                  can_see_time_estimated: <boolean>
                  can_edit_tags: <boolean>
                  shared:
                    tasks:
                      - id: <string>
                        name: <string>
                        status:
                          status: <string>
                          color: <string>
                          orderindex: <integer>
                          type: <string>
                        orderindex: <string>
                        date_created: <string>
                        date_updated: <string>
                        date_closed: <string,null>
                        archived: <boolean>
                        creator:
                          id: <integer>
                          username: <string>
                          color: <string>
                          profilePicture: <string>
                        assignees:
                          - <string>
                          - <string>
                        checklists:
                          - <string>
                          - <string>
                        tags:
                          - <string>
                          - <string>
                        parent: <string,null>
                        priority:
                          id: <string>
                          priority: <string>
                          color: <string>
                          orderindex: <string>
                        due_date: <string>
                        start_date: <string,null>
                        points: <string,null>
                        time_estimate: <string,null>
                        custom_fields:
                          - <string>
                          - <string>
                        dependencies:
                          - <string>
                          - <string>
                        team_id: <string>
                        url: <string>
                        permission_level: <string>
                        list:
                          id: <string>
                          name: <string>
                          access: <boolean>
                        folder:
                          id: <string>
                          name: <string>
                          hidden: <boolean>
                          access: <boolean>
                        space:
                          id: <string>
                      - id: <string>
                        name: <string>
                        status:
                          status: <string>
                          color: <string>
                          orderindex: <integer>
                          type: <string>
                        orderindex: <string>
                        date_created: <string>
                        date_updated: <string>
                        date_closed: <string,null>
                        archived: <boolean>
                        creator:
                          id: <integer>
                          username: <string>
                          color: <string>
                          profilePicture: <string>
                        assignees:
                          - <string>
                          - <string>
                        checklists:
                          - <string>
                          - <string>
                        tags:
                          - <string>
                          - <string>
                        parent: <string,null>
                        priority:
                          id: <string>
                          priority: <string>
                          color: <string>
                          orderindex: <string>
                        due_date: <string>
                        start_date: <string,null>
                        points: <string,null>
                        time_estimate: <string,null>
                        custom_fields:
                          - <string>
                          - <string>
                        dependencies:
                          - <string>
                          - <string>
                        team_id: <string>
                        url: <string>
                        permission_level: <string>
                        list:
                          id: <string>
                          name: <string>
                          access: <boolean>
                        folder:
                          id: <string>
                          name: <string>
                          hidden: <boolean>
                          access: <boolean>
                        space:
                          id: <string>
                    lists:
                      - <string>
                      - <string>
                    folders:
                      - <string>
                      - <string>
    delete:
      tags:
        - Guests
      summary: Remove Guest From Task
      description: >-
        Revoke a guest's access to a task. \
         \
        ***Note:** This endpoint is only available to Workspaces on our
        [Enterprise Plan](https://clickup.com/pricing).*
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: include_shared
          in: query
          schema:
            type: string
          description: >-
            Exclude details of items shared with the guest by setting this
            parameter to `false`. By default this parameter is set to `true`.
          example: <boolean>
        - name: custom_task_ids
          in: query
          schema:
            type: string
          description: >-
            If you want to reference a task by it's custom task id, this value
            must be `true`.
          example: <boolean>
        - name: team_id
          in: query
          schema:
            type: string
          description: >-
            When the `custom_task_ids` parameter is set to `true`, the Workspace
            ID must be provided using the `team_id` parameter.
             \
            For example: `custom_task_ids=true&team_id=123`.
          example: <number>
        - name: task_id
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: guest_id
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <number>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                guest:
                  user:
                    id: <integer>
                    username: <string,null>
                    email: <string>
                    color: <string,null>
                    profilePicture: <string,null>
                    initials: <string>
                    role: <integer>
                    last_active: <string,null>
                    date_joined: <string,null>
                    date_invited: <string>
                  invited_by:
                    id: <integer>
                    color: <string>
                    username: <string>
                    email: <string>
                    initials: <string>
                    profilePicture: <string>
                  can_see_time_spent: <boolean>
                  can_see_time_estimated: <boolean>
                  can_edit_tags: <boolean>
                  shared:
                    tasks:
                      - <string>
                      - <string>
                    lists:
                      - <string>
                      - <string>
                    folders:
                      - <string>
                      - <string>
  /v2/list/{list_id}/guest/{guest_id}:
    post:
      tags:
        - Guests
      summary: Add Guest To List
      description: >-
        Share a List with a guest. \
         \
        ***Note:** This endpoint is only available to Workspaces on our
        [Enterprise Plan](https://clickup.com/pricing).*
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                permission_level: <string>
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: include_shared
          in: query
          schema:
            type: string
          description: >-
            Exclude details of items shared with the guest by setting this
            parameter to `false`. By default this parameter is set to `true`.
          example: <boolean>
        - name: list_id
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <number>
        - name: guest_id
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <number>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                guest:
                  user:
                    id: <integer>
                    username: <string,null>
                    email: <string>
                    color: <string,null>
                    profilePicture: <string,null>
                    initials: <string>
                    role: <integer>
                    last_active: <string,null>
                    date_joined: <string,null>
                    date_invited: <string>
                  invited_by:
                    id: <integer>
                    color: <string>
                    username: <string>
                    email: <string>
                    initials: <string>
                    profilePicture: <string>
                  can_see_time_spent: <boolean>
                  can_see_time_estimated: <boolean>
                  can_edit_tags: <boolean>
                  shared:
                    tasks:
                      - <string>
                      - <string>
                    lists:
                      - id: <string>
                        name: <string>
                        orderindex: <integer>
                        status: <string,null>
                        priority: <string,null>
                        assignee: <string,null>
                        task_count: <string>
                        due_date: <string,null>
                        start_date: <string,null>
                        archived: <boolean>
                        override_statuses: <boolean>
                        statuses:
                          - status: <string>
                            color: <string>
                            orderindex: <integer>
                            type: <string>
                          - status: <string>
                            color: <string>
                            orderindex: <integer>
                            type: <string>
                        permission_level: <string>
                      - id: <string>
                        name: <string>
                        orderindex: <integer>
                        status: <string,null>
                        priority: <string,null>
                        assignee: <string,null>
                        task_count: <string>
                        due_date: <string,null>
                        start_date: <string,null>
                        archived: <boolean>
                        override_statuses: <boolean>
                        statuses:
                          - status: <string>
                            color: <string>
                            orderindex: <integer>
                            type: <string>
                          - status: <string>
                            color: <string>
                            orderindex: <integer>
                            type: <string>
                        permission_level: <string>
                    folders:
                      - <string>
                      - <string>
    delete:
      tags:
        - Guests
      summary: Remove Guest From List
      description: >-
        Revoke a guest's access to a List.\
         \
        ***Note:** This endpoint is only available to Workspaces on our
        [Enterprise Plan](https://clickup.com/pricing).*
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: include_shared
          in: query
          schema:
            type: string
          description: >-
            Exclude details of items shared with the guest by setting this
            parameter to `false`. By default this parameter is set to `true`.
          example: <boolean>
        - name: list_id
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <number>
        - name: guest_id
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <number>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                guest:
                  user:
                    id: <integer>
                    username: <string,null>
                    email: <string>
                    color: <string,null>
                    profilePicture: <string,null>
                    initials: <string>
                    role: <integer>
                    last_active: <string,null>
                    date_joined: <string,null>
                    date_invited: <string>
                  invited_by:
                    id: <integer>
                    color: <string>
                    username: <string>
                    email: <string>
                    initials: <string>
                    profilePicture: <string>
                  can_see_time_spent: <boolean>
                  can_see_time_estimated: <boolean>
                  can_edit_tags: <boolean>
                  shared:
                    tasks:
                      - <string>
                      - <string>
                    lists:
                      - <string>
                      - <string>
                    folders:
                      - <string>
                      - <string>
  /v2/folder/{folder_id}/guest/{guest_id}:
    post:
      tags:
        - Guests
      summary: Add Guest To Folder
      description: >-
        Share a Folder with a guest. \
         \
        ***Note:** This endpoint is only available to Workspaces on our
        [Enterprise Plan](https://clickup.com/pricing).*
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                permission_level: <string>
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: include_shared
          in: query
          schema:
            type: string
          description: >-
            Exclude details of items shared with the guest by setting this
            parameter to `false`. By default this parameter is set to `true`.
          example: <boolean>
        - name: folder_id
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <number>
        - name: guest_id
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <number>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                guest:
                  user:
                    id: <integer>
                    username: <string,null>
                    email: <string>
                    color: <string,null>
                    profilePicture: <string,null>
                    initials: <string>
                    role: <integer>
                    last_active: <string,null>
                    date_joined: <string,null>
                    date_invited: <string>
                  invited_by:
                    id: <integer>
                    color: <string>
                    username: <string>
                    email: <string>
                    initials: <string>
                    profilePicture: <string>
                  can_see_time_spent: <boolean>
                  can_see_time_estimated: <boolean>
                  can_edit_tags: <boolean>
                  shared:
                    tasks:
                      - <string>
                      - <string>
                    lists:
                      - <string>
                      - <string>
                    folders:
                      - id: <string>
                        name: <string>
                        orderindex: <integer>
                        override_statuses: <boolean>
                        hidden: <boolean>
                        task_count: <string>
                        archived: <boolean>
                        statuses:
                          - status: <string>
                            color: <string>
                            orderindex: <integer>
                            type: <string>
                          - status: <string>
                            color: <string>
                            orderindex: <integer>
                            type: <string>
                        lists:
                          - <string>
                          - <string>
                        permission_level: <string>
                      - id: <string>
                        name: <string>
                        orderindex: <integer>
                        override_statuses: <boolean>
                        hidden: <boolean>
                        task_count: <string>
                        archived: <boolean>
                        statuses:
                          - status: <string>
                            color: <string>
                            orderindex: <integer>
                            type: <string>
                          - status: <string>
                            color: <string>
                            orderindex: <integer>
                            type: <string>
                        lists:
                          - <string>
                          - <string>
                        permission_level: <string>
    delete:
      tags:
        - Guests
      summary: Remove Guest From Folder
      description: >-
        Revoke a guest's access to a Folder. \
         \
        ***Note:** This endpoint is only available to Workspaces on our
        [Enterprise Plan](https://clickup.com/pricing).*
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: include_shared
          in: query
          schema:
            type: string
          description: >-
            Exclude details of items shared with the guest by setting this
            parameter to `false`. By default this parameter is set to `true`.
          example: <boolean>
        - name: folder_id
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <number>
        - name: guest_id
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <number>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                guest:
                  user:
                    id: <integer>
                    username: <string,null>
                    email: <string>
                    color: <string,null>
                    profilePicture: <string,null>
                    initials: <string>
                    role: <integer>
                    last_active: <string,null>
                    date_joined: <string,null>
                    date_invited: <string>
                  invited_by:
                    id: <integer>
                    color: <string>
                    username: <string>
                    email: <string>
                    initials: <string>
                    profilePicture: <string>
                  can_see_time_spent: <boolean>
                  can_see_time_estimated: <boolean>
                  can_edit_tags: <boolean>
                  shared:
                    tasks:
                      - <string>
                      - <string>
                    lists:
                      - <string>
                      - <string>
                    folders:
                      - <string>
                      - <string>
  /v2/folder/{folder_id}/list:
    get:
      tags:
        - Lists
      summary: Get Lists
      description: View the Lists within a Folder.
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: archived
          in: query
          schema:
            type: string
          example: <boolean>
        - name: folder_id
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <number>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                lists:
                  - id: <string>
                    name: <string>
                    orderindex: <integer>
                    content: <string>
                    status:
                      status: <string>
                      color: <string>
                      hide_label: <boolean>
                    priority:
                      priority: <string>
                      color: <string>
                    assignee: <string,null>
                    task_count: <string,null>
                    due_date: <string,null>
                    start_date: <string,null>
                    folder:
                      id: <string>
                      name: <string>
                      hidden: <boolean>
                      access: <boolean>
                    space:
                      id: <string>
                      name: <string>
                      access: <boolean>
                    archived: <boolean>
                    override_statuses: <boolean>
                    permission_level: <string>
                  - id: <string>
                    name: <string>
                    orderindex: <integer>
                    content: <string>
                    status:
                      status: <string>
                      color: <string>
                      hide_label: <boolean>
                    priority:
                      priority: <string>
                      color: <string>
                    assignee: <string,null>
                    task_count: <string,null>
                    due_date: <string,null>
                    start_date: <string,null>
                    folder:
                      id: <string>
                      name: <string>
                      hidden: <boolean>
                      access: <boolean>
                    space:
                      id: <string>
                      name: <string>
                      access: <boolean>
                    archived: <boolean>
                    override_statuses: <boolean>
                    permission_level: <string>
    post:
      tags:
        - Lists
      summary: Create List
      description: Add a new List to a Folder.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                name: <string>
                content: <string>
                due_date: <integer>
                due_date_time: <boolean>
                priority: <integer>
                assignee: <integer>
                status: <string>
                include_markdown_description: <boolean>
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: folder_id
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <number>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                id: <string>
                name: <string>
                orderindex: <integer>
                content: <string>
                status:
                  status: <string>
                  color: <string>
                  hide_label: <boolean>
                priority:
                  priority: <string>
                  color: <string>
                assignee:
                  id: <integer>
                  color: <string>
                  username: <string>
                  initials: <string>
                  profilePicture: <string>
                task_count: <string,null>
                due_date: <string>
                due_date_time: <boolean>
                start_date: <string,null>
                start_date_time: <string,null>
                folder:
                  id: <string>
                  name: <string>
                  hidden: <boolean>
                  access: <boolean>
                space:
                  id: <string>
                  name: <string>
                  access: <boolean>
                statuses:
                  - status: <string>
                    color: <string>
                    orderindex: <integer>
                    type: <string>
                  - status: <string>
                    color: <string>
                    orderindex: <integer>
                    type: <string>
                inbound_address: <string>
  /v2/space/{space_id}/list:
    get:
      tags:
        - Lists
      summary: Get Folderless Lists
      description: View the Lists in a Space that aren't located in a Folder.
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: archived
          in: query
          schema:
            type: string
          example: <boolean>
        - name: space_id
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <number>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                lists:
                  - id: <string>
                    name: <string>
                    orderindex: <integer>
                    content: <string>
                    status:
                      status: <string>
                      color: <string>
                      hide_label: <boolean>
                    priority:
                      priority: <string>
                      color: <string>
                    assignee: <string,null>
                    task_count: <string,null>
                    due_date: <string,null>
                    start_date: <string,null>
                    folder:
                      id: <string>
                      name: <string>
                      hidden: <boolean>
                      access: <boolean>
                    space:
                      id: <string>
                      name: <string>
                      access: <boolean>
                    archived: <boolean>
                    override_statuses: <boolean>
                    permission_level: <string>
                  - id: <string>
                    name: <string>
                    orderindex: <integer>
                    content: <string>
                    status:
                      status: <string>
                      color: <string>
                      hide_label: <boolean>
                    priority:
                      priority: <string>
                      color: <string>
                    assignee: <string,null>
                    task_count: <string,null>
                    due_date: <string,null>
                    start_date: <string,null>
                    folder:
                      id: <string>
                      name: <string>
                      hidden: <boolean>
                      access: <boolean>
                    space:
                      id: <string>
                      name: <string>
                      access: <boolean>
                    archived: <boolean>
                    override_statuses: <boolean>
                    permission_level: <string>
    post:
      tags:
        - Lists
      summary: Create Folderless List
      description: Add a new List in a Space.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                name: <string>
                content: <string>
                due_date: <integer>
                due_date_time: <boolean>
                priority: <integer>
                assignee: <integer>
                status: <string>
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: space_id
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <number>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                id: <string>
                name: <string>
                orderindex: <integer>
                content: <string>
                status:
                  status: <string>
                  color: <string>
                  hide_label: <boolean>
                priority:
                  priority: <string>
                  color: <string>
                assignee:
                  id: <integer>
                  color: <string>
                  username: <string>
                  initials: <string>
                  profilePicture: <string>
                task_count: <string,null>
                due_date: <string>
                due_date_time: <boolean>
                start_date: <string,null>
                start_date_time: <string,null>
                folder:
                  id: <string>
                  name: <string>
                  hidden: <boolean>
                  access: <boolean>
                space:
                  id: <string>
                  name: <string>
                  access: <boolean>
                statuses:
                  - status: <string>
                    color: <string>
                    orderindex: <integer>
                    type: <string>
                  - status: <string>
                    color: <string>
                    orderindex: <integer>
                    type: <string>
                inbound_address: <string>
  /v2/list/{list_id}:
    get:
      tags:
        - Lists
      summary: Get List
      description: View information about a List.
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: list_id
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) The List ID. To find the List ID, right-click the List in
            your Sidebar, select Copy link, and paste the link in your URL. The
            last string in the URL is your List ID.
          example: <number>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                id: <string>
                name: <string>
                orderindex: <integer>
                content: <string>
                status:
                  status: <string>
                  color: <string>
                  hide_label: <boolean>
                priority:
                  priority: <string>
                  color: <string>
                assignee: <string,null>
                due_date: <string>
                due_date_time: <boolean>
                start_date: <string,null>
                start_date_time: <string,null>
                folder:
                  id: <string>
                  name: <string>
                  hidden: <boolean>
                  access: <boolean>
                space:
                  id: <string>
                  name: <string>
                  access: <boolean>
                inbound_address: <string>
                archived: <boolean>
                override_statuses: <boolean>
                statuses:
                  - status: <string>
                    color: <string>
                    orderindex: <integer>
                    type: <string>
                  - status: <string>
                    color: <string>
                    orderindex: <integer>
                    type: <string>
                permission_level: <string>
    put:
      tags:
        - Lists
      summary: Update List
      description: >-
        Rename a List, update the List Info description, set a due date/time,
        set the List's priority, set an assignee, set or remove the List color.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                name: <string>
                content: <string>
                due_date: <integer>
                due_date_time: <boolean>
                priority: <integer>
                assignee: <string>
                status: <string>
                unset_status: <boolean>
                include_markdown_description: <boolean>
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: list_id
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                id: <string>
                name: <string>
                orderindex: <integer>
                content: <string>
                status:
                  status: <string>
                  color: <string>
                  hide_label: <boolean>
                priority:
                  priority: <string>
                  color: <string>
                assignee: <string,null>
                task_count: <string,null>
                due_date: <string>
                due_date_time: <boolean>
                start_date: <string,null>
                start_date_time: <string,null>
                folder:
                  id: <string>
                  name: <string>
                  hidden: <boolean>
                  access: <boolean>
                space:
                  id: <string>
                  name: <string>
                  access: <boolean>
                statuses:
                  - status: <string>
                    color: <string>
                    orderindex: <integer>
                    type: <string>
                  - status: <string>
                    color: <string>
                    orderindex: <integer>
                    type: <string>
                inbound_address: <string>
    delete:
      tags:
        - Lists
      summary: Delete List
      description: Delete a List from your Workspace.
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: list_id
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <number>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example: {}
  /v2/list/{list_id}/task/{task_id}:
    post:
      tags:
        - Lists
      summary: Add Task To List
      description: >-
        Add a task to an additional List. \
         \
        ***Note:** This endpoint requires the [Tasks in Multiple List
        ClickApp](https://help.clickup.com/hc/en-us/articles/6309958824727-Tasks-in-Multiple-Lists)
        to be enabled.*
      requestBody:
        content: {}
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: list_id
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <number>
        - name: task_id
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example: {}
    delete:
      tags:
        - Lists
      summary: Remove Task From List
      description: >-
        Remove a task from an additional List. You can't remove a task from its
        home List. \
         \
        ***Note:** This endpoint requires the [Tasks in Multiple List
        ClickApp](https://help.clickup.com/hc/en-us/articles/6309958824727-Tasks-in-Multiple-Lists)
        to be enabled.*
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: list_id
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <number>
        - name: task_id
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example: {}
  /v2/folder/{folder_id}/list_template/{template_id}:
    post:
      tags:
        - Lists
      summary: Create List From Template in Folder
      description: Create a new list using a list template in a folder.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                name: <string>
                options:
                  options:
                    return_immediately: true
                    content: incididunt culpa reprehenderit do
                    time_estimate: -39508765.76589808
                    automation: true
                    include_views: false
                    old_due_date: true
                    old_start_date: false
                    old_followers: false
                    comment_attachments: true
                    recur_settings: false
                    old_tags: false
                    old_statuses: false
                    subtasks: false
                    custom_type: false
                    old_assignees: true
                    attachments: true
                    comment: true
                    old_status: true
                    external_dependencies: false
                    internal_dependencies: false
                    priority: false
                    custom_fields: true
                    old_checklists: true
                    relationships: true
                    old_subtask_assignees: false
                    start_date: '2020-07-11T14:21:14.491Z'
                    due_date: '2010-09-02T20:25:23.728Z'
                    remap_start_date: true
                    skip_weekends: true
                    archived: null
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: folder_id
          in: path
          schema:
            type: string
          required: true
          description: (Required) ID of the Folder where the List will be created
          example: <string>
        - name: template_id
          in: path
          schema:
            type: string
          required: true
          description: (Required) ID of the template to use
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                id: <string>
                list:
                  id: <string>
                  name: <string>
                  deleted: <boolean>
                  orderindex: <integer>
                  priority: <string>
                  assignee: <string>
                  due_date: <dateTime>
                  start_date: <dateTime>
                  folder:
                    id: <string>
                    name: <string>
                    hidden: <boolean>
                    access: <boolean>
                  space:
                    id: <string>
                    name: <string>
                    access: <boolean>
                  inbound_address: <string>
                  archived: <boolean>
                  override_statuses: <boolean>
                  statuses:
                    - id: <string>
                      status: <string>
                      orderindex: <integer>
                      color: <string>
                      type: <string>
                      status_group: <string>
                    - id: <string>
                      status: <string>
                      orderindex: <integer>
                      color: <string>
                      type: <string>
                      status_group: <string>
                  permission_level: <string>
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                error: <string>
                ECODE: <string>
        '401':
          description: Unauthorized
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '403':
          description: Forbidden
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '500':
          description: Internal Server Error
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /v2/space/{space_id}/list_template/{template_id}:
    post:
      tags:
        - Lists
      summary: Create List From Template in Space.
      description: Create a new List using a List template within a Space.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                name: <string>
                options:
                  options:
                    return_immediately: true
                    content: incididunt culpa reprehenderit do
                    time_estimate: -39508765.76589808
                    automation: true
                    include_views: false
                    old_due_date: true
                    old_start_date: false
                    old_followers: false
                    comment_attachments: true
                    recur_settings: false
                    old_tags: false
                    old_statuses: false
                    subtasks: false
                    custom_type: false
                    old_assignees: true
                    attachments: true
                    comment: true
                    old_status: true
                    external_dependencies: false
                    internal_dependencies: false
                    priority: false
                    custom_fields: true
                    old_checklists: true
                    relationships: true
                    old_subtask_assignees: false
                    start_date: '2020-07-11T14:21:14.491Z'
                    due_date: '2010-09-02T20:25:23.728Z'
                    remap_start_date: true
                    skip_weekends: true
                    archived: null
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: space_id
          in: path
          schema:
            type: string
          required: true
          description: (Required) ID of the Space where the List will be created
          example: <string>
        - name: template_id
          in: path
          schema:
            type: string
          required: true
          description: (Required) ID of the template to use
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                id: <string>
                list:
                  id: <string>
                  name: <string>
                  deleted: <boolean>
                  orderindex: <integer>
                  priority: <string>
                  assignee: <string>
                  due_date: <dateTime>
                  start_date: <dateTime>
                  folder:
                    id: <string>
                    name: <string>
                    hidden: <boolean>
                    access: <boolean>
                  space:
                    id: <string>
                    name: <string>
                    access: <boolean>
                  inbound_address: <string>
                  archived: <boolean>
                  override_statuses: <boolean>
                  statuses:
                    - id: <string>
                      status: <string>
                      orderindex: <integer>
                      color: <string>
                      type: <string>
                      status_group: <string>
                    - id: <string>
                      status: <string>
                      orderindex: <integer>
                      color: <string>
                      type: <string>
                      status_group: <string>
                  permission_level: <string>
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                error: <string>
                ECODE: <string>
        '401':
          description: Unauthorized
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '403':
          description: Forbidden
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                type: string
              example: ''
        '500':
          description: Internal Server Error
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /v2/task/{task_id}/member:
    get:
      tags:
        - Members
      summary: Get Task Members
      description: >-
        View the people who have access to a task. Responses do not include
        people with inherited Hierarchy permission to the task.
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: task_id
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                members:
                  - id: <integer>
                    username: <string>
                    email: <string>
                    color: <string,null>
                    initials: <string>
                    profilePicture: <string>
                    profileInfo:
                      display_profile: <string,null>
                      verified_ambassador: <string,null>
                      verified_consultant: <string,null>
                      top_tier_user: <string,null>
                      viewed_verified_ambassador: <string,null>
                      viewed_verified_consultant: <string,null>
                      viewed_top_tier_user: <string,null>
                  - id: <integer>
                    username: <string>
                    email: <string>
                    color: <string,null>
                    initials: <string>
                    profilePicture: <string>
                    profileInfo:
                      display_profile: <string,null>
                      verified_ambassador: <string,null>
                      verified_consultant: <string,null>
                      top_tier_user: <string,null>
                      viewed_verified_ambassador: <string,null>
                      viewed_verified_consultant: <string,null>
                      viewed_top_tier_user: <string,null>
  /v2/list/{list_id}/member:
    get:
      tags:
        - Members
      summary: Get List Members
      description: Get Workspace members who have access to a List.
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: list_id
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <number>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                members:
                  - id: <integer>
                    username: <string>
                    email: <string>
                    color: <string,null>
                    initials: <string>
                    profilePicture: <string>
                    profileInfo:
                      display_profile: <string,null>
                      verified_ambassador: <string,null>
                      verified_consultant: <string,null>
                      top_tier_user: <string,null>
                      viewed_verified_ambassador: <string,null>
                      viewed_verified_consultant: <string,null>
                      viewed_top_tier_user: <string,null>
                  - id: <integer>
                    username: <string>
                    email: <string>
                    color: <string,null>
                    initials: <string>
                    profilePicture: <string>
                    profileInfo:
                      display_profile: <string,null>
                      verified_ambassador: <string,null>
                      verified_consultant: <string,null>
                      top_tier_user: <string,null>
                      viewed_verified_ambassador: <string,null>
                      viewed_verified_consultant: <string,null>
                      viewed_top_tier_user: <string,null>
  /v3/workspaces/{workspace_id}/{object_type}/{object_id}/acls:
    patch:
      tags:
        - Privacy and access
      summary: Update privacy and access of an object or location
      description: >-
        Update the privacy and access settings of an object or location in the
        Workspace. Note that sharing an item may incur charges.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                entries:
                  - id: <string>
                    kind: <string>
                    permission_level: <number>
                  - id: <string>
                    kind: <string>
                    permission_level: <number>
                private: <boolean>
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: workspace_id
          in: path
          schema:
            type: string
          required: true
          description: (Required) The ID of the Workspace.
          example: <string>
        - name: object_type
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) Any object that can be shared in a Workspace. For
            example, `customField`, `dashboard`, `folder`, `goal`,
            `goalFolder`,`list`, `space`, `task`, and `view`.
          example: <string>
        - name: object_id
          in: path
          schema:
            type: string
          required: true
          description: (Required) The ID of the object to share.
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example: {}
  /v2/team/{team_id}/customroles:
    get:
      tags:
        - Roles
      summary: Get Custom Roles
      description: View the Custom Roles available in a Workspace.
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: include_members
          in: query
          schema:
            type: string
          example: <boolean>
        - name: team_id
          in: path
          schema:
            type: string
          required: true
          description: (Required) Workspace ID
          example: <number>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                custom_roles:
                  - id: <integer>
                    team_id: <string>
                    name: <string>
                    inherited_role: <integer>
                    date_created: <string>
                    members:
                      - <integer>
                      - <integer>
                  - id: <integer>
                    team_id: <string>
                    name: <string>
                    inherited_role: <integer>
                    date_created: <string>
                    members:
                      - <integer>
                      - <integer>
  /v2/team/{team_id}/shared:
    get:
      tags:
        - Shared Hierarchy
      summary: Shared Hierarchy
      description: >-
        View the tasks, Lists, and Folders that have been shared with the
        authenticated user.
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: team_id
          in: path
          schema:
            type: string
          required: true
          description: (Required) Workspace ID
          example: <number>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                shared:
                  tasks:
                    - <string>
                    - <string>
                  lists:
                    - id: <string>
                      name: <string>
                      orderindex: <integer>
                      content: <string,null>
                      status: <string,null>
                      priority: <string,null>
                      assignee: <string,null>
                      task_count: <string>
                      due_date: <string,null>
                      start_date: <string,null>
                      archived: <boolean>
                    - id: <string>
                      name: <string>
                      orderindex: <integer>
                      content: <string,null>
                      status: <string,null>
                      priority: <string,null>
                      assignee: <string,null>
                      task_count: <string>
                      due_date: <string,null>
                      start_date: <string,null>
                      archived: <boolean>
                  folders:
                    - id: <string>
                      name: <string>
                      orderindex: <integer>
                      content: <string,null>
                      task_count: <string>
                      due_date: <string,null>
                      archived: <boolean>
                    - id: <string>
                      name: <string>
                      orderindex: <integer>
                      content: <string,null>
                      task_count: <string>
                      due_date: <string,null>
                      archived: <boolean>
  /v2/team/{team_id}/space:
    get:
      tags:
        - Spaces
      summary: Get Spaces
      description: >-
        View the Spaces avialable in a Workspace. You can only get member info
        in private Spaces.
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: archived
          in: query
          schema:
            type: string
          example: <boolean>
        - name: team_id
          in: path
          schema:
            type: string
          required: true
          description: (Required) Workspace ID
          example: <number>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                spaces:
                  - id: <string>
                    name: <string>
                    private: <boolean>
                    statuses:
                      - status: <string>
                        color: <string>
                        orderindex: <integer>
                        type: <string>
                      - status: <string>
                        color: <string>
                        orderindex: <integer>
                        type: <string>
                    multiple_assignees: <boolean>
                    features:
                      due_dates:
                        enabled: <boolean>
                        start_date: <boolean>
                        remap_due_dates: <boolean>
                        remap_closed_due_date: <boolean>
                      time_tracking:
                        enabled: <boolean>
                      tags:
                        enabled: <boolean>
                      time_estimates:
                        enabled: <boolean>
                      checklists:
                        enabled: <boolean>
                      custom_fields:
                        enabled: <boolean>
                      remap_dependencies:
                        enabled: <boolean>
                      dependency_warning:
                        enabled: <boolean>
                      portfolios:
                        enabled: <boolean>
                    color: <string>
                    avatar: <string>
                    admin_can_manage: <boolean>
                    archived: <boolean>
                    members:
                      - user:
                          id: <integer>
                          username: <string>
                          color: <string>
                          profilePicture: <string>
                      - user:
                          id: <integer>
                          username: <string>
                          color: <string>
                          profilePicture: <string>
                  - id: <string>
                    name: <string>
                    private: <boolean>
                    statuses:
                      - status: <string>
                        color: <string>
                        orderindex: <integer>
                        type: <string>
                      - status: <string>
                        color: <string>
                        orderindex: <integer>
                        type: <string>
                    multiple_assignees: <boolean>
                    features:
                      due_dates:
                        enabled: <boolean>
                        start_date: <boolean>
                        remap_due_dates: <boolean>
                        remap_closed_due_date: <boolean>
                      time_tracking:
                        enabled: <boolean>
                      tags:
                        enabled: <boolean>
                      time_estimates:
                        enabled: <boolean>
                      checklists:
                        enabled: <boolean>
                      custom_fields:
                        enabled: <boolean>
                      remap_dependencies:
                        enabled: <boolean>
                      dependency_warning:
                        enabled: <boolean>
                      portfolios:
                        enabled: <boolean>
                    color: <string>
                    avatar: <string>
                    admin_can_manage: <boolean>
                    archived: <boolean>
                    members:
                      - user:
                          id: <integer>
                          username: <string>
                          color: <string>
                          profilePicture: <string>
                      - user:
                          id: <integer>
                          username: <string>
                          color: <string>
                          profilePicture: <string>
    post:
      tags:
        - Spaces
      summary: Create Space
      description: Add a new Space to a Workspace.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                name: <string>
                multiple_assignees: <boolean>
                features:
                  due_dates:
                    enabled: <boolean>
                    start_date: <boolean>
                    remap_due_dates: <boolean>
                    remap_closed_due_date: <boolean>
                  time_tracking:
                    enabled: <boolean>
                  tags:
                    enabled: <boolean>
                  time_estimates:
                    enabled: <boolean>
                  checklists:
                    enabled: <boolean>
                  custom_fields:
                    enabled: <boolean>
                  remap_dependencies:
                    enabled: <boolean>
                  dependency_warning:
                    enabled: <boolean>
                  portfolios:
                    enabled: <boolean>
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: team_id
          in: path
          schema:
            type: string
          required: true
          description: (Required) Workspace ID
          example: <number>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                id: <string>
                name: <string>
                private: <boolean>
                statuses:
                  - id: <string>
                    status: <string>
                    type: <string>
                    orderindex: <integer>
                    color: <string>
                  - id: <string>
                    status: <string>
                    type: <string>
                    orderindex: <integer>
                    color: <string>
                multiple_assignees: <boolean>
                features:
                  due_dates:
                    enabled: <boolean>
                    start_date: <boolean>
                    remap_due_dates: <boolean>
                    remap_closed_due_date: <boolean>
                  sprints:
                    enabled: <boolean>
                  points:
                    enabled: <boolean>
                  custom_items:
                    enabled: <boolean>
                  tags:
                    enabled: <boolean>
                  time_estimates:
                    enabled: <boolean>
                  checklists:
                    enabled: <boolean>
                  zoom:
                    enabled: <boolean>
                  milestones:
                    enabled: <boolean>
                  custom_fields:
                    enabled: <boolean>
                  remap_dependencies:
                    enabled: <boolean>
                  dependency_warning:
                    enabled: <boolean>
                  multiple_assignees:
                    enabled: <boolean>
                  portfolios:
                    enabled: <boolean>
                  emails:
                    enabled: <boolean>
                archived: <boolean>
  /v2/space/{space_id}:
    get:
      tags:
        - Spaces
      summary: Get Space
      description: View the Spaces available in a Workspace.
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: space_id
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <number>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                id: <string>
                name: <string>
                private: <boolean>
                statuses:
                  - status: <string>
                    color: <string>
                    orderindex: <integer>
                    type: <string>
                  - status: <string>
                    color: <string>
                    orderindex: <integer>
                    type: <string>
                multiple_assignees: <boolean>
                features:
                  due_dates:
                    enabled: <boolean>
                    start_date: <boolean>
                    remap_due_dates: <boolean>
                    remap_closed_due_date: <boolean>
                  time_tracking:
                    enabled: <boolean>
                  tags:
                    enabled: <boolean>
                  time_estimates:
                    enabled: <boolean>
                  checklists:
                    enabled: <boolean>
                  custom_fields:
                    enabled: <boolean>
                  remap_dependencies:
                    enabled: <boolean>
                  dependency_warning:
                    enabled: <boolean>
                  portfolios:
                    enabled: <boolean>
    put:
      tags:
        - Spaces
      summary: Update Space
      description: Rename, set the Space color, and enable ClickApps for a Space.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                name: <string>
                color: <string>
                private: <boolean>
                admin_can_manage: <boolean>
                multiple_assignees: <boolean>
                features:
                  due_dates:
                    enabled: <boolean>
                    start_date: <boolean>
                    remap_due_dates: <boolean>
                    remap_closed_due_date: <boolean>
                  time_tracking:
                    enabled: <boolean>
                  tags:
                    enabled: <boolean>
                  time_estimates:
                    enabled: <boolean>
                  checklists:
                    enabled: <boolean>
                  custom_fields:
                    enabled: <boolean>
                  remap_dependencies:
                    enabled: <boolean>
                  dependency_warning:
                    enabled: <boolean>
                  portfolios:
                    enabled: <boolean>
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: space_id
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <number>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                id: <string>
                name: <string>
                private: <boolean>
                statuses:
                  - status: <string>
                    color: <string>
                    orderindex: <integer>
                    type: <string>
                  - status: <string>
                    color: <string>
                    orderindex: <integer>
                    type: <string>
                multiple_assignees: <boolean>
                features:
                  due_dates:
                    enabled: <boolean>
                    start_date: <boolean>
                    remap_due_dates: <boolean>
                    remap_closed_due_date: <boolean>
                  time_tracking:
                    enabled: <boolean>
                  tags:
                    enabled: <boolean>
                  time_estimates:
                    enabled: <boolean>
                  checklists:
                    enabled: <boolean>
                  custom_fields:
                    enabled: <boolean>
                  remap_dependencies:
                    enabled: <boolean>
                  dependency_warning:
                    enabled: <boolean>
                  portfolios:
                    enabled: <boolean>
    delete:
      tags:
        - Spaces
      summary: Delete Space
      description: Delete a Space from your Workspace.
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: space_id
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <number>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example: {}
  /v2/space/{space_id}/tag:
    get:
      tags:
        - Tags
      summary: Get Space Tags
      description: View the task Tags available in a Space.
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: space_id
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <number>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                tags:
                  - name: <string>
                    tag_fg: <string>
                    tag_bg: <string>
                  - name: <string>
                    tag_fg: <string>
                    tag_bg: <string>
    post:
      tags:
        - Tags
      summary: Create Space Tag
      description: Add a new task Tag to a Space.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                tag:
                  name: <string>
                  tag_fg: <string>
                  tag_bg: <string>
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: space_id
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <number>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example: {}
  /v2/space/{space_id}/tag/{tag_name}:
    put:
      tags:
        - Tags
      summary: Edit Space Tag
      description: Update a task Tag.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                tag:
                  name: <string>
                  fg_color: <string>
                  bg_color: <string>
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: space_id
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <number>
        - name: tag_name
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                tag:
                  name: <string>
                  fg_color: <string>
                  bg_color: <string>
    delete:
      tags:
        - Tags
      summary: Delete Space Tag
      description: Delete a task Tag from a Space.
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: space_id
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <number>
        - name: tag_name
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example: {}
  /v2/task/{task_id}/tag/{tag_name}:
    post:
      tags:
        - Tags
      summary: Add Tag To Task
      description: Add a Tag to a task.
      requestBody:
        content: {}
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: custom_task_ids
          in: query
          schema:
            type: string
          description: >-
            If you want to reference a task by it's custom task id, this value
            must be `true`.
          example: <boolean>
        - name: team_id
          in: query
          schema:
            type: string
          description: >-
            When the `custom_task_ids` parameter is set to `true`, the Workspace
            ID must be provided using the `team_id` parameter.
             \
            For example: `custom_task_ids=true&team_id=123`.
          example: <number>
        - name: task_id
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: tag_name
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example: {}
    delete:
      tags:
        - Tags
      summary: Remove Tag From Task
      description: Remove a Tag from a task. This does not delete the Tag from the Space.
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: custom_task_ids
          in: query
          schema:
            type: string
          description: >-
            If you want to reference a task by it's custom task id, this value
            must be `true`.
          example: <boolean>
        - name: team_id
          in: query
          schema:
            type: string
          description: >-
            When the `custom_task_ids` parameter is set to `true`, the Workspace
            ID must be provided using the `team_id` parameter.
             \
            For example: `custom_task_ids=true&team_id=123`.
          example: <number>
        - name: task_id
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: tag_name
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example: {}
  /v2/list/{list_id}/task:
    get:
      tags:
        - Tasks
      summary: Get Tasks
      description: >-
        View the tasks in a List. Responses are limited to 100 tasks per page.
        You can only view task information of tasks you can access. \
         \
        This endpoint only includes tasks where the specified `list_id` is their
        home List. Tasks added to the `list_id` with a different home List are
        not included in the response.
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: archived
          in: query
          schema:
            type: string
          example: <boolean>
        - name: include_markdown_description
          in: query
          schema:
            type: string
          description: >-
            To return task descriptions in Markdown format, use
            `?include_markdown_description=true`.
          example: <boolean>
        - name: page
          in: query
          schema:
            type: string
          description: Page to fetch (starts at 0).
          example: <integer>
        - name: order_by
          in: query
          schema:
            type: string
          description: >-
            Order by a particular field. By default, tasks are ordered by
            `created`.\
             \
            Options include: `id`, `created`, `updated`, and `due_date`.
          example: <string>
        - name: reverse
          in: query
          schema:
            type: string
          description: Tasks are displayed in reverse order.
          example: <boolean>
        - name: subtasks
          in: query
          schema:
            type: string
          description: Include or exclude subtasks. By default, subtasks are excluded.
          example: <boolean>
        - name: statuses
          in: query
          schema:
            type: string
          description: >-
            Filter by statuses. To include closed tasks, use the
            `include_closed` parameter. \
             \
            For example: \
             \
            `?statuses[]=to%20do&statuses[]=in%20progress`
          example: <string>
        - name: include_closed
          in: query
          schema:
            type: string
          description: |-
            Include or excluse closed tasks. By default, they are excluded.\
             \
            To include closed tasks, use `include_closed: true`.
          example: <boolean>
        - name: assignees
          in: query
          schema:
            type: string
          description: |-
            Filter by Assignees. For example: \
             \
            `?assignees[]=1234&assignees[]=5678`
          example: <string>
        - name: watchers
          in: query
          schema:
            type: string
          description: Filter by watchers.
          example: <string>
        - name: tags
          in: query
          schema:
            type: string
          description: |-
            Filter by tags. For example: \
             \
            `?tags[]=tag1&tags[]=this%20tag`
          example: <string>
        - name: due_date_gt
          in: query
          schema:
            type: string
          description: Filter by due date greater than Unix time in milliseconds.
          example: <integer>
        - name: due_date_lt
          in: query
          schema:
            type: string
          description: Filter by due date less than Unix time in milliseconds.
          example: <integer>
        - name: date_created_gt
          in: query
          schema:
            type: string
          description: Filter by date created greater than Unix time in milliseconds.
          example: <integer>
        - name: date_created_lt
          in: query
          schema:
            type: string
          description: Filter by date created less than Unix time in milliseconds.
          example: <integer>
        - name: date_updated_gt
          in: query
          schema:
            type: string
          description: Filter by date updated greater than Unix time in milliseconds.
          example: <integer>
        - name: date_updated_lt
          in: query
          schema:
            type: string
          description: Filter by date updated less than Unix time in milliseconds.
          example: <integer>
        - name: date_done_gt
          in: query
          schema:
            type: string
          description: Filter by date done greater than Unix time in milliseconds.
          example: <integer>
        - name: date_done_lt
          in: query
          schema:
            type: string
          description: Filter by date done less than Unix time in milliseconds.
          example: <integer>
        - name: custom_fields
          in: query
          schema:
            type: string
          description: >-
            Include tasks with specific values in one or more Custom Fields.
            Custom Relationships are included.\
             \
            For example:
            `?custom_fields=[{"field_id":"abcdefghi12345678","operator":"=","value":"1234"},{"field_id":"jklmnop123456","operator":"<","value":"5"}]`\
             \
            Only set Custom Field values display in the `value` property of the
            `custom_fields` parameter. If you want to include tasks with
            specific values in only one Custom Field, use `custom_field`
            instead.\
             \
            Learn more about [filtering using Custom Fields.](doc:filtertasks)
          example: <string>
        - name: custom_field
          in: query
          schema:
            type: string
          description: >-
            Include tasks with specific values in only one Custom Field. This
            Custom Field can be a Custom Relationship.
          example: <string>
        - name: custom_items
          in: query
          schema:
            type: string
          description: >-
            Filter by custom task types. For example: \
             \
            `?custom_items[]=0&custom_items[]=1300` \
             \
            Including `0` returns tasks. Including `1` returns Milestones.
            Including any other number returns the custom task type as defined
            in your Workspace.
          example: <number>
        - name: list_id
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) To find the list_id:<br> 1. In the Sidebar, hover over
            the List and click the **ellipsis ...** menu.<br> 2. Select **Copy
            link.**<br> 3. Use the copied URL to find the list_id. The list_id
            is the number that follows /li in the URL.
          example: <number>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                tasks:
                  - id: <string>
                    custom_item_id: <number,null>
                    name: <string>
                    status:
                      status: <string>
                      color: <string>
                      orderindex: <integer>
                      type: <string>
                    orderindex: <string>
                    date_created: <string>
                    date_updated: <string>
                    date_closed: <string,null>
                    date_done: <string,null>
                    creator:
                      id: <integer>
                      username: <string>
                      color: <string>
                      profilePicture: <string>
                    assignees:
                      - <string>
                      - <string>
                    watchers:
                      - <string>
                      - <string>
                    checklists:
                      - <string>
                      - <string>
                    tags:
                      - <string>
                      - <string>
                    parent: <string,null>
                    priority: <string,null>
                    due_date: <string,null>
                    start_date: <string,null>
                    points: <number>
                    time_estimate: <string,null>
                    time_spent: <string,null>
                    list:
                      id: <string>
                    folder:
                      id: <string>
                    space:
                      id: <string>
                    url: <string>
                    markdown_description: <string>
                    custom_fields:
                      id: <string>
                      name: <string>
                      type: <string>
                      type_config:
                        single_user: <boolean>
                        include_groups: <boolean>
                        include_guests: <boolean>
                        include_team_members: <boolean>
                      date_created: <string>
                      hide_from_guests: <boolean>
                      value:
                        id: <integer>
                        username: <string>
                        email: <string>
                        color: <string>
                        initials: <string>
                        profilePicture: <string,null>
                      value_richtext: <string>
                      value_markdown: <string>
                      required: <boolean>
                  - id: <string>
                    custom_item_id: <number,null>
                    name: <string>
                    status:
                      status: <string>
                      color: <string>
                      orderindex: <integer>
                      type: <string>
                    orderindex: <string>
                    date_created: <string>
                    date_updated: <string>
                    date_closed: <string,null>
                    date_done: <string,null>
                    creator:
                      id: <integer>
                      username: <string>
                      color: <string>
                      profilePicture: <string>
                    assignees:
                      - <string>
                      - <string>
                    watchers:
                      - <string>
                      - <string>
                    checklists:
                      - <string>
                      - <string>
                    tags:
                      - <string>
                      - <string>
                    parent: <string,null>
                    priority: <string,null>
                    due_date: <string,null>
                    start_date: <string,null>
                    points: <number>
                    time_estimate: <string,null>
                    time_spent: <string,null>
                    list:
                      id: <string>
                    folder:
                      id: <string>
                    space:
                      id: <string>
                    url: <string>
                    markdown_description: <string>
                    custom_fields:
                      id: <string>
                      name: <string>
                      type: <string>
                      type_config:
                        single_user: <boolean>
                        include_groups: <boolean>
                        include_guests: <boolean>
                        include_team_members: <boolean>
                      date_created: <string>
                      hide_from_guests: <boolean>
                      value:
                        id: <integer>
                        username: <string>
                        email: <string>
                        color: <string>
                        initials: <string>
                        profilePicture: <string,null>
                      value_richtext: <string>
                      value_markdown: <string>
                      required: <boolean>
                last_page: <boolean>
  /v2/list/970400017757/task:
    post:
      tags:
        - Tasks
      summary: Create Task
      description: Create a new task.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                name: API test
                description: https://www.markdownguide.org/cheat-sheet/
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: custom_task_ids
          in: query
          schema:
            type: string
          description: >-
            If you want to reference a task by its custom task id, this value
            must be `true`.
          example: <boolean>
        - name: team_id
          in: query
          schema:
            type: string
          description: >-
            When the `custom_task_ids` parameter is set to `true`, the Workspace
            ID must be provided using the `team_id` parameter.
             \
            For example: `custom_task_ids=true&team_id=123`.
          example: <number>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                id: <string>
                custom_id: <string,null>
                custom_item_id: <number,null>
                name: <string>
                text_content: <string>
                description: <string>
                status:
                  status: <string>
                  color: <string>
                  orderindex: <integer>
                  type: <string>
                orderindex: <string>
                date_created: <string>
                date_updated: <string>
                date_closed: <string,null>
                creator:
                  id: <integer>
                  username: <string>
                  color: <string>
                  profilePicture: <string>
                assignees:
                  - <string>
                  - <string>
                archived: <boolean>
                group_assignees:
                  - <string>
                  - <string>
                checklists:
                  - <string>
                  - <string>
                tags:
                  - <string>
                  - <string>
                parent: <string,null>
                priority: <string,null>
                due_date: <string,null>
                start_date: <string,null>
                points: <number>
                time_estimate: <string,null>
                time_spent: <string,null>
                custom_fields:
                  - id: <string>
                    name: <string>
                    type: <string>
                    type_config:
                      single_user: <boolean>
                      include_groups: <boolean>
                      include_guests: <boolean>
                      include_team_members: <boolean>
                    date_created: <string>
                    hide_from_guests: <boolean>
                    value:
                      id: <integer>
                      username: <string>
                      email: <string>
                      color: <string>
                      initials: <string>
                      profilePicture: <string,null>
                    value_richtext: <string>
                    value_markdown: <string>
                    required: <boolean>
                  - id: <string>
                    name: <string>
                    type: <string>
                    type_config:
                      single_user: <boolean>
                      include_groups: <boolean>
                      include_guests: <boolean>
                      include_team_members: <boolean>
                    date_created: <string>
                    hide_from_guests: <boolean>
                    value:
                      id: <integer>
                      username: <string>
                      email: <string>
                      color: <string>
                      initials: <string>
                      profilePicture: <string,null>
                    value_richtext: <string>
                    value_markdown: <string>
                    required: <boolean>
                list:
                  id: <string>
                folder:
                  id: <string>
                space:
                  id: <string>
                url: <string>
  /v2/task/{86cy5kpxp}:
    get:
      tags:
        - Tasks
      summary: Get Task
      description: >-
        View information about a task. You can only view task information of
        tasks you can access. \
         \
        Tasks with attachments will return an "attachments" response. \
         \
        Docs attached to a task are not returned.
      security:
        - apikeyAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: custom_task_ids
          in: query
          schema:
            type: string
          description: >-
            If you want to reference a task by its custom task id, this value
            must be `true`.
          example: <boolean>
        - name: team_id
          in: query
          schema:
            type: string
          description: >-
            When the `custom_task_ids` parameter is set to `true`, the Workspace
            ID must be provided using the `team_id` parameter.
             \
            For example: `custom_task_ids=true&team_id=123`.
          example: <number>
        - name: include_subtasks
          in: query
          schema:
            type: string
          description: Include subtasks, default false
          example: <boolean>
        - name: include_markdown_description
          in: query
          schema:
            type: string
          description: >-
            To return task descriptions in Markdown format, use
            `?include_markdown_description=true`.
          example: <boolean>
        - name: custom_fields
          in: query
          schema:
            type: string
          description: >-
            Include tasks with specific values in one or more Custom Fields.
            Custom Relationships are included.\
             \
            For example:
            `?custom_fields=[{"field_id":"abcdefghi12345678","operator":"=","value":"1234"},{"field_id":"jklmnop123456","operator":"<","value":"5"}]`\
             \
            Only set Custom Field values display in the `value` property of the
            `custom_fields` parameter. If you want to include tasks with
            specific values in only one Custom Field, use `custom_field`
            instead.\
             \
            Learn more about [filtering using Custom Fields.](doc:filtertasks)
          example: <string>
        - name: 86cy5kpxp
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                id: <string>
                custom_id: <string,null>
                custom_item_id: <number,null>
                name: <string>
                text_content: <string>
                description: <string>
                status:
                  status: <string>
                  color: <string>
                  orderindex: <integer>
                  type: <string>
                orderindex: <string>
                date_created: <string>
                date_updated: <string>
                date_closed: <string,null>
                creator:
                  id: <integer>
                  username: <string>
                  color: <string>
                  profilePicture: <string>
                assignees:
                  - <string>
                  - <string>
                watchers:
                  - <string>
                  - <string>
                checklists:
                  - <string>
                  - <string>
                tags:
                  - <string>
                  - <string>
                parent: <string,null>
                priority: <string,null>
                due_date: <string,null>
                start_date: <string,null>
                points: <number>
                time_estimate: <string,null>
                time_spent: <string,null>
                custom_fields:
                  - id: <string>
                    name: <string>
                    type: <string>
                    type_config:
                      single_user: <boolean>
                      include_groups: <boolean>
                      include_guests: <boolean>
                      include_team_members: <boolean>
                    date_created: <string>
                    hide_from_guests: <boolean>
                    value:
                      id: <integer>
                      username: <string>
                      email: <string>
                      color: <string>
                      initials: <string>
                      profilePicture: <string,null>
                    value_richtext: <string>
                    value_markdown: <string>
                    required: <boolean>
                  - id: <string>
                    name: <string>
                    type: <string>
                    type_config:
                      single_user: <boolean>
                      include_groups: <boolean>
                      include_guests: <boolean>
                      include_team_members: <boolean>
                    date_created: <string>
                    hide_from_guests: <boolean>
                    value:
                      id: <integer>
                      username: <string>
                      email: <string>
                      color: <string>
                      initials: <string>
                      profilePicture: <string,null>
                    value_richtext: <string>
                    value_markdown: <string>
                    required: <boolean>
                list:
                  id: <string>
                folder:
                  id: <string>
                space:
                  id: <string>
                url: <string>
                markdown_description: <string>
                attachments:
                  - id: <string>
                    date: <bigint>
                    title: <string>
                    type: <int>
                    source: <int>
                    version: <int>
                    extension: <string>
                    thumbnail_small: <string>
                    thumbnail_medium: <string>
                    thumbnail_large: <string>
                    is_folder: <boolean>
                    mimetype: <string>
                    hidden: <boolean>
                    parent_id: <string>
                    size: <bigint>
                    total_comments: <int>
                    resolved_comments: <int>
                    user:
                      id: <integer>
                      username: <string>
                      initials: <string>
                      email: <string>
                      color: <string>
                      profilePicture: <string>
                    deleted: <boolean>
                    orientation: <string>
                    url: <string>
                    email_data: {}
                    url_w_query: <string>
                    url_w_host: <string>
                  - id: <string>
                    date: <bigint>
                    title: <string>
                    type: <int>
                    source: <int>
                    version: <int>
                    extension: <string>
                    thumbnail_small: <string>
                    thumbnail_medium: <string>
                    thumbnail_large: <string>
                    is_folder: <boolean>
                    mimetype: <string>
                    hidden: <boolean>
                    parent_id: <string>
                    size: <bigint>
                    total_comments: <int>
                    resolved_comments: <int>
                    user:
                      id: <integer>
                      username: <string>
                      initials: <string>
                      email: <string>
                      color: <string>
                      profilePicture: <string>
                    deleted: <boolean>
                    orientation: <string>
                    url: <string>
                    email_data: {}
                    url_w_query: <string>
                    url_w_host: <string>
  /v2/task/{task_id}:
    put:
      tags:
        - Tasks
      summary: Update Task
      description: Update a task by including one or more fields in the request body.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                custom_item_id: <number,null>
                name: <string>
                description: <string>
                markdown_content: <string>
                status: <string>
                priority: <integer>
                due_date: <integer>
                due_date_time: <boolean>
                parent: <string>
                time_estimate: <integer>
                start_date: <integer>
                start_date_time: <boolean>
                points: <number>
                assignees:
                  add:
                    - <integer>
                    - <integer>
                  rem:
                    - <integer>
                    - <integer>
                group_assignees:
                  add:
                    - <integer>
                    - <integer>
                  rem:
                    - <integer>
                    - <integer>
                watchers:
                  add:
                    - <integer>
                    - <integer>
                  rem:
                    - <integer>
                    - <integer>
                archived: <boolean>
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: custom_task_ids
          in: query
          schema:
            type: string
          description: >-
            If you want to reference a task by its custom task id, this value
            must be `true`.
          example: <boolean>
        - name: team_id
          in: query
          schema:
            type: string
          description: >-
            When the `custom_task_ids` parameter is set to `true`, the Workspace
            ID must be provided using the `team_id` parameter.
             \
            For example: `custom_task_ids=true&team_id=123`.
          example: <number>
        - name: task_id
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                id: <string>
                custom_id: <string,null>
                custom_item_id: <number,null>
                name: <string>
                text_content: <string>
                description: <string>
                status:
                  status: <string>
                  color: <string>
                  orderindex: <integer>
                  type: <string>
                archived: <boolean>
                orderindex: <string>
                date_created: <string>
                date_updated: <string>
                date_closed: <string,null>
                creator:
                  id: <integer>
                  username: <string>
                  color: <string>
                  profilePicture: <string>
                assignees:
                  - <string>
                  - <string>
                group_assignees:
                  - <string>
                  - <string>
                checklists:
                  - <string>
                  - <string>
                tags:
                  - <string>
                  - <string>
                parent: <string>
                priority: <string,null>
                due_date: <string,null>
                start_date: <string,null>
                points: <number>
                time_estimate: <string,null>
                time_spent: <string,null>
                custom_fields:
                  - id: <string>
                    name: <string>
                    type: <string>
                    type_config:
                      single_user: <boolean>
                      include_groups: <boolean>
                      include_guests: <boolean>
                      include_team_members: <boolean>
                    date_created: <string>
                    hide_from_guests: <boolean>
                    required: <boolean>
                    value: <string>
                  - id: <string>
                    name: <string>
                    type: <string>
                    type_config:
                      single_user: <boolean>
                      include_groups: <boolean>
                      include_guests: <boolean>
                      include_team_members: <boolean>
                    date_created: <string>
                    hide_from_guests: <boolean>
                    required: <boolean>
                    value: <string>
                list:
                  id: <string>
                folder:
                  id: <string>
                space:
                  id: <string>
                url: <string>
    delete:
      tags:
        - Tasks
      summary: Delete Task
      description: Delete a task from your Workspace.
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: custom_task_ids
          in: query
          schema:
            type: string
          description: >-
            If you want to reference a task by its custom task id, this value
            must be `true`.
          example: <boolean>
        - name: team_id
          in: query
          schema:
            type: string
          description: >-
            When the `custom_task_ids` parameter is set to `true`, the Workspace
            ID must be provided using the `team_id` parameter.
             \
            For example: `custom_task_ids=true&team_id=123`.
          example: <number>
        - name: task_id
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example: {}
  /v2/team/{team_Id}/task:
    get:
      tags:
        - Tasks
      summary: Get Filtered Team Tasks
      description: >-
        View the tasks that meet specific criteria from a Workspace. Responses
        are limited to 100 tasks per page.  \
         \
        You can only view task information of tasks you can access. \
         \
         Our Try It modal currently supports filtering by two or more Lists, Folders, or Spaces. To filter by a single List, Folder, or Space, we recommend using a free app like [Postman](https://www.postman.com/) to test our public API.
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: page
          in: query
          schema:
            type: string
          description: Page to fetch (starts at 0).
          example: <integer>
        - name: order_by
          in: query
          schema:
            type: string
          description: >-
            Order by a particular field. By default, tasks are ordered by
            `created`.\
             \
            Options include: `id`, `created`, `updated`, and `due_date`.
          example: <string>
        - name: reverse
          in: query
          schema:
            type: string
          description: Tasks are displayed in reverse order.
          example: <boolean>
        - name: subtasks
          in: query
          schema:
            type: string
          description: Include or exclude subtasks. By default, subtasks are excluded.
          example: <boolean>
        - name: space_ids
          in: query
          schema:
            type: string
          description: |-
            Filter by Spaces. For example: \
             \
            `?space_ids[]=1234&space_ids[]=6789`
          example: <string>
        - name: project_ids
          in: query
          schema:
            type: string
          description: |-
            Filter by Folders. For example: \
             \
            `?project_ids[]=1234&project_ids[]=6789`
          example: <string>
        - name: list_ids[]
          in: query
          schema:
            type: string
          description: |-
            Filter by Lists. For example: \
             \
            `?list_ids[]=1234&list_ids[]=6789` 
          example: <string>
        - name: statuses
          in: query
          schema:
            type: string
          description: >-
            Filter by statuses. Use `%20` to represent a space character. To
            include closed tasks, use the `include_closed` parameter. \
             \
            For example: \
             \
            `?statuses[]=to%20do&statuses[]=in%20progress`
          example: <string>
        - name: include_closed
          in: query
          schema:
            type: string
          description: |-
            Include or excluse closed tasks. By default, they are excluded.\
             \
            To include closed tasks, use `include_closed: true`.
          example: <boolean>
        - name: assignees
          in: query
          schema:
            type: string
          description: |-
            Filter by Assignees using people's ClickUp user id. For example: \
             \
            `?assignees[]=1234&assignees[]=5678`
          example: <string>
        - name: tags
          in: query
          schema:
            type: string
          description: >-
            Filter by tags. User `%20` to represent a space character. For
            example: \
             \
            `?tags[]=tag1&tags[]=this%20tag`
          example: <string>
        - name: due_date_gt
          in: query
          schema:
            type: string
          description: Filter by due date greater than Unix time in milliseconds.
          example: <integer>
        - name: due_date_lt
          in: query
          schema:
            type: string
          description: Filter by due date less than Unix time in milliseconds.
          example: <integer>
        - name: date_created_gt
          in: query
          schema:
            type: string
          description: Filter by date created greater than Unix time in milliseconds.
          example: <integer>
        - name: date_created_lt
          in: query
          schema:
            type: string
          description: Filter by date created less than Unix time in milliseconds.
          example: <integer>
        - name: date_updated_gt
          in: query
          schema:
            type: string
          description: Filter by date updated greater than Unix time in milliseconds.
          example: <integer>
        - name: date_updated_lt
          in: query
          schema:
            type: string
          description: Filter by date updated less than Unix time in milliseconds.
          example: <integer>
        - name: date_done_gt
          in: query
          schema:
            type: string
          description: Filter by date done greater than Unix time in milliseconds.
          example: <integer>
        - name: date_done_lt
          in: query
          schema:
            type: string
          description: Filter by date done less than Unix time in milliseconds.
          example: <integer>
        - name: custom_fields
          in: query
          schema:
            type: string
          description: >-
            Include tasks with specific values in one or more Custom Fields.
            Custom Relationships are included.\
             \
            For example:
            `?custom_fields=[{"field_id":"abcdefghi12345678","operator":"=","value":"1234"}{"field_id":"jklmnop123456","operator":"<","value":"5"}]`\
             \
            Only set Custom Field values display in the `value` property of the
            `custom_fields` parameter. The `=` operator isn't supported with
            Label Custom Fields.\
             \
            Learn more about [filtering using Custom
            Fields.](https://help.clickup.com/hc/en-us/articles/12665650881943-Search-sort-and-filter-tasks-by-Custom-Fields)
          example: <string>
        - name: custom_task_ids
          in: query
          schema:
            type: string
          description: >-
            If you want to reference a task by its custom task id, this value
            must be `true`.
          example: <boolean>
        - name: team_id
          in: query
          schema:
            type: string
          description: >-
            When the `custom_task_ids` parameter is set to `true`, the Workspace
            ID must be provided using the `team_id` parameter.
             \
            For example: `custom_task_ids=true&team_id=123`.
          example: <number>
        - name: parent
          in: query
          schema:
            type: string
          description: Include the parent task ID to return subtasks.
          example: <string>
        - name: include_markdown_description
          in: query
          schema:
            type: string
          description: >-
            To return task descriptions in Markdown format, use
            `?include_markdown_description=true`.
          example: <boolean>
        - name: custom_items
          in: query
          schema:
            type: string
          description: >-
            Filter by custom task types. For example: \
             \
            `?custom_items[]=0&custom_items[]=1300` \
             \
            Including `0` returns tasks. Including `1` returns Milestones.
            Including any other number returns the custom task type as defined
            in your Workspace.
          example: <number>
        - name: team_Id
          in: path
          schema:
            type: string
          required: true
          description: (Required) Workspace ID
          example: <number>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                tasks:
                  - id: <string>
                    custom_id: <string,null>
                    name: <string>
                    text_content: <string>
                    description: <string>
                    status:
                      status: <string>
                      color: <string>
                      orderindex: <integer>
                      type: <string>
                    orderindex: <string>
                    date_created: <string>
                    date_updated: <string>
                    date_closed: <string>
                    date_done: <string,null>
                    creator:
                      id: <integer>
                      username: <string>
                      color: <string>
                      email: <string>
                      profilePicture: <string>
                    assignees:
                      - id: <integer>
                        username: <string>
                        color: <string>
                        email: <string>
                        profilePicture: <string>
                      - id: <integer>
                        username: <string>
                        color: <string>
                        email: <string>
                        profilePicture: <string>
                    watchers:
                      - id: <integer>
                        username: <string>
                        color: <string>
                        email: <string>
                        profilePicture: <string>
                      - id: <integer>
                        username: <string>
                        color: <string>
                        email: <string>
                        profilePicture: <string>
                    checklists:
                      - id: <string>
                        task_id: <string>
                        name: <string>
                        date_created: <string>
                        orderindex: <integer>
                        creator: <integer>
                        resolved: <integer>
                        unresolved: <integer>
                        items:
                          - id: <string>
                            name: <string>
                            orderindex: <integer>
                            assignee: <string,null>
                            resolved: <boolean>
                            parent: <string,null>
                            date_created: <string>
                            children:
                              - <string>
                              - <string>
                          - id: <string>
                            name: <string>
                            orderindex: <integer>
                            assignee: <string,null>
                            resolved: <boolean>
                            parent: <string,null>
                            date_created: <string>
                            children:
                              - <string>
                              - <string>
                      - id: <string>
                        task_id: <string>
                        name: <string>
                        date_created: <string>
                        orderindex: <integer>
                        creator: <integer>
                        resolved: <integer>
                        unresolved: <integer>
                        items:
                          - id: <string>
                            name: <string>
                            orderindex: <integer>
                            assignee: <string,null>
                            resolved: <boolean>
                            parent: <string,null>
                            date_created: <string>
                            children:
                              - <string>
                              - <string>
                          - id: <string>
                            name: <string>
                            orderindex: <integer>
                            assignee: <string,null>
                            resolved: <boolean>
                            parent: <string,null>
                            date_created: <string>
                            children:
                              - <string>
                              - <string>
                    tags:
                      - name: <string>
                        tag_fg: <string>
                        tag_bg: <string>
                      - name: <string>
                        tag_fg: <string>
                        tag_bg: <string>
                    parent: <string>
                    priority: <integer>
                    due_date: <string>
                    start_date: <string>
                    points: <number>
                    time_estimate: <number>
                    custom_fields:
                      - id: <string>
                        name: <string>
                        type: <string>
                        type_config: {}
                        date_created: <string>
                        hide_from_guests: <boolean>
                        required: <boolean>
                      - id: <string>
                        name: <string>
                        type: <string>
                        type_config: {}
                        date_created: <string>
                        hide_from_guests: <boolean>
                        required: <boolean>
                    dependencies:
                      - <string>
                      - <string>
                    linked_tasks:
                      - <string>
                      - <string>
                    team_id: <string>
                    url: <string>
                    permission_level: <string>
                    list:
                      id: <string>
                      name: <string>
                      access: <boolean>
                    project:
                      id: <string>
                      name: <string>
                      hidden: <boolean>
                      access: <boolean>
                    folder:
                      id: <string>
                      name: <string>
                      hidden: <boolean>
                      access: <boolean>
                    space:
                      id: <string>
                    markdown_description: <string>
                  - id: <string>
                    custom_id: <string,null>
                    name: <string>
                    text_content: <string>
                    description: <string>
                    status:
                      status: <string>
                      color: <string>
                      orderindex: <integer>
                      type: <string>
                    orderindex: <string>
                    date_created: <string>
                    date_updated: <string>
                    date_closed: <string>
                    date_done: <string,null>
                    creator:
                      id: <integer>
                      username: <string>
                      color: <string>
                      email: <string>
                      profilePicture: <string>
                    assignees:
                      - id: <integer>
                        username: <string>
                        color: <string>
                        email: <string>
                        profilePicture: <string>
                      - id: <integer>
                        username: <string>
                        color: <string>
                        email: <string>
                        profilePicture: <string>
                    watchers:
                      - id: <integer>
                        username: <string>
                        color: <string>
                        email: <string>
                        profilePicture: <string>
                      - id: <integer>
                        username: <string>
                        color: <string>
                        email: <string>
                        profilePicture: <string>
                    checklists:
                      - id: <string>
                        task_id: <string>
                        name: <string>
                        date_created: <string>
                        orderindex: <integer>
                        creator: <integer>
                        resolved: <integer>
                        unresolved: <integer>
                        items:
                          - id: <string>
                            name: <string>
                            orderindex: <integer>
                            assignee: <string,null>
                            resolved: <boolean>
                            parent: <string,null>
                            date_created: <string>
                            children:
                              - <string>
                              - <string>
                          - id: <string>
                            name: <string>
                            orderindex: <integer>
                            assignee: <string,null>
                            resolved: <boolean>
                            parent: <string,null>
                            date_created: <string>
                            children:
                              - <string>
                              - <string>
                      - id: <string>
                        task_id: <string>
                        name: <string>
                        date_created: <string>
                        orderindex: <integer>
                        creator: <integer>
                        resolved: <integer>
                        unresolved: <integer>
                        items:
                          - id: <string>
                            name: <string>
                            orderindex: <integer>
                            assignee: <string,null>
                            resolved: <boolean>
                            parent: <string,null>
                            date_created: <string>
                            children:
                              - <string>
                              - <string>
                          - id: <string>
                            name: <string>
                            orderindex: <integer>
                            assignee: <string,null>
                            resolved: <boolean>
                            parent: <string,null>
                            date_created: <string>
                            children:
                              - <string>
                              - <string>
                    tags:
                      - name: <string>
                        tag_fg: <string>
                        tag_bg: <string>
                      - name: <string>
                        tag_fg: <string>
                        tag_bg: <string>
                    parent: <string>
                    priority: <integer>
                    due_date: <string>
                    start_date: <string>
                    points: <number>
                    time_estimate: <number>
                    custom_fields:
                      - id: <string>
                        name: <string>
                        type: <string>
                        type_config: {}
                        date_created: <string>
                        hide_from_guests: <boolean>
                        required: <boolean>
                      - id: <string>
                        name: <string>
                        type: <string>
                        type_config: {}
                        date_created: <string>
                        hide_from_guests: <boolean>
                        required: <boolean>
                    dependencies:
                      - <string>
                      - <string>
                    linked_tasks:
                      - <string>
                      - <string>
                    team_id: <string>
                    url: <string>
                    permission_level: <string>
                    list:
                      id: <string>
                      name: <string>
                      access: <boolean>
                    project:
                      id: <string>
                      name: <string>
                      hidden: <boolean>
                      access: <boolean>
                    folder:
                      id: <string>
                      name: <string>
                      hidden: <boolean>
                      access: <boolean>
                    space:
                      id: <string>
                    markdown_description: <string>
  /v2/task/{task_id}/time_in_status:
    get:
      tags:
        - Tasks
      summary: Get Task's Time in Status
      description: >-
        View how long a task has been in each status. The Total time in Status
        ClickApp must first be enabled by the Workspace owner or an admin.
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: custom_task_ids
          in: query
          schema:
            type: string
          description: >-
            If you want to reference a task by it's custom task id, this value
            must be `true`.
          example: <boolean>
        - name: team_id
          in: query
          schema:
            type: string
          description: >-
            When the `custom_task_ids` parameter is set to `true`, the Workspace
            ID must be provided using the `team_id` parameter.
             \
            For example: `custom_task_ids=true&team_id=123`.
          example: <number>
        - name: task_id
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                current_status:
                  status: <string>
                  color: <string>
                  total_time:
                    by_minute: <integer>
                    since: <string>
                status_history:
                  - status: <string>
                    color: <string>
                    type: <string>
                    total_time:
                      by_minute: <integer>
                      since: <string>
                    orderindex: <integer>
                  - status: <string>
                    color: <string>
                    type: <string>
                    total_time:
                      by_minute: <integer>
                      since: <string>
                    orderindex: <integer>
  /v2/task/bulk_time_in_status/task_ids:
    get:
      tags:
        - Tasks
      summary: Get Bulk Tasks' Time in Status
      description: >-
        View how long two or more tasks have been in each status. The Total time
        in Status ClickApp must first be enabled by the Workspace owner or an
        admin.
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: task_ids
          in: query
          schema:
            type: string
          description: |-
            (Required) Include this paramater once per `task_id`.
            You can include up to 100 task ids per request.
            For example: `task_ids=3cuh&task_ids=g4fs`
          example: <string>
        - name: custom_task_ids
          in: query
          schema:
            type: string
          description: >-
            If you want to reference a task by it's custom task id, this value
            must be `true`.
          example: <boolean>
        - name: team_id
          in: query
          schema:
            type: string
          description: >-
            When the `custom_task_ids` parameter is set to `true`, the Workspace
            ID must be provided using the `team_id` parameter.
             \
            For example: `custom_task_ids=true&team_id=123`.
          example: <number>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                27075wz:
                  current_status:
                    status: <string>
                    color: <string>
                    total_time:
                      by_minute: <integer>
                      since: <string>
                  status_history:
                    - status: <string>
                      color: <string>
                      type: <string>
                      total_time:
                        by_minute: <integer>
                        since: <string>
                      orderindex: <integer>
                    - status: <string>
                      color: <string>
                      type: <string>
                      total_time:
                        by_minute: <integer>
                        since: <string>
                      orderindex: <integer>
                20bbn28:
                  current_status:
                    status: <string>
                    color: <string>
                    total_time:
                      by_minute: <integer>
                      since: <string>
                  status_history:
                    - status: <string>
                      color: <string>
                      type: <string>
                      total_time:
                        by_minute: <integer>
                        since: <string>
                      orderindex: <integer>
                    - status: <string>
                      color: <string>
                      type: <string>
                      total_time:
                        by_minute: <integer>
                        since: <string>
                      orderindex: <integer>
  /v2/list/{list_id}/taskTemplate/{template_id}:
    post:
      tags:
        - Tasks
      summary: Create Task From Template
      description: Create a new task using a task template.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                name: <string>
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: list_id
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <number>
        - name: template_id
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example: {}
  /v2/task/{task_id}/checklist:
    post:
      tags:
        - Task Checklists
      summary: Create Checklist
      description: Add a new checklist to a task.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                name: <string>
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: custom_task_ids
          in: query
          schema:
            type: string
          description: >-
            If you want to reference a task by it's custom task id, this value
            must be `true`.
          example: <boolean>
        - name: team_id
          in: query
          schema:
            type: string
          description: >-
            When the `custom_task_ids` parameter is set to `true`, the Workspace
            ID must be provided using the `team_id` parameter.
             \
            For example: `custom_task_ids=true&team_id=123`.
          example: <number>
        - name: task_id
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                checklist:
                  id: <string>
                  task_id: <string>
                  name: <string>
                  orderindex: <integer>
                  resolved: <integer>
                  unresolved: <integer>
                  items:
                    - <string>
                    - <string>
  /v2/checklist/{checklist_id}:
    put:
      tags:
        - Task Checklists
      summary: Edit Checklist
      description: >-
        Rename a task checklist, or reorder a checklist so it appears above or
        below other checklists on a task. 
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                name: <string>
                position: <integer>
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: checklist_id
          in: path
          schema:
            type: string
          required: true
          description: (Required) b8a8-48d8-a0c6-b4200788a683 (uuid)
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example: {}
    delete:
      tags:
        - Task Checklists
      summary: Delete Checklist
      description: Delete a checklist from a task.
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: checklist_id
          in: path
          schema:
            type: string
          required: true
          description: (Required) b8a8-48d8-a0c6-b4200788a683 (uuid)
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example: {}
  /v2/checklist/{checklist_id}/checklist_item:
    post:
      tags:
        - Task Checklists
      summary: Create Checklist Item
      description: Add a line item to a task checklist.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                name: <string>
                assignee: <integer>
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: checklist_id
          in: path
          schema:
            type: string
          required: true
          description: (Required) b8a8-48d8-a0c6-b4200788a683 (uuid)
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                checklist:
                  id: <string>
                  task_id: <string>
                  name: <string>
                  date_created: <string>
                  orderindex: <integer>
                  resolved: <integer>
                  unresolved: <integer>
                  items:
                    - id: <string>
                      name: <string>
                      orderindex: <integer>
                      assignee:
                        id: <integer>
                        username: <string>
                        email: <string>
                        color: <string>
                        initials: <string>
                        profilePicture: <string>
                      resolved: <boolean>
                      parent: <string,null>
                      date_created: <string>
                      children:
                        - <string>
                        - <string>
                    - id: <string>
                      name: <string>
                      orderindex: <integer>
                      assignee:
                        id: <integer>
                        username: <string>
                        email: <string>
                        color: <string>
                        initials: <string>
                        profilePicture: <string>
                      resolved: <boolean>
                      parent: <string,null>
                      date_created: <string>
                      children:
                        - <string>
                        - <string>
  /v2/checklist/{checklist_id}/checklist_item/{checklist_item_id}:
    put:
      tags:
        - Task Checklists
      summary: Edit Checklist Item
      description: >-
        Update an individual line item in a task checklist. \
         \
        You can rename it, set the assignee, mark it as resolved, or nest it
        under another checklist item.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                name: <string>
                assignee: <string,null>
                resolved: <boolean>
                parent: <string,null>
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: checklist_id
          in: path
          schema:
            type: string
          required: true
          description: (Required) b8a8-48d8-a0c6-b4200788a683 (uuid)
          example: <string>
        - name: checklist_item_id
          in: path
          schema:
            type: string
          required: true
          description: (Required) e491-47f5-9fd8-d1dc4cedcc6f (uuid)
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                checklist:
                  id: <string>
                  task_id: <string>
                  name: <string>
                  date_created: <string>
                  orderindex: <integer>
                  resolved: <integer>
                  unresolved: <integer>
                  items:
                    - id: <string>
                      name: <string>
                      orderindex: <integer>
                      assignee: <string,null>
                      resolved: <boolean>
                      parent: <string,null>
                      date_created: <string>
                      children:
                        - <string>
                        - <string>
                    - id: <string>
                      name: <string>
                      orderindex: <integer>
                      assignee: <string,null>
                      resolved: <boolean>
                      parent: <string,null>
                      date_created: <string>
                      children:
                        - <string>
                        - <string>
    delete:
      tags:
        - Task Checklists
      summary: Delete Checklist Item
      description: Delete a line item from a task checklist.
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: checklist_id
          in: path
          schema:
            type: string
          required: true
          description: (Required) b8a8-48d8-a0c6-b4200788a683 (uuid)
          example: <string>
        - name: checklist_item_id
          in: path
          schema:
            type: string
          required: true
          description: (Required) e491-47f5-9fd8-d1dc4cedcc6f (uuid)
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example: {}
  /v2/task/{task_id}/dependency:
    post:
      tags:
        - Task Relationships
      summary: Add Dependency
      description: Set a task as waiting on or blocking another task.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                depends_on: <string>
                depedency_of: <string>
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: custom_task_ids
          in: query
          schema:
            type: string
          description: >-
            If you want to reference a task by it's custom task id, this value
            must be `true`.
          example: <boolean>
        - name: team_id
          in: query
          schema:
            type: string
          description: >-
            When the `custom_task_ids` parameter is set to `true`, the Workspace
            ID must be provided using the `team_id` parameter.

            \

            For example: `custom_task_ids=true&team_id=123`.
          example: <number>
        - name: task_id
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) This is the task which is waiting on or blocking another
            task.
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example: {}
    delete:
      tags:
        - Task Relationships
      summary: Delete Dependency
      description: Remove the dependency relationship between two or more tasks.
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: depends_on
          in: query
          schema:
            type: string
          description: '(Required) '
          example: <string>
        - name: dependency_of
          in: query
          schema:
            type: string
          description: '(Required) '
          example: <string>
        - name: custom_task_ids
          in: query
          schema:
            type: string
          description: >-
            If you want to reference a task by it's custom task id, this value
            must be `true`.
          example: <boolean>
        - name: team_id
          in: query
          schema:
            type: string
          description: >-
            When the `custom_task_ids` parameter is set to `true`, the Workspace
            ID must be provided using the `team_id` parameter.
             \
            For example: `custom_task_ids=true&team_id=123`.
          example: <number>
        - name: task_id
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example: {}
  /v2/task/{task_id}/link/{links_to}:
    post:
      tags:
        - Task Relationships
      summary: Add Task Link
      description: >-
        This is the equivalent of the feature _Task Links_ in the right-hand
        sidebar of a Task.  It allows you to link two tasks together. General
        links or links to other objects than tasks are not supported.
      requestBody:
        content: {}
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: custom_task_ids
          in: query
          schema:
            type: string
          description: >-
            If you want to reference a task by it's custom task id, this value
            must be `true`.
          example: <boolean>
        - name: team_id
          in: query
          schema:
            type: string
          description: >-
            When the `custom_task_ids` parameter is set to `true`, the Workspace
            ID must be provided using the `team_id` parameter.
             \
            For example: `custom_task_ids=true&team_id=123`.
          example: <number>
        - name: task_id
          in: path
          schema:
            type: string
          required: true
          description: (Required) The task to initiate the link from.
          example: <string>
        - name: links_to
          in: path
          schema:
            type: string
          required: true
          description: (Required) The task to link to.
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                task:
                  id: <string>
                  name: <string>
                  status:
                    status: <string>
                    color: <string>
                    orderindex: <integer>
                    type: <string>
                  orderindex: <string>
                  date_created: <string>
                  date_updated: <string>
                  date_closed: <string,null>
                  creator:
                    id: <integer>
                    username: <string>
                    color: <string>
                    profilePicture: <string>
                  assignees:
                    - <string>
                    - <string>
                  checklists:
                    - <string>
                    - <string>
                  tags:
                    - <string>
                    - <string>
                  parent: <string,null>
                  priority: <string,null>
                  due_date: <string,null>
                  start_date: <string,null>
                  time_estimate: <string,null>
                  time_spent: <string,null>
                  list:
                    id: <string>
                  folder:
                    id: <string>
                  space:
                    id: <string>
                  linked_tasks:
                    - task_id: <string>
                      link_id: <string>
                      date_created: <string>
                      userid: <string>
                    - task_id: <string>
                      link_id: <string>
                      date_created: <string>
                      userid: <string>
                  url: <string>
    delete:
      tags:
        - Task Relationships
      summary: Delete Task Link
      description: Remove the link between two tasks.
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: custom_task_ids
          in: query
          schema:
            type: string
          description: >-
            If you want to reference a task by it's custom task id, this value
            must be `true`.
          example: <boolean>
        - name: team_id
          in: query
          schema:
            type: string
          description: >-
            When the `custom_task_ids` parameter is set to `true`, the Workspace
            ID must be provided using the `team_id` parameter.
             \
            For example: `custom_task_ids=true&team_id=123`.
          example: <number>
        - name: task_id
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: links_to
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                task:
                  id: <string>
                  name: <string>
                  status:
                    status: <string>
                    color: <string>
                    orderindex: <integer>
                    type: <string>
                  orderindex: <string>
                  date_created: <string>
                  date_updated: <string>
                  date_closed: <string,null>
                  creator:
                    id: <integer>
                    username: <string>
                    color: <string>
                    profilePicture: <string>
                  assignees:
                    - <string>
                    - <string>
                  checklists:
                    - <string>
                    - <string>
                  tags:
                    - <string>
                    - <string>
                  parent: <string,null>
                  priority: <string,null>
                  due_date: <string,null>
                  start_date: <string,null>
                  time_estimate: <string,null>
                  time_spent: <string,null>
                  list:
                    id: <string>
                  folder:
                    id: <string>
                  space:
                    id: <string>
                  linked_tasks:
                    - <string>
                    - <string>
                  url: <string>
  /v2/team/{team_id}/taskTemplate:
    get:
      tags:
        - Templates
      summary: Get Task Templates
      description: View the task templates available in a Workspace.
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: page
          in: query
          schema:
            type: string
          description: '(Required) '
          example: <integer>
        - name: team_id
          in: path
          schema:
            type: string
          required: true
          description: (Required) Workspace ID
          example: <number>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                templates:
                  - <string>
                  - <string>
  /v2/team/{team_id}/seats:
    get:
      tags:
        - Workspaces
      summary: Get Workspace seats
      description: >-
        View the used, total, and available member and guest seats for a
        Workspace.
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: team_id
          in: path
          schema:
            type: string
          required: true
          description: (Required) Workspace ID
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                members:
                  filled_members_seats: <integer>
                  total_member_seats: <integer>
                  empty_member_seats: <integer>
                guests:
                  filled_guest_seats: <integer>
                  total_guest_seats: <integer>
                  empty_guest_seats: <integer>
  /v2/team/{team_id}/plan:
    get:
      tags:
        - Workspaces
      summary: Get Workspace Plan
      description: >-
        View the current [Plan](https://clickup.com/pricing) for the specified
        Workspace.
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: team_id
          in: path
          schema:
            type: string
          required: true
          description: (Required) Workspace ID
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                plan_name: <string>
                plan_id: <integer>
  /v2/team/{team_id}/group:
    post:
      tags:
        - User Groups
      summary: Create Group
      description: >-
        This endpoint creates a [User
        Group](https://docs.clickup.com/en/articles/4010016-teams-how-to-create-user-groups)
        within a Workspace.\
         \
        User Groups are used to organize and manage users within a Workspace.\
         \
        In the API documentation, `team_id` refers to the Workspace ID, and
        `group_id` refers to the User Group ID.\
         \
        **Note:** Adding a guest with view-only permissions to a Team
        automatically converts them to a paid guest.\
         \
        If no paid guest seats are available, an additional member seat will be
        added, increasing the number of paid guest seats.\
         \
        This change incurs a prorated charge based on the billing cycle.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                name: <string>
                members:
                  - <integer>
                  - <integer>
                handle: <string>
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: team_id
          in: path
          schema:
            type: string
          required: true
          description: (Required) Workspace ID
          example: <number>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                id: <string>
                team_id: <string>
                userid: <integer>
                name: <string>
                handle: <string>
                date_created: <string>
                initials: <string>
                members:
                  - id: <integer>
                    username: <string>
                    email: <string>
                    color: <string>
                    initials: <string>
                    profilePicture: <string>
                  - id: <integer>
                    username: <string>
                    email: <string>
                    color: <string>
                    initials: <string>
                    profilePicture: <string>
                avatar:
                  attachment_id: <string,null>
                  color: <string,null>
                  source: <string,null>
                  icon: <string,null>
  /v2/group/{group_id}:
    put:
      tags:
        - User Groups
      summary: Update Group
      description: >-
        This endpoint is used to manage [User
        Groups](https://docs.clickup.com/en/articles/4010016-teams-how-to-create-user-groups),
        which are groups of users within your Workspace.\
         \
        In our API, `team_id` in the path refers to the Workspace ID, and
        `group_id` refers to the ID of a User Group.\
         \
        **Note:** Adding a guest with view-only permissions to a User Group
        automatically converts them to a paid guest.\
         \
        If you don't have any paid guest seats available, a new member seat is
        automatically added to increase the number of paid guest seats.\
         \
        This incurs a prorated charge based on your billing cycle.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                name: <string>
                handle: <string>
                members:
                  add:
                    - <integer>
                    - <integer>
                  rem:
                    - <integer>
                    - <integer>
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: group_id
          in: path
          schema:
            type: string
          required: true
          description: (Required) User Group ID
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                id: <string>
                team_id: <string>
                userid: <integer>
                name: <string>
                handle: <string>
                date_created: <string>
                initials: <string>
                members:
                  - id: <integer>
                    username: <string>
                    email: <string>
                    color: <string>
                    initials: <string>
                    profilePicture: <string,null>
                  - id: <integer>
                    username: <string>
                    email: <string>
                    color: <string>
                    initials: <string>
                    profilePicture: <string,null>
                avatar:
                  attachment_id: <string,null>
                  color: <string,null>
                  source: <string,null>
                  icon: <string,null>
    delete:
      tags:
        - User Groups
      summary: Delete Group
      description: >-
        This endpoint is used to remove a [User
        Group](https://docs.clickup.com/en/articles/4010016-teams-how-to-create-user-groups)
        from your Workspace.\
         \
        In our API documentation, `team_id` refers to the id of a Workspace, and
        `group_id` refers to the id of a user group.
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: group_id
          in: path
          schema:
            type: string
          required: true
          description: (Required) User Group ID
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example: {}
  /v2/group:
    get:
      tags:
        - User Groups
      summary: Get Groups
      description: >-
        This endpoint is used to view [User
        Groups](https://docs.clickup.com/en/articles/4010016-teams-how-to-create-user-groups)
        in your Workspace.\
         \
        In our API documentation, `team_id` refers to the ID of a Workspace, and
        `group_id` refers to the ID of a User Group.
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: team_id
          in: query
          schema:
            type: string
          description: (Required) Workspace ID
          example: <number>
        - name: group_ids
          in: query
          schema:
            type: string
          description: >-
            Enter one or more User Group IDs to retrieve information about
            specific User Group.
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                groups:
                  - id: <string>
                    team_id: <string>
                    userid: <integer>
                    name: <string>
                    handle: <string>
                    date_created: <string>
                    initials: <string>
                    members:
                      - id: <integer>
                        username: <string>
                        email: <string>
                        color: <string>
                        initials: <string>
                        profilePicture: <string,null>
                      - id: <integer>
                        username: <string>
                        email: <string>
                        color: <string>
                        initials: <string>
                        profilePicture: <string,null>
                    avatar:
                      attachment_id: <string,null>
                      color: <string,null>
                      source: <string,null>
                      icon: <string,null>
                  - id: <string>
                    team_id: <string>
                    userid: <integer>
                    name: <string>
                    handle: <string>
                    date_created: <string>
                    initials: <string>
                    members:
                      - id: <integer>
                        username: <string>
                        email: <string>
                        color: <string>
                        initials: <string>
                        profilePicture: <string,null>
                      - id: <integer>
                        username: <string>
                        email: <string>
                        color: <string>
                        initials: <string>
                        profilePicture: <string,null>
                    avatar:
                      attachment_id: <string,null>
                      color: <string,null>
                      source: <string,null>
                      icon: <string,null>
  /v2/team/{team_Id}/time_entries:
    get:
      tags:
        - Time Tracking
      summary: Get time entries within a date range
      description: >-
        View time entries filtered by start and end date. \
         \
        By default, this endpoint returns time entries from the last 30 days
        created by the authenticated user. \
         \
        To retrieve time entries for other users, you must include the
        `assignee` query parameter. \
         \
        Only one of the following location filters can be included at a time:
        `space_id`, `folder_id`, `list_id`, or `task_id`. \
         \
        ***Note:** A time entry that has a negative duration means that timer is
        currently running for that user.*
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: start_date
          in: query
          schema:
            type: string
          description: Unix time in milliseconds
          example: <number>
        - name: end_date
          in: query
          schema:
            type: string
          description: Unix time in milliseconds
          example: <number>
        - name: assignee
          in: query
          schema:
            type: string
          description: >-
            Filter by `user_id`. For multiple assignees, separate `user_id`
            using commas.\
             \
             **Example:** `assignee=1234,9876`\
             \
            ***Note:** Only Workspace Owners/Admins have access to do this.*
          example: <number>
        - name: include_task_tags
          in: query
          schema:
            type: string
          description: >-
            Include task tags in the response for time entries associated with
            tasks.
          example: <boolean>
        - name: include_location_names
          in: query
          schema:
            type: string
          description: >-
            Include the names of the List, Folder, and Space along with the
            `list_id`,`folder_id`, and `space_id`.
          example: <boolean>
        - name: space_id
          in: query
          schema:
            type: string
          description: Only include time entries associated with tasks in a specific Space.
          example: <number>
        - name: folder_id
          in: query
          schema:
            type: string
          description: >-
            Only include time entries associated with tasks in a specific
            Folder.
          example: <number>
        - name: list_id
          in: query
          schema:
            type: string
          description: Only include time entries associated with tasks in a specific List.
          example: <number>
        - name: task_id
          in: query
          schema:
            type: string
          description: Only include time entries associated with a specific task.
          example: <string>
        - name: custom_task_ids
          in: query
          schema:
            type: string
          description: >-
            If you want to reference a task by it's custom task id, this value
            must be `true`.
          example: <boolean>
        - name: team_id
          in: query
          schema:
            type: string
          description: >-
            When the `custom_task_ids` parameter is set to `true`, the Workspace
            ID must be provided using the `team_id` parameter.
             \
            For example: `custom_task_ids=true&team_id=123`.
          example: <number>
        - name: is_billable
          in: query
          schema:
            type: string
          description: >-
            Include only billable time entries by using a value of `true` or
            only non-billable time entries by using a value of `false`.\
             \
            For example: `?is_billable=true`.
          example: <boolean>
        - name: team_Id
          in: path
          schema:
            type: string
          required: true
          description: (Required) Workspace ID
          example: <number>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  - id: <string>
                    task:
                      id: <string>
                      custom_id: <string>
                      name: <string>
                      status:
                        status: <string>
                        color: <string>
                        orderindex: <integer>
                        type: <string>
                      custom_type: <string,null>
                    wid: <string>
                    user:
                      id: <integer>
                      username: <string>
                      initials: <string>
                      email: <string>
                      color: <string>
                      profilePicture: <string>
                    billable: <boolean>
                    start: <string>
                    end: <string>
                    duration: <string>
                    description: <string>
                    tags:
                      - <string>
                      - <string>
                    source: <string>
                    at: <string>
                    task_location:
                      list_id: <integer>
                      folder_id: <integer>
                      space_id: <integer>
                      list_name: <string>
                      folder_name: <string>
                      space_name: <string>
                    task_tags:
                      - name: <string>
                        tag_fg: <string>
                        tag_bg: <string>
                        creator: <integer>
                      - name: <string>
                        tag_fg: <string>
                        tag_bg: <string>
                        creator: <integer>
                    task_url: <string>
                  - id: <string>
                    task:
                      id: <string>
                      custom_id: <string>
                      name: <string>
                      status:
                        status: <string>
                        color: <string>
                        orderindex: <integer>
                        type: <string>
                      custom_type: <string,null>
                    wid: <string>
                    user:
                      id: <integer>
                      username: <string>
                      initials: <string>
                      email: <string>
                      color: <string>
                      profilePicture: <string>
                    billable: <boolean>
                    start: <string>
                    end: <string>
                    duration: <string>
                    description: <string>
                    tags:
                      - <string>
                      - <string>
                    source: <string>
                    at: <string>
                    task_location:
                      list_id: <integer>
                      folder_id: <integer>
                      space_id: <integer>
                      list_name: <string>
                      folder_name: <string>
                      space_name: <string>
                    task_tags:
                      - name: <string>
                        tag_fg: <string>
                        tag_bg: <string>
                        creator: <integer>
                      - name: <string>
                        tag_fg: <string>
                        tag_bg: <string>
                        creator: <integer>
                    task_url: <string>
    post:
      tags:
        - Time Tracking
      summary: Create a time entry
      description: >-
        Create a time entry. \
         \
        ***Note:** A time entry that has a negative duration means that timer is
        currently running for that user.*
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                start: <integer>
                duration: <integer>
                description: <string>
                tags:
                  - name: <string>
                    tag_fg: <string>
                    tag_bg: <string>
                  - name: <string>
                    tag_fg: <string>
                    tag_bg: <string>
                stop: <integer>
                end: <integer>
                billable: <boolean>
                assignee: <integer>
                tid: <string>
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: custom_task_ids
          in: query
          schema:
            type: string
          description: >-
            If you want to reference a task by it's custom task id, this value
            must be `true`.
          example: <boolean>
        - name: team_id
          in: query
          schema:
            type: string
          description: >-
            When the `custom_task_ids` parameter is set to `true`, the Workspace
            ID must be provided using the `team_id` parameter.
             \
            For example: `custom_task_ids=true&team_id=123`.
          example: <number>
        - name: team_Id
          in: path
          schema:
            type: string
          required: true
          description: (Required) Workspace ID
          example: <number>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                description: <string>
                tags:
                  - name: <string>
                    tag_fg: <string>
                    tag_bg: <string>
                  - name: <string>
                    tag_fg: <string>
                    tag_bg: <string>
                start: <integer>
                billable: <boolean>
                duration: <integer>
                assignee: <integer>
                tid: <string>
  /v2/team/{team_id}/time_entries/{timer_id}:
    get:
      tags:
        - Time Tracking
      summary: Get singular time entry
      description: >-
        View a single time entry. \
         \
        ***Note:** A time entry that has a negative duration means that timer is
        currently running for that user.*
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: include_task_tags
          in: query
          schema:
            type: string
          description: >-
            Include task tags in the response for time entries associated with
            tasks.
          example: <boolean>
        - name: include_location_names
          in: query
          schema:
            type: string
          description: >-
            Include the names of the List, Folder, and Space along with
            `list_id`,`folder_id`, and `space_id`.
          example: <boolean>
        - name: team_id
          in: path
          schema:
            type: string
          required: true
          description: (Required) Workspace ID
          example: <number>
        - name: timer_id
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) The ID of a time entry. \
             \
            This can be found using the [Get Time Entries Within a Date
            Range](ref:gettimeentrieswithinadaterange) endpoint.
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  - id: <string>
                    wid: <string>
                    user:
                      id: <integer>
                      username: <string>
                      initials: <string>
                      email: <string>
                      color: <string>
                      profilePicture: <string>
                    billable: <boolean>
                    start: <string>
                    end: <string>
                    duration: <string>
                    description: <string>
                    tags:
                      - <string>
                      - <string>
                    source: <string>
                    at: <string>
                    task_location:
                      list_id: <integer>
                      folder_id: <integer>
                      space_id: <integer>
                      list_name: <string>
                      folder_name: <string>
                      space_name: <string>
                    task_tags:
                      - name: <string>
                        tag_fg: <string>
                        tag_bg: <string>
                        creator: <integer>
                      - name: <string>
                        tag_fg: <string>
                        tag_bg: <string>
                        creator: <integer>
                    task_url: <string>
                  - id: <string>
                    wid: <string>
                    user:
                      id: <integer>
                      username: <string>
                      initials: <string>
                      email: <string>
                      color: <string>
                      profilePicture: <string>
                    billable: <boolean>
                    start: <string>
                    end: <string>
                    duration: <string>
                    description: <string>
                    tags:
                      - <string>
                      - <string>
                    source: <string>
                    at: <string>
                    task_location:
                      list_id: <integer>
                      folder_id: <integer>
                      space_id: <integer>
                      list_name: <string>
                      folder_name: <string>
                      space_name: <string>
                    task_tags:
                      - name: <string>
                        tag_fg: <string>
                        tag_bg: <string>
                        creator: <integer>
                      - name: <string>
                        tag_fg: <string>
                        tag_bg: <string>
                        creator: <integer>
                    task_url: <string>
    delete:
      tags:
        - Time Tracking
      summary: Delete a time Entry
      description: Delete a time entry from a Workspace.
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: team_id
          in: path
          schema:
            type: string
          required: true
          description: (Required) Workspace ID
          example: <number>
        - name: timer_id
          in: path
          schema:
            type: string
          required: true
          description: (Required) Array of timer ids to delete separated by commas
          example: <number>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  id: <string>
                  task:
                    id: <string>
                    name: <string>
                    status:
                      status: <string>
                      color: <string>
                      orderindex: <integer>
                      type: <string>
                    custom_type: <string,null>
                  wid: <string>
                  user:
                    id: <integer>
                    username: <string>
                    initials: <string>
                    email: <string>
                    color: <string>
                    profilePicture: <string>
                  billable: <boolean>
                  start: <string>
                  end: <integer>
                  duration: <integer>
                  description: <string>
                  tags:
                    - <string>
                    - <string>
                  source: <string>
                  at: <integer>
    put:
      tags:
        - Time Tracking
      summary: Update a time Entry
      description: Update the details of a time entry.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                tags:
                  - name: <string>
                    tag_fg: <string>
                    tag_bg: <string>
                  - name: <string>
                    tag_fg: <string>
                    tag_bg: <string>
                tid: <string>
                description: <string>
                tag_action: <string>
                start: <integer>
                end: <integer>
                billable: <boolean>
                duration: <integer>
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: custom_task_ids
          in: query
          schema:
            type: string
          description: >-
            If you want to reference a task by it's custom task id, this value
            must be `true`.
          example: <boolean>
        - name: team_id
          in: query
          schema:
            type: string
          description: >-
            When the `custom_task_ids` parameter is set to `true`, the Workspace
            ID must be provided using the `team_id` parameter.
             \
            For example: `custom_task_ids=true&team_id=123`
          example: <number>
        - name: team_id
          in: path
          schema:
            type: string
          required: true
          description: (Required) Workspace ID
          example: <number>
        - name: timer_id
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <number>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example: {}
  /v2/team/{team_id}/time_entries/{timer_id}/history:
    get:
      tags:
        - Time Tracking
      summary: Get time entry history
      description: View a list of changes made to a time entry.
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: team_id
          in: path
          schema:
            type: string
          required: true
          description: (Required) Workspace ID
          example: <number>
        - name: timer_id
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) The ID of a time entry. \
             \
            This can be found using the [Get Time Entries Within a Date
            Range](ref:gettimeentrieswithinadaterange) endpoint.
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example: {}
  /v2/team/{team_id}/time_entries/current:
    get:
      tags:
        - Time Tracking
      summary: Get running time entry
      description: >-
        View a time entry that's currently tracking time for the authenticated
        user. \
         \
        ***Note:** A time entry that has a negative duration means that timer is
        currently running for that user.*
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: assignee
          in: query
          schema:
            type: string
          description: user id
          example: <number>
        - name: team_id
          in: path
          schema:
            type: string
          required: true
          description: (Required) Workspace ID
          example: <number>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  id: <string>
                  task:
                    id: <string>
                    name: <string>
                    status:
                      status: <string>
                      color: <string>
                      orderindex: <integer>
                      type: <string>
                  wid: <string>
                  user:
                    id: <integer>
                    username: <string>
                    initials: <string>
                    email: <string>
                    color: <string>
                    profilePicture: <string>
                  billable: <boolean>
                  start: <string>
                  duration: <integer>
                  description: <string>
                  tags:
                    - <string>
                    - <string>
                  at: <string>
  /v2/team/{team_id}/time_entries/tags:
    delete:
      tags:
        - Time Tracking
      summary: Remove tags from time entries
      description: >-
        Remove labels from time entries. This does not remove the label from a
        Workspace.
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: team_id
          in: path
          schema:
            type: string
          required: true
          description: (Required) Workspace ID
          example: <number>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example: {}
    get:
      tags:
        - Time Tracking
      summary: Get all tags from time entries
      description: >-
        View all the labels that have been applied to time entries in a
        Workspace.
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: team_id
          in: path
          schema:
            type: string
          required: true
          description: (Required) Workspace ID
          example: <number>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  - name: <string>
                    creator: <integer>
                    tag_bg: <string>
                    tag_fg: <string>
                  - name: <string>
                    creator: <integer>
                    tag_bg: <string>
                    tag_fg: <string>
    post:
      tags:
        - Time Tracking
      summary: Add tags from time entries
      description: Add a label to a time entry.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                time_entry_ids:
                  - <string>
                  - <string>
                tags:
                  - name: <string>
                    tag_fg: <string>
                    tag_bg: <string>
                  - name: <string>
                    tag_fg: <string>
                    tag_bg: <string>
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: team_id
          in: path
          schema:
            type: string
          required: true
          description: (Required) Workspace ID
          example: <number>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example: {}
    put:
      tags:
        - Time Tracking
      summary: Change tag names from time entries
      description: Rename an time entry label.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                name: <string>
                new_name: <string>
                tag_bg: <string>
                tag_fg: <string>
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: team_id
          in: path
          schema:
            type: string
          required: true
          description: (Required) Workspace ID
          example: <number>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example: {}
  /v2/team/{team_Id}/time_entries/start:
    post:
      tags:
        - Time Tracking
      summary: Start a time Entry
      description: Start a timer for the authenticated user.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                description: <string>
                tags:
                  - name: <string>
                  - name: <string>
                tid: <string>
                billable: <boolean>
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: custom_task_ids
          in: query
          schema:
            type: string
          description: >-
            If you want to reference a task by it's custom task id, this value
            must be `true`.
          example: <boolean>
        - name: team_id
          in: query
          schema:
            type: string
          description: >-
            When the `custom_task_ids` parameter is set to `true`, the Workspace
            ID must be provided using the `team_id` parameter.
             \
            For example: `custom_task_ids=true&team_id=123`.
          example: <number>
        - name: team_Id
          in: path
          schema:
            type: string
          required: true
          description: (Required) Workspace ID
          example: <number>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  id: <string>
                  task:
                    id: <string>
                    name: <string>
                    status:
                      status: <string>
                      color: <string>
                      orderindex: <integer>
                      type: <string>
                    custom_type: <string,null>
                  wid: <string>
                  user:
                    id: <integer>
                    username: <string>
                    initials: <string>
                    email: <string>
                    color: <string>
                    profilePicture: <string>
                  billable: <boolean>
                  start: <string>
                  duration: <integer>
                  description: <string>
                  tags:
                    - <string>
                    - <string>
                  at: <integer>
  /v2/team/{team_id}/time_entries/stop:
    post:
      tags:
        - Time Tracking
      summary: Stop a time Entry
      description: Stop a timer that's currently running for the authenticated user.
      requestBody:
        content: {}
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: team_id
          in: path
          schema:
            type: string
          required: true
          description: (Required) Workspace ID
          example: <number>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  id: <string>
                  task:
                    id: <string>
                    name: <string>
                    status:
                      status: <string>
                      color: <string>
                      orderindex: <integer>
                      type: <string>
                    custom_type: <string,null>
                  wid: <string>
                  user:
                    id: <integer>
                    username: <string>
                    initials: <string>
                    email: <string>
                    color: <string>
                    profilePicture: <string>
                  billable: <boolean>
                  start: <string>
                  end: <integer>
                  duration: <integer>
                  description: <string>
                  tags:
                    - <string>
                    - <string>
                  source: <string>
                  at: <integer>
  /v2/task/{task_id}/time:
    get:
      tags:
        - Time Tracking (Legacy)
      summary: Get tracked time
      description: >-
        ***Note:** This is a legacy time tracking endpoint. We recommend using
        the Time Tracking API endpoints to manage time entries.*
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: custom_task_ids
          in: query
          schema:
            type: string
          description: >-
            If you want to reference a task by it's custom task id, this value
            must be `true`.
          example: <boolean>
        - name: team_id
          in: query
          schema:
            type: string
          description: >-
            When the `custom_task_ids` parameter is set to `true`, the Workspace
            ID must be provided using the `team_id` parameter.
             \
            For example: `custom_task_ids=true&team_id=123`.
          example: <number>
        - name: task_id
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  - user:
                      id: <integer>
                      username: <string>
                      email: <string>
                      color: <string>
                      initials: <string>
                      profilePicture: <string,null>
                    time: <integer>
                    intervals:
                      - id: <string>
                        start: <string,null>
                        end: <string,null>
                        time: <string>
                        source: <string>
                        date_added: <string>
                      - id: <string>
                        start: <string,null>
                        end: <string,null>
                        time: <string>
                        source: <string>
                        date_added: <string>
                  - user:
                      id: <integer>
                      username: <string>
                      email: <string>
                      color: <string>
                      initials: <string>
                      profilePicture: <string,null>
                    time: <integer>
                    intervals:
                      - id: <string>
                        start: <string,null>
                        end: <string,null>
                        time: <string>
                        source: <string>
                        date_added: <string>
                      - id: <string>
                        start: <string,null>
                        end: <string,null>
                        time: <string>
                        source: <string>
                        date_added: <string>
    post:
      tags:
        - Time Tracking (Legacy)
      summary: Track time
      description: >-
        ***Note:** This is a legacy time tracking endpoint. We recommend using
        the Time Tracking API endpoints to manage time entries.*
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                start: <integer>
                end: <integer>
                time: <integer>
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: custom_task_ids
          in: query
          schema:
            type: string
          description: >-
            If you want to reference a task by it's custom task id, this value
            must be `true`.
          example: <boolean>
        - name: team_id
          in: query
          schema:
            type: string
          description: >-
            When the `custom_task_ids` parameter is set to `true`, the Workspace
            ID must be provided using the `team_id` parameter.
             \
            For example: `custom_task_ids=true&team_id=123`.
          example: <number>
        - name: task_id
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                id: <string>
  /v2/task/{task_id}/time/{interval_id}:
    put:
      tags:
        - Time Tracking (Legacy)
      summary: Edit time tracked
      description: >-
        ***Note:** This is a legacy time tracking endpoint. We recommend using
        the Time Tracking API endpoints to manage time entries.*
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                start: <integer>
                end: <integer>
                time: <integer>
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: custom_task_ids
          in: query
          schema:
            type: string
          description: >-
            If you want to reference a task by it's custom task id, this value
            must be `true`.
          example: <boolean>
        - name: team_id
          in: query
          schema:
            type: string
          description: >-
            When the `custom_task_ids` parameter is set to `true`, the Workspace
            ID must be provided using the `team_id` parameter.
             \
            For example: `custom_task_ids=true&team_id=123`.
          example: <number>
        - name: task_id
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: interval_id
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example: {}
    delete:
      tags:
        - Time Tracking (Legacy)
      summary: Delete time tracked
      description: >-
        ***Note:** This is a legacy time tracking endpoint. We recommend using
        the Time Tracking API endpoints to manage time entries.*
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: custom_task_ids
          in: query
          schema:
            type: string
          description: >-
            If you want to reference a task by it's custom task id, this value
            must be `true`.
          example: <boolean>
        - name: team_id
          in: query
          schema:
            type: string
          description: >-
            When the `custom_task_ids` parameter is set to `true`, the Workspace
            ID must be provided using the `team_id` parameter.
             \
            For example: `custom_task_ids=true&team_id=123`.
          example: <number>
        - name: task_id
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
        - name: interval_id
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example: {}
  /v2/team/{team_id}/user:
    post:
      tags:
        - Users
      summary: Invite User To Workspace
      description: >-
        Invite someone to join your Workspace as a member. To invite someone as
        a guest, use the [Invite Guest](ref:inviteguesttoworkspace) endpoint.\
         \
        ***Note:** This endpoint is only available to Workspaces on our
        [Enterprise Plan](https://clickup.com/pricing).*
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                email: <string>
                admin: <boolean>
                custom_role_id: <integer>
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: team_id
          in: path
          schema:
            type: string
          required: true
          description: (Required) Workspace ID
          example: <number>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                team:
                  id: <string>
                  name: <string>
                  color: <string>
                  avatar: <string,null>
                  members:
                    - user:
                        id: <integer>
                        username: <string,null>
                        email: <string>
                        color: <string,null>
                        profilePicture: <string,null>
                        initials: <string>
                        role: <integer>
                        custom_role:
                          id: <integer>
                          name: <string>
                        last_active: <string,null>
                        date_joined: <string,null>
                        date_invited: <string>
                      invited_by:
                        id: <integer>
                        color: <string>
                        username: <string>
                        email: <string>
                        initials: <string>
                        profilePicture: <string>
                    - user:
                        id: <integer>
                        username: <string,null>
                        email: <string>
                        color: <string,null>
                        profilePicture: <string,null>
                        initials: <string>
                        role: <integer>
                        custom_role:
                          id: <integer>
                          name: <string>
                        last_active: <string,null>
                        date_joined: <string,null>
                        date_invited: <string>
                      invited_by:
                        id: <integer>
                        color: <string>
                        username: <string>
                        email: <string>
                        initials: <string>
                        profilePicture: <string>
                  roles:
                    - id: <integer>
                      name: <string>
                      custom: <boolean>
                      inherited_role: <integer>
                    - id: <integer>
                      name: <string>
                      custom: <boolean>
                      inherited_role: <integer>
  /v2/team/{team_id}/user/{user_id}:
    get:
      tags:
        - Users
      summary: Get User
      description: >-
        View information about a user in a Workspace. \
         \
        ***Note:** This endpoint is only available to Workspaces on our
        [Enterprise Plan](https://clickup.com/pricing).*
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: include_shared
          in: query
          schema:
            type: string
          description: >-
            Exclude details of items shared with the guest by setting this
            parameter to `false`. By default this parameter is set to `true`.
          example: <boolean>
        - name: team_id
          in: path
          schema:
            type: string
          required: true
          description: (Required) Workspace ID
          example: <number>
        - name: user_id
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <number>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                member:
                  user:
                    id: <integer>
                    username: <string>
                    email: <string>
                    color: <string,null>
                    profilePicture: <string,null>
                    initials: <string>
                    role: <integer>
                    custom_role:
                      id: <integer>
                      name: <string>
                    last_active: <string,null>
                    date_joined: <string,null>
                    date_invited: <string>
                  invited_by:
                    id: <integer>
                    color: <string>
                    username: <string>
                    email: <string>
                    initials: <string>
                    profilePicture: <string>
                  shared:
                    tasks:
                      - <string>
                      - <string>
                    lists:
                      - <string>
                      - <string>
                    folders:
                      - <string>
                      - <string>
    put:
      tags:
        - Users
      summary: Edit User On Workspace
      description: >-
        Update a user's name and role. \
         \
        ***Note:** This endpoint is only available to Workspaces on our
        [Enterprise Plan](https://clickup.com/pricing).*
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                username: <string>
                admin: <boolean>
                custom_role_id: <integer>
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: team_id
          in: path
          schema:
            type: string
          required: true
          description: (Required) Workspace ID
          example: <number>
        - name: user_id
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <number>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                member:
                  user:
                    id: <integer>
                    username: <string>
                    email: <string>
                    color: <string,null>
                    profilePicture: <string,null>
                    initials: <string>
                    role: <integer>
                    custom_role:
                      id: <integer>
                      name: <string>
                    last_active: <string,null>
                    date_joined: <string,null>
                    date_invited: <string>
                  invited_by:
                    id: <integer>
                    color: <string>
                    username: <string>
                    email: <string>
                    initials: <string>
                    profilePicture: <string>
                  shared:
                    tasks:
                      - <string>
                      - <string>
                    lists:
                      - <string>
                      - <string>
                    folders:
                      - <string>
                      - <string>
    delete:
      tags:
        - Users
      summary: Remove User From Workspace
      description: >-
        Deactivate a user from a Workspace. \
         \
        ***Note:** This endpoint is only available to Workspaces on our
        [Enterprise Plan](https://clickup.com/pricing).*
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: team_id
          in: path
          schema:
            type: string
          required: true
          description: (Required) Workspace ID
          example: <number>
        - name: user_id
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <number>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                team:
                  id: <string>
                  name: <string>
                  color: <string>
                  avatar: <string,null>
                  members:
                    - <string>
                    - <string>
  /v2/team/{team_id}/view:
    get:
      tags:
        - Views
      summary: Get Workspace (Everything level) Views
      description: >-
        View the task and page views available at the Everything Level of a
        Workspace.
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: team_id
          in: path
          schema:
            type: string
          required: true
          description: (Required) Workspace ID
          example: <number>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                views:
                  - id: <string>
                    name: <string>
                    type: <string>
                    parent:
                      id: <string>
                      type: <integer>
                    grouping:
                      field: <string>
                      dir: <integer>
                      collapsed:
                        - <string>
                        - <string>
                      ignore: <boolean>
                    divide:
                      collapsed: <boolean>
                      field: <null>
                      dir: <null>
                    sorting:
                      fields:
                        - <string>
                        - <string>
                    filters:
                      op: <string>
                      fields:
                        - <string>
                        - <string>
                      search: <string>
                      show_closed: <boolean>
                    columns:
                      fields:
                        - <string>
                        - <string>
                    team_sidebar:
                      assignees:
                        - <string>
                        - <string>
                      assigned_comments: <boolean>
                      unassigned_tasks: <boolean>
                    settings:
                      show_task_locations: <boolean>
                      show_subtasks: <integer>
                      show_subtask_parent_names: <boolean>
                      show_closed_subtasks: <boolean>
                      show_assignees: <boolean>
                      show_images: <boolean>
                      collapse_empty_columns: <string,null>
                      me_comments: <boolean>
                      me_subtasks: <boolean>
                      me_checklists: <boolean>
                  - id: <string>
                    name: <string>
                    type: <string>
                    parent:
                      id: <string>
                      type: <integer>
                    grouping:
                      field: <string>
                      dir: <integer>
                      collapsed:
                        - <string>
                        - <string>
                      ignore: <boolean>
                    divide:
                      collapsed: <boolean>
                      field: <null>
                      dir: <null>
                    sorting:
                      fields:
                        - <string>
                        - <string>
                    filters:
                      op: <string>
                      fields:
                        - <string>
                        - <string>
                      search: <string>
                      show_closed: <boolean>
                    columns:
                      fields:
                        - <string>
                        - <string>
                    team_sidebar:
                      assignees:
                        - <string>
                        - <string>
                      assigned_comments: <boolean>
                      unassigned_tasks: <boolean>
                    settings:
                      show_task_locations: <boolean>
                      show_subtasks: <integer>
                      show_subtask_parent_names: <boolean>
                      show_closed_subtasks: <boolean>
                      show_assignees: <boolean>
                      show_images: <boolean>
                      collapse_empty_columns: <string,null>
                      me_comments: <boolean>
                      me_subtasks: <boolean>
                      me_checklists: <boolean>
    post:
      tags:
        - Views
      summary: Create Workspace (Everything level) View
      description: >-
        Add a List, Board, Calendar, Table, Timeline, Workload, Activity, Map,
        Chat, or Gantt view at the Everything Level of a Workspace.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                name: <string>
                type: <string>
                grouping:
                  field: <string>
                  dir: <integer>
                  collapsed:
                    - <string>
                    - <string>
                  ignore: <boolean>
                divide:
                  collapsed: <boolean>
                  field: <null>
                  dir: <null>
                sorting:
                  fields:
                    - <string>
                    - <string>
                filters:
                  op: <string>
                  fields:
                    - <string>
                    - <string>
                  search: <string>
                  show_closed: <boolean>
                columns:
                  fields:
                    - <string>
                    - <string>
                team_sidebar:
                  assignees:
                    - <string>
                    - <string>
                  assigned_comments: <boolean>
                  unassigned_tasks: <boolean>
                settings:
                  show_task_locations: <boolean>
                  show_subtasks: <integer>
                  show_subtask_parent_names: <boolean>
                  show_closed_subtasks: <boolean>
                  show_assignees: <boolean>
                  show_images: <boolean>
                  collapse_empty_columns: <string,null>
                  me_comments: <boolean>
                  me_subtasks: <boolean>
                  me_checklists: <boolean>
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: team_id
          in: path
          schema:
            type: string
          required: true
          description: (Required) Workspace ID
          example: <number>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                view:
                  id: <string>
                  name: <string>
                  type: <string>
                  parent:
                    id: <string>
                    type: <integer>
                  grouping:
                    field: <string>
                    dir: <integer>
                    collapsed:
                      - <string>
                      - <string>
                    ignore: <boolean>
                  divide:
                    collapsed: <boolean>
                    field: <null>
                    dir: <null>
                  sorting:
                    fields:
                      - <string>
                      - <string>
                  filters:
                    op: <string>
                    fields:
                      - <string>
                      - <string>
                    search: <string>
                    show_closed: <boolean>
                  columns:
                    fields:
                      - <string>
                      - <string>
                  team_sidebar:
                    assignees:
                      - <string>
                      - <string>
                    assigned_comments: <boolean>
                    unassigned_tasks: <boolean>
                  settings:
                    show_task_locations: <boolean>
                    show_subtasks: <integer>
                    show_subtask_parent_names: <boolean>
                    show_closed_subtasks: <boolean>
                    show_assignees: <boolean>
                    show_images: <boolean>
                    collapse_empty_columns: <string,null>
                    me_comments: <boolean>
                    me_subtasks: <boolean>
                    me_checklists: <boolean>
  /v2/space/{space_id}/view:
    get:
      tags:
        - Views
      summary: Get Space Views
      description: View the task and page views available for a Space.
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: space_id
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <number>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                views:
                  - id: <string>
                    name: <string>
                    type: <string>
                    parent:
                      id: <string>
                      type: <integer>
                    grouping:
                      field: <string>
                      dir: <integer>
                      collapsed:
                        - <string>
                        - <string>
                      ignore: <boolean>
                    divide:
                      collapsed: <boolean>
                      field: <null>
                      dir: <null>
                    sorting:
                      fields:
                        - <string>
                        - <string>
                    filters:
                      op: <string>
                      fields:
                        - <string>
                        - <string>
                      search: <string>
                      show_closed: <boolean>
                    columns:
                      fields:
                        - <string>
                        - <string>
                    team_sidebar:
                      assignees:
                        - <string>
                        - <string>
                      assigned_comments: <boolean>
                      unassigned_tasks: <boolean>
                    settings:
                      show_task_locations: <boolean>
                      show_subtasks: <integer>
                      show_subtask_parent_names: <boolean>
                      show_closed_subtasks: <boolean>
                      show_assignees: <boolean>
                      show_images: <boolean>
                      collapse_empty_columns: <string,null>
                      me_comments: <boolean>
                      me_subtasks: <boolean>
                      me_checklists: <boolean>
                  - id: <string>
                    name: <string>
                    type: <string>
                    parent:
                      id: <string>
                      type: <integer>
                    grouping:
                      field: <string>
                      dir: <integer>
                      collapsed:
                        - <string>
                        - <string>
                      ignore: <boolean>
                    divide:
                      collapsed: <boolean>
                      field: <null>
                      dir: <null>
                    sorting:
                      fields:
                        - <string>
                        - <string>
                    filters:
                      op: <string>
                      fields:
                        - <string>
                        - <string>
                      search: <string>
                      show_closed: <boolean>
                    columns:
                      fields:
                        - <string>
                        - <string>
                    team_sidebar:
                      assignees:
                        - <string>
                        - <string>
                      assigned_comments: <boolean>
                      unassigned_tasks: <boolean>
                    settings:
                      show_task_locations: <boolean>
                      show_subtasks: <integer>
                      show_subtask_parent_names: <boolean>
                      show_closed_subtasks: <boolean>
                      show_assignees: <boolean>
                      show_images: <boolean>
                      collapse_empty_columns: <string,null>
                      me_comments: <boolean>
                      me_subtasks: <boolean>
                      me_checklists: <boolean>
    post:
      tags:
        - Views
      summary: Create Space View
      description: >-
        Add a List, Board, Calendar, Table, Timeline, Workload, Activity, Map,
        Chat, or Gantt view to a Space.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                name: <string>
                type: <string>
                grouping:
                  field: <string>
                  dir: <integer>
                  collapsed:
                    - <string>
                    - <string>
                  ignore: <boolean>
                divide:
                  collapsed: <boolean>
                  field: <null>
                  dir: <null>
                sorting:
                  fields:
                    - <string>
                    - <string>
                filters:
                  op: <string>
                  fields:
                    - <string>
                    - <string>
                  search: <string>
                  show_closed: <boolean>
                columns:
                  fields:
                    - <string>
                    - <string>
                team_sidebar:
                  assignees:
                    - <string>
                    - <string>
                  assigned_comments: <boolean>
                  unassigned_tasks: <boolean>
                settings:
                  show_task_locations: <boolean>
                  show_subtasks: <integer>
                  show_subtask_parent_names: <boolean>
                  show_closed_subtasks: <boolean>
                  show_assignees: <boolean>
                  show_images: <boolean>
                  collapse_empty_columns: <string,null>
                  me_comments: <boolean>
                  me_subtasks: <boolean>
                  me_checklists: <boolean>
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: space_id
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <number>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                view:
                  id: <string>
                  name: <string>
                  type: <string>
                  parent:
                    id: <string>
                    type: <integer>
                  grouping:
                    field: <string>
                    dir: <integer>
                    collapsed:
                      - <string>
                      - <string>
                    ignore: <boolean>
                  divide:
                    collapsed: <boolean>
                    field: <null>
                    dir: <null>
                  sorting:
                    fields:
                      - <string>
                      - <string>
                  filters:
                    op: <string>
                    fields:
                      - <string>
                      - <string>
                    search: <string>
                    show_closed: <boolean>
                  columns:
                    fields:
                      - <string>
                      - <string>
                  team_sidebar:
                    assignees:
                      - <string>
                      - <string>
                    assigned_comments: <boolean>
                    unassigned_tasks: <boolean>
                  settings:
                    show_task_locations: <boolean>
                    show_subtasks: <integer>
                    show_subtask_parent_names: <boolean>
                    show_closed_subtasks: <boolean>
                    show_assignees: <boolean>
                    show_images: <boolean>
                    collapse_empty_columns: <string,null>
                    me_comments: <boolean>
                    me_subtasks: <boolean>
                    me_checklists: <boolean>
  /v2/folder/{folder_id}/view:
    get:
      tags:
        - Views
      summary: Get Folder Views
      description: View the task and page views available for a Folder.
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: folder_id
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <number>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                views:
                  - id: <string>
                    name: <string>
                    type: <string>
                    parent:
                      id: <string>
                      type: <integer>
                    grouping:
                      field: <string>
                      dir: <integer>
                      collapsed:
                        - <string>
                        - <string>
                      ignore: <boolean>
                    divide:
                      collapsed: <boolean>
                      field: <null>
                      dir: <null>
                    sorting:
                      fields:
                        - <string>
                        - <string>
                    filters:
                      op: <string>
                      fields:
                        - <string>
                        - <string>
                      search: <string>
                      show_closed: <boolean>
                    columns:
                      fields:
                        - <string>
                        - <string>
                    team_sidebar:
                      assignees:
                        - <string>
                        - <string>
                      assigned_comments: <boolean>
                      unassigned_tasks: <boolean>
                    settings:
                      show_task_locations: <boolean>
                      show_subtasks: <integer>
                      show_subtask_parent_names: <boolean>
                      show_closed_subtasks: <boolean>
                      show_assignees: <boolean>
                      show_images: <boolean>
                      collapse_empty_columns: <string,null>
                      me_comments: <boolean>
                      me_subtasks: <boolean>
                      me_checklists: <boolean>
                  - id: <string>
                    name: <string>
                    type: <string>
                    parent:
                      id: <string>
                      type: <integer>
                    grouping:
                      field: <string>
                      dir: <integer>
                      collapsed:
                        - <string>
                        - <string>
                      ignore: <boolean>
                    divide:
                      collapsed: <boolean>
                      field: <null>
                      dir: <null>
                    sorting:
                      fields:
                        - <string>
                        - <string>
                    filters:
                      op: <string>
                      fields:
                        - <string>
                        - <string>
                      search: <string>
                      show_closed: <boolean>
                    columns:
                      fields:
                        - <string>
                        - <string>
                    team_sidebar:
                      assignees:
                        - <string>
                        - <string>
                      assigned_comments: <boolean>
                      unassigned_tasks: <boolean>
                    settings:
                      show_task_locations: <boolean>
                      show_subtasks: <integer>
                      show_subtask_parent_names: <boolean>
                      show_closed_subtasks: <boolean>
                      show_assignees: <boolean>
                      show_images: <boolean>
                      collapse_empty_columns: <string,null>
                      me_comments: <boolean>
                      me_subtasks: <boolean>
                      me_checklists: <boolean>
    post:
      tags:
        - Views
      summary: Create Folder View
      description: >-
        Add a List, Board, Calendar, Table, Timeline, Workload, Activity, Map,
        Chat, or Gantt view to a Folder.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                name: <string>
                type: <string>
                grouping:
                  field: <string>
                  dir: <integer>
                  collapsed:
                    - <string>
                    - <string>
                  ignore: <boolean>
                divide:
                  collapsed: <boolean>
                  field: <null>
                  dir: <null>
                sorting:
                  fields:
                    - <string>
                    - <string>
                filters:
                  op: <string>
                  fields:
                    - <string>
                    - <string>
                  search: <string>
                  show_closed: <boolean>
                columns:
                  fields:
                    - <string>
                    - <string>
                team_sidebar:
                  assignees:
                    - <string>
                    - <string>
                  assigned_comments: <boolean>
                  unassigned_tasks: <boolean>
                settings:
                  show_task_locations: <boolean>
                  show_subtasks: <integer>
                  show_subtask_parent_names: <boolean>
                  show_closed_subtasks: <boolean>
                  show_assignees: <boolean>
                  show_images: <boolean>
                  collapse_empty_columns: <string,null>
                  me_comments: <boolean>
                  me_subtasks: <boolean>
                  me_checklists: <boolean>
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: folder_id
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <number>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                view:
                  id: <string>
                  name: <string>
                  type: <string>
                  parent:
                    id: <string>
                    type: <integer>
                  grouping:
                    field: <string>
                    dir: <integer>
                    collapsed:
                      - <string>
                      - <string>
                    ignore: <boolean>
                  divide:
                    collapsed: <boolean>
                    field: <null>
                    dir: <null>
                  sorting:
                    fields:
                      - <string>
                      - <string>
                  filters:
                    op: <string>
                    fields:
                      - <string>
                      - <string>
                    search: <string>
                    show_closed: <boolean>
                  columns:
                    fields:
                      - <string>
                      - <string>
                  team_sidebar:
                    assignees:
                      - <string>
                      - <string>
                    assigned_comments: <boolean>
                    unassigned_tasks: <boolean>
                  settings:
                    show_task_locations: <boolean>
                    show_subtasks: <integer>
                    show_subtask_parent_names: <boolean>
                    show_closed_subtasks: <boolean>
                    show_assignees: <boolean>
                    show_images: <boolean>
                    collapse_empty_columns: <string,null>
                    me_comments: <boolean>
                    me_subtasks: <boolean>
                    me_checklists: <boolean>
  /v2/list/{list_id}/view:
    get:
      tags:
        - Views
      summary: Get List Views
      description: >-
        View the task and page views available for a List.<br> Views and
        required views are separate responses.
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: list_id
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <number>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                views:
                  - id: <string>
                    name: <string>
                    type: <string>
                    parent:
                      id: <string>
                      type: <integer>
                    grouping:
                      field: <string>
                      dir: <integer>
                      collapsed:
                        - <string>
                        - <string>
                      ignore: <boolean>
                    divide:
                      collapsed: <boolean>
                      field: <null>
                      dir: <null>
                    sorting:
                      fields:
                        - <string>
                        - <string>
                    filters:
                      op: <string>
                      fields:
                        - <string>
                        - <string>
                      search: <string>
                      show_closed: <boolean>
                    columns:
                      fields:
                        - <string>
                        - <string>
                    team_sidebar:
                      assignees:
                        - <string>
                        - <string>
                      assigned_comments: <boolean>
                      unassigned_tasks: <boolean>
                    settings:
                      show_task_locations: <boolean>
                      show_subtasks: <integer>
                      show_subtask_parent_names: <boolean>
                      show_closed_subtasks: <boolean>
                      show_assignees: <boolean>
                      show_images: <boolean>
                      collapse_empty_columns: <string,null>
                      me_comments: <boolean>
                      me_subtasks: <boolean>
                      me_checklists: <boolean>
                  - id: <string>
                    name: <string>
                    type: <string>
                    parent:
                      id: <string>
                      type: <integer>
                    grouping:
                      field: <string>
                      dir: <integer>
                      collapsed:
                        - <string>
                        - <string>
                      ignore: <boolean>
                    divide:
                      collapsed: <boolean>
                      field: <null>
                      dir: <null>
                    sorting:
                      fields:
                        - <string>
                        - <string>
                    filters:
                      op: <string>
                      fields:
                        - <string>
                        - <string>
                      search: <string>
                      show_closed: <boolean>
                    columns:
                      fields:
                        - <string>
                        - <string>
                    team_sidebar:
                      assignees:
                        - <string>
                        - <string>
                      assigned_comments: <boolean>
                      unassigned_tasks: <boolean>
                    settings:
                      show_task_locations: <boolean>
                      show_subtasks: <integer>
                      show_subtask_parent_names: <boolean>
                      show_closed_subtasks: <boolean>
                      show_assignees: <boolean>
                      show_images: <boolean>
                      collapse_empty_columns: <string,null>
                      me_comments: <boolean>
                      me_subtasks: <boolean>
                      me_checklists: <boolean>
    post:
      tags:
        - Views
      summary: Create List View
      description: >-
        Add a List, Board, Calendar, Table, Timeline, Workload, Activity, Map,
        Chat, or Gantt view to a List.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                name: <string>
                type: <string>
                grouping:
                  field: <string>
                  dir: <integer>
                  collapsed:
                    - <string>
                    - <string>
                  ignore: <boolean>
                divide:
                  collapsed: <boolean>
                  field: <null>
                  dir: <null>
                sorting:
                  fields:
                    - <string>
                    - <string>
                filters:
                  op: <string>
                  fields:
                    - <string>
                    - <string>
                  search: <string>
                  show_closed: <boolean>
                columns:
                  fields:
                    - <string>
                    - <string>
                team_sidebar:
                  assignees:
                    - <string>
                    - <string>
                  assigned_comments: <boolean>
                  unassigned_tasks: <boolean>
                settings:
                  show_task_locations: <boolean>
                  show_subtasks: <integer>
                  show_subtask_parent_names: <boolean>
                  show_closed_subtasks: <boolean>
                  show_assignees: <boolean>
                  show_images: <boolean>
                  collapse_empty_columns: <string,null>
                  me_comments: <boolean>
                  me_subtasks: <boolean>
                  me_checklists: <boolean>
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: list_id
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <number>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                view:
                  id: <string>
                  name: <string>
                  type: <string>
                  parent:
                    id: <string>
                    type: <integer>
                  grouping:
                    field: <string>
                    dir: <integer>
                    collapsed:
                      - <string>
                      - <string>
                    ignore: <boolean>
                  divide:
                    collapsed: <boolean>
                    field: <null>
                    dir: <null>
                  sorting:
                    fields:
                      - <string>
                      - <string>
                  filters:
                    op: <string>
                    fields:
                      - <string>
                      - <string>
                    search: <string>
                    show_closed: <boolean>
                  columns:
                    fields:
                      - <string>
                      - <string>
                  team_sidebar:
                    assignees:
                      - <string>
                      - <string>
                    assigned_comments: <boolean>
                    unassigned_tasks: <boolean>
                  settings:
                    show_task_locations: <boolean>
                    show_subtasks: <integer>
                    show_subtask_parent_names: <boolean>
                    show_closed_subtasks: <boolean>
                    show_assignees: <boolean>
                    show_images: <boolean>
                    collapse_empty_columns: <string,null>
                    me_comments: <boolean>
                    me_subtasks: <boolean>
                    me_checklists: <boolean>
  /v2/view/{view_id}:
    get:
      tags:
        - Views
      summary: Get View
      description: View information about a specific task or page view.
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: view_id
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                view:
                  id: <string>
                  name: <string>
                  type: <string>
                  parent:
                    id: <string>
                    type: <integer>
                  grouping:
                    field: <string>
                    dir: <integer>
                    collapsed:
                      - <string>
                      - <string>
                    ignore: <boolean>
                  divide:
                    collapsed: <boolean>
                    field: <null>
                    dir: <null>
                  sorting:
                    fields:
                      - <string>
                      - <string>
                  filters:
                    op: <string>
                    fields:
                      - <string>
                      - <string>
                    search: <string>
                    show_closed: <boolean>
                  columns:
                    fields:
                      - <string>
                      - <string>
                  team_sidebar:
                    assignees:
                      - <string>
                      - <string>
                    assigned_comments: <boolean>
                    unassigned_tasks: <boolean>
                  settings:
                    show_task_locations: <boolean>
                    show_subtasks: <integer>
                    show_subtask_parent_names: <boolean>
                    show_closed_subtasks: <boolean>
                    show_assignees: <boolean>
                    show_images: <boolean>
                    collapse_empty_columns: <string,null>
                    me_comments: <boolean>
                    me_subtasks: <boolean>
                    me_checklists: <boolean>
    put:
      tags:
        - Views
      summary: Update View
      description: >-
        Rename a view, update the grouping, sorting, filters, columns, and
        settings of a view.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                name: <string>
                type: <string>
                parent:
                  id: <string>
                  type: <integer>
                grouping:
                  field: <string>
                  dir: <integer>
                  collapsed:
                    - <string>
                    - <string>
                  ignore: <boolean>
                divide:
                  collapsed: <boolean>
                  field: <null>
                  dir: <null>
                sorting:
                  fields:
                    - <string>
                    - <string>
                filters:
                  op: <string>
                  fields:
                    - <string>
                    - <string>
                  search: <string>
                  show_closed: <boolean>
                columns:
                  fields:
                    - <string>
                    - <string>
                team_sidebar:
                  assignees:
                    - <string>
                    - <string>
                  assigned_comments: <boolean>
                  unassigned_tasks: <boolean>
                settings:
                  show_task_locations: <boolean>
                  show_subtasks: <integer>
                  show_subtask_parent_names: <boolean>
                  show_closed_subtasks: <boolean>
                  show_assignees: <boolean>
                  show_images: <boolean>
                  collapse_empty_columns: <string,null>
                  me_comments: <boolean>
                  me_subtasks: <boolean>
                  me_checklists: <boolean>
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: view_id
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                view:
                  id: <string>
                  name: <string>
                  type: <string>
                  parent:
                    id: <string>
                    type: <integer>
                  grouping:
                    field: <string>
                    dir: <integer>
                    collapsed:
                      - <string>
                      - <string>
                    ignore: <boolean>
                  divide:
                    collapsed: <boolean>
                    field: <null>
                    dir: <null>
                  sorting:
                    fields:
                      - <string>
                      - <string>
                  filters:
                    op: <string>
                    fields:
                      - <string>
                      - <string>
                    search: <string>
                    show_closed: <boolean>
                  columns:
                    fields:
                      - <string>
                      - <string>
                  team_sidebar:
                    assignees:
                      - <string>
                      - <string>
                    assigned_comments: <boolean>
                    unassigned_tasks: <boolean>
                  settings:
                    show_task_locations: <boolean>
                    show_subtasks: <integer>
                    show_subtask_parent_names: <boolean>
                    show_closed_subtasks: <boolean>
                    show_assignees: <boolean>
                    show_images: <boolean>
                    collapse_empty_columns: <string,null>
                    me_comments: <boolean>
                    me_subtasks: <boolean>
                    me_checklists: <boolean>
    delete:
      tags:
        - Views
      summary: Delete View
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: view_id
          in: path
          schema:
            type: string
          required: true
          description: (Required) 105 (string)
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example: {}
  /v2/view/{view_id}/task:
    get:
      tags:
        - Views
      summary: Get View Tasks
      description: See all visible tasks in a view in ClickUp.
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: page
          in: query
          schema:
            type: string
          description: '(Required) '
          example: <integer>
        - name: view_id
          in: path
          schema:
            type: string
          required: true
          description: (Required) 105 (string)
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                tasks:
                  - id: <string>
                    custom_item_id: <number,null>
                    name: <string>
                    status:
                      status: <string>
                      color: <string>
                      orderindex: <integer>
                      type: <string>
                    orderindex: <string>
                    date_created: <string>
                    date_updated: <string>
                    date_closed: <string,null>
                    date_done: <string,null>
                    creator:
                      id: <integer>
                      username: <string>
                      color: <string>
                      profilePicture: <string>
                    assignees:
                      - <string>
                      - <string>
                    watchers:
                      - <string>
                      - <string>
                    checklists:
                      - <string>
                      - <string>
                    tags:
                      - <string>
                      - <string>
                    parent: <string,null>
                    priority: <string,null>
                    due_date: <string,null>
                    start_date: <string,null>
                    points: <number>
                    time_estimate: <string,null>
                    time_spent: <string,null>
                    list:
                      id: <string>
                    folder:
                      id: <string>
                    space:
                      id: <string>
                    url: <string>
                    markdown_description: <string>
                    custom_fields:
                      id: <string>
                      name: <string>
                      type: <string>
                      type_config:
                        single_user: <boolean>
                        include_groups: <boolean>
                        include_guests: <boolean>
                        include_team_members: <boolean>
                      date_created: <string>
                      hide_from_guests: <boolean>
                      value:
                        id: <integer>
                        username: <string>
                        email: <string>
                        color: <string>
                        initials: <string>
                        profilePicture: <string,null>
                      value_richtext: <string>
                      value_markdown: <string>
                      required: <boolean>
                  - id: <string>
                    custom_item_id: <number,null>
                    name: <string>
                    status:
                      status: <string>
                      color: <string>
                      orderindex: <integer>
                      type: <string>
                    orderindex: <string>
                    date_created: <string>
                    date_updated: <string>
                    date_closed: <string,null>
                    date_done: <string,null>
                    creator:
                      id: <integer>
                      username: <string>
                      color: <string>
                      profilePicture: <string>
                    assignees:
                      - <string>
                      - <string>
                    watchers:
                      - <string>
                      - <string>
                    checklists:
                      - <string>
                      - <string>
                    tags:
                      - <string>
                      - <string>
                    parent: <string,null>
                    priority: <string,null>
                    due_date: <string,null>
                    start_date: <string,null>
                    points: <number>
                    time_estimate: <string,null>
                    time_spent: <string,null>
                    list:
                      id: <string>
                    folder:
                      id: <string>
                    space:
                      id: <string>
                    url: <string>
                    markdown_description: <string>
                    custom_fields:
                      id: <string>
                      name: <string>
                      type: <string>
                      type_config:
                        single_user: <boolean>
                        include_groups: <boolean>
                        include_guests: <boolean>
                        include_team_members: <boolean>
                      date_created: <string>
                      hide_from_guests: <boolean>
                      value:
                        id: <integer>
                        username: <string>
                        email: <string>
                        color: <string>
                        initials: <string>
                        profilePicture: <string,null>
                      value_richtext: <string>
                      value_markdown: <string>
                      required: <boolean>
                last_page: <boolean>
  /v2/team/{team_id}/webhook:
    get:
      tags:
        - Webhooks
      summary: Get Webhooks
      description: >-
        View the webhooks created via the API for a Workspace. This endpoint
        returns webhooks created by the authenticated user.
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: team_id
          in: path
          schema:
            type: string
          required: true
          description: (Required) Workspace ID
          example: <number>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                webhooks:
                  - id: <string>
                    userid: <integer>
                    team_id: <integer>
                    endpoint: <string>
                    client_id: <string>
                    events:
                      - <string>
                      - <string>
                    task_id: <string,null>
                    list_id: <string,null>
                    folder_id: <string,null>
                    space_id: <string,null>
                    health:
                      status: <string>
                      fail_count: <integer>
                    secret: <string>
                  - id: <string>
                    userid: <integer>
                    team_id: <integer>
                    endpoint: <string>
                    client_id: <string>
                    events:
                      - <string>
                      - <string>
                    task_id: <string,null>
                    list_id: <string,null>
                    folder_id: <string,null>
                    space_id: <string,null>
                    health:
                      status: <string>
                      fail_count: <integer>
                    secret: <string>
    post:
      tags:
        - Webhooks
      summary: Create Webhook
      description: >-
        Set up a webhook to monitor for events.<br> We do not have a dedicated
        IP address for webhooks. We use our domain name and dynamic addressing.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                endpoint: <string>
                events:
                  - <string>
                  - <string>
                space_id: <integer>
                folder_id: <integer>
                list_id: <integer>
                task_id: <string>
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: team_id
          in: path
          schema:
            type: string
          required: true
          description: (Required) Workspace ID
          example: <number>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                id: <string>
                webhook:
                  id: <string>
                  userid: <integer>
                  team_id: <integer>
                  endpoint: <string>
                  client_id: <string>
                  events:
                    - <string>
                    - <string>
                  task_id: <string,null>
                  list_id: <string,null>
                  folder_id: <string,null>
                  space_id: <string,null>
                  health:
                    status: <string>
                    fail_count: <integer>
                  secret: <string>
  /v2/webhook/{webhook_id}:
    put:
      tags:
        - Webhooks
      summary: Update Webhook
      description: Update a webhook to change the events to be monitored.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                endpoint: <string>
                events: <string>
                status: <string>
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: webhook_id
          in: path
          schema:
            type: string
          required: true
          description: (Required) e506-4a29-9d42-26e504e3435e (uuid)
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                id: <string>
                webhook:
                  id: <string>
                  userid: <integer>
                  team_id: <integer>
                  endpoint: <string>
                  client_id: <string>
                  events:
                    - <string>
                    - <string>
                  task_id: <string,null>
                  list_id: <string,null>
                  folder_id: <string,null>
                  space_id: <string,null>
                  health:
                    status: <string>
                    fail_count: <integer>
                  secret: <string>
    delete:
      tags:
        - Webhooks
      summary: Delete Webhook
      description: >-
        Delete a webhook to stop monitoring the events and locations of the
        webhook.
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: webhook_id
          in: path
          schema:
            type: string
          required: true
          description: (Required) e506-4a29-9d42-26e504e3435e (uuid)
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example: {}
